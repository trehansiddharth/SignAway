ARM GAS  C:\Users\trehans\AppData\Local\Temp\ccSsDmq0.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"SPI.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	SPI_initVar
  18              		.bss
  19              		.type	SPI_initVar, %object
  20              		.size	SPI_initVar, 1
  21              	SPI_initVar:
  22 0000 00       		.space	1
  23              		.comm	SPI_swStatusTx,1,1
  24              		.comm	SPI_swStatusRx,1,1
  25              		.section	.text.SPI_Init,"ax",%progbits
  26              		.align	2
  27              		.global	SPI_Init
  28              		.code	16
  29              		.thumb_func
  30              		.type	SPI_Init, %function
  31              	SPI_Init:
  32              	.LFB0:
  33              		.file 1 ".\\Generated_Source\\PSoC4\\SPI.c"
   1:.\Generated_Source\PSoC4/SPI.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/SPI.c **** * File Name: SPI.c
   3:.\Generated_Source\PSoC4/SPI.c **** * Version 2.60
   4:.\Generated_Source\PSoC4/SPI.c **** *
   5:.\Generated_Source\PSoC4/SPI.c **** * Description:
   6:.\Generated_Source\PSoC4/SPI.c **** *  This file provides all API functionality of the SPI Slave component.
   7:.\Generated_Source\PSoC4/SPI.c **** *
   8:.\Generated_Source\PSoC4/SPI.c **** * Note:
   9:.\Generated_Source\PSoC4/SPI.c **** *  None.
  10:.\Generated_Source\PSoC4/SPI.c **** *
  11:.\Generated_Source\PSoC4/SPI.c **** ********************************************************************************
  12:.\Generated_Source\PSoC4/SPI.c **** * Copyright 2008-2013, Cypress Semiconductor Corporation.  All rights reserved.
  13:.\Generated_Source\PSoC4/SPI.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:.\Generated_Source\PSoC4/SPI.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:.\Generated_Source\PSoC4/SPI.c **** * the software package with which this file was provided.
  16:.\Generated_Source\PSoC4/SPI.c **** *******************************************************************************/
  17:.\Generated_Source\PSoC4/SPI.c **** 
  18:.\Generated_Source\PSoC4/SPI.c **** #include "SPI_PVT.h"
  19:.\Generated_Source\PSoC4/SPI.c **** 
  20:.\Generated_Source\PSoC4/SPI.c **** #if (SPI_TX_SOFTWARE_BUF_ENABLED)
  21:.\Generated_Source\PSoC4/SPI.c **** 
  22:.\Generated_Source\PSoC4/SPI.c ****     volatile uint16 SPI_txBuffer[SPI_TX_BUFFER_SIZE] = {0u};
  23:.\Generated_Source\PSoC4/SPI.c ****     volatile uint8 SPI_txBufferRead;
  24:.\Generated_Source\PSoC4/SPI.c ****     volatile uint8 SPI_txBufferWrite;
ARM GAS  C:\Users\trehans\AppData\Local\Temp\ccSsDmq0.s 			page 2


  25:.\Generated_Source\PSoC4/SPI.c ****     volatile uint8 SPI_txBufferFull;
  26:.\Generated_Source\PSoC4/SPI.c **** 
  27:.\Generated_Source\PSoC4/SPI.c **** #endif /* SPI_TX_SOFTWARE_BUF_ENABLED*/
  28:.\Generated_Source\PSoC4/SPI.c **** 
  29:.\Generated_Source\PSoC4/SPI.c **** #if (SPI_RX_SOFTWARE_BUF_ENABLED)
  30:.\Generated_Source\PSoC4/SPI.c **** 
  31:.\Generated_Source\PSoC4/SPI.c ****     volatile uint16 SPI_rxBuffer[SPI_RX_BUFFER_SIZE] = {0u};
  32:.\Generated_Source\PSoC4/SPI.c ****     volatile uint8 SPI_rxBufferRead;
  33:.\Generated_Source\PSoC4/SPI.c ****     volatile uint8 SPI_rxBufferWrite;
  34:.\Generated_Source\PSoC4/SPI.c ****     volatile uint8 SPI_rxBufferFull;
  35:.\Generated_Source\PSoC4/SPI.c **** 
  36:.\Generated_Source\PSoC4/SPI.c **** #endif /* SPI_RX_SOFTWARE_BUF_ENABLED */
  37:.\Generated_Source\PSoC4/SPI.c **** 
  38:.\Generated_Source\PSoC4/SPI.c **** uint8 SPI_initVar = 0u;
  39:.\Generated_Source\PSoC4/SPI.c **** 
  40:.\Generated_Source\PSoC4/SPI.c **** volatile uint8 SPI_swStatusTx;
  41:.\Generated_Source\PSoC4/SPI.c **** volatile uint8 SPI_swStatusRx;
  42:.\Generated_Source\PSoC4/SPI.c **** 
  43:.\Generated_Source\PSoC4/SPI.c **** 
  44:.\Generated_Source\PSoC4/SPI.c **** /*******************************************************************************
  45:.\Generated_Source\PSoC4/SPI.c **** * Function Name: SPI_Init
  46:.\Generated_Source\PSoC4/SPI.c **** ********************************************************************************
  47:.\Generated_Source\PSoC4/SPI.c **** *
  48:.\Generated_Source\PSoC4/SPI.c **** * Summary:
  49:.\Generated_Source\PSoC4/SPI.c **** *  Inits/Restores default SPIS configuration provided with customizer.
  50:.\Generated_Source\PSoC4/SPI.c **** *
  51:.\Generated_Source\PSoC4/SPI.c **** * Parameters:
  52:.\Generated_Source\PSoC4/SPI.c **** *  None.
  53:.\Generated_Source\PSoC4/SPI.c **** *
  54:.\Generated_Source\PSoC4/SPI.c **** * Return:
  55:.\Generated_Source\PSoC4/SPI.c **** *  None.
  56:.\Generated_Source\PSoC4/SPI.c **** *
  57:.\Generated_Source\PSoC4/SPI.c **** * Side Effects:
  58:.\Generated_Source\PSoC4/SPI.c **** *  When this function is called it initializes all of the necessary parameters
  59:.\Generated_Source\PSoC4/SPI.c **** *  for execution. i.e. setting the initial interrupt mask, configuring the
  60:.\Generated_Source\PSoC4/SPI.c **** *  interrupt service routine, configuring the bit-counter parameters and
  61:.\Generated_Source\PSoC4/SPI.c **** *  clearing the FIFO and Status Register.
  62:.\Generated_Source\PSoC4/SPI.c **** *
  63:.\Generated_Source\PSoC4/SPI.c **** * Reentrant:
  64:.\Generated_Source\PSoC4/SPI.c **** *  No.
  65:.\Generated_Source\PSoC4/SPI.c **** *
  66:.\Generated_Source\PSoC4/SPI.c **** *******************************************************************************/
  67:.\Generated_Source\PSoC4/SPI.c **** void SPI_Init(void) 
  68:.\Generated_Source\PSoC4/SPI.c **** {
  34              		.loc 1 68 0
  35              		.cfi_startproc
  36 0000 80B5     		push	{r7, lr}
  37              	.LCFI0:
  38              		.cfi_def_cfa_offset 8
  39              		.cfi_offset 7, -8
  40              		.cfi_offset 14, -4
  41 0002 00AF     		add	r7, sp, #0
  42              	.LCFI1:
  43              		.cfi_def_cfa_register 7
  69:.\Generated_Source\PSoC4/SPI.c ****     /*Initialize the Bit counter */
  70:.\Generated_Source\PSoC4/SPI.c ****     SPI_COUNTER_PERIOD_REG = SPI_BITCTR_INIT;
  44              		.loc 1 70 0
ARM GAS  C:\Users\trehans\AppData\Local\Temp\ccSsDmq0.s 			page 3


  45 0004 0E4B     		ldr	r3, .L2
  46 0006 0F22     		mov	r2, #15
  47 0008 1A70     		strb	r2, [r3]
  71:.\Generated_Source\PSoC4/SPI.c **** 
  72:.\Generated_Source\PSoC4/SPI.c ****     /* ISR initialization */
  73:.\Generated_Source\PSoC4/SPI.c ****     #if(SPI_INTERNAL_TX_INT_ENABLED)
  74:.\Generated_Source\PSoC4/SPI.c **** 
  75:.\Generated_Source\PSoC4/SPI.c ****         CyIntDisable(SPI_TX_ISR_NUMBER);
  76:.\Generated_Source\PSoC4/SPI.c **** 
  77:.\Generated_Source\PSoC4/SPI.c ****         /* Set the ISR to point to the SPI_isr Interrupt. */
  78:.\Generated_Source\PSoC4/SPI.c ****         (void)CyIntSetVector(SPI_TX_ISR_NUMBER, &SPI_TX_ISR);
  79:.\Generated_Source\PSoC4/SPI.c **** 
  80:.\Generated_Source\PSoC4/SPI.c ****         /* Set the priority. */
  81:.\Generated_Source\PSoC4/SPI.c ****         CyIntSetPriority(SPI_TX_ISR_NUMBER, SPI_TX_ISR_PRIORITY);
  82:.\Generated_Source\PSoC4/SPI.c **** 
  83:.\Generated_Source\PSoC4/SPI.c ****     #endif /* SPI_INTERNAL_TX_INT_ENABLED */
  84:.\Generated_Source\PSoC4/SPI.c **** 
  85:.\Generated_Source\PSoC4/SPI.c ****     #if(SPI_INTERNAL_RX_INT_ENABLED)
  86:.\Generated_Source\PSoC4/SPI.c **** 
  87:.\Generated_Source\PSoC4/SPI.c ****         CyIntDisable(SPI_RX_ISR_NUMBER);
  48              		.loc 1 87 0
  49 000a 0020     		mov	r0, #0
  50 000c FFF7FEFF 		bl	CyIntDisable
  88:.\Generated_Source\PSoC4/SPI.c **** 
  89:.\Generated_Source\PSoC4/SPI.c ****         /* Set the ISR to point to the SPI_isr Interrupt. */
  90:.\Generated_Source\PSoC4/SPI.c ****         (void)CyIntSetVector(SPI_RX_ISR_NUMBER, &SPI_RX_ISR);
  51              		.loc 1 90 0
  52 0010 0C4B     		ldr	r3, .L2+4
  53 0012 0020     		mov	r0, #0
  54 0014 191C     		mov	r1, r3
  55 0016 FFF7FEFF 		bl	CyIntSetVector
  91:.\Generated_Source\PSoC4/SPI.c **** 
  92:.\Generated_Source\PSoC4/SPI.c ****         /* Set the priority. */
  93:.\Generated_Source\PSoC4/SPI.c ****         CyIntSetPriority(SPI_RX_ISR_NUMBER, SPI_RX_ISR_PRIORITY);
  56              		.loc 1 93 0
  57 001a 0020     		mov	r0, #0
  58 001c 0321     		mov	r1, #3
  59 001e FFF7FEFF 		bl	CyIntSetPriority
  94:.\Generated_Source\PSoC4/SPI.c **** 
  95:.\Generated_Source\PSoC4/SPI.c ****     #endif /* SPI_INTERNAL_RX_INT_ENABLED */
  96:.\Generated_Source\PSoC4/SPI.c **** 
  97:.\Generated_Source\PSoC4/SPI.c ****     /* Clear any stray data from the RX and TX FIFO */
  98:.\Generated_Source\PSoC4/SPI.c ****     SPI_ClearFIFO();
  60              		.loc 1 98 0
  61 0022 FFF7FEFF 		bl	SPI_ClearFIFO
  99:.\Generated_Source\PSoC4/SPI.c **** 
 100:.\Generated_Source\PSoC4/SPI.c ****     #if(SPI_RX_SOFTWARE_BUF_ENABLED)
 101:.\Generated_Source\PSoC4/SPI.c ****         SPI_txBufferFull = 0u;
 102:.\Generated_Source\PSoC4/SPI.c ****         SPI_rxBufferRead = 0u;
 103:.\Generated_Source\PSoC4/SPI.c ****         SPI_rxBufferWrite = 0u;
 104:.\Generated_Source\PSoC4/SPI.c ****     #endif /* SPI_RX_SOFTWARE_BUF_ENABLED */
 105:.\Generated_Source\PSoC4/SPI.c **** 
 106:.\Generated_Source\PSoC4/SPI.c ****     #if(SPI_TX_SOFTWARE_BUF_ENABLED)
 107:.\Generated_Source\PSoC4/SPI.c ****         SPI_txBufferFull = 0u;
 108:.\Generated_Source\PSoC4/SPI.c ****         SPI_txBufferRead = 0u;
 109:.\Generated_Source\PSoC4/SPI.c ****         SPI_txBufferWrite = 0u;
 110:.\Generated_Source\PSoC4/SPI.c ****     #endif /* SPI_TX_SOFTWARE_BUF_ENABLED */
ARM GAS  C:\Users\trehans\AppData\Local\Temp\ccSsDmq0.s 			page 4


 111:.\Generated_Source\PSoC4/SPI.c **** 
 112:.\Generated_Source\PSoC4/SPI.c ****     (void) SPI_ReadTxStatus(); /* Clear any pending status bits */
  62              		.loc 1 112 0
  63 0026 FFF7FEFF 		bl	SPI_ReadTxStatus
 113:.\Generated_Source\PSoC4/SPI.c ****     (void) SPI_ReadRxStatus(); /* Clear any pending status bits */
  64              		.loc 1 113 0
  65 002a FFF7FEFF 		bl	SPI_ReadRxStatus
 114:.\Generated_Source\PSoC4/SPI.c **** 
 115:.\Generated_Source\PSoC4/SPI.c **** 
 116:.\Generated_Source\PSoC4/SPI.c ****     /* Configure the Initial interrupt mask */
 117:.\Generated_Source\PSoC4/SPI.c ****     #if (SPI_TX_SOFTWARE_BUF_ENABLED)
 118:.\Generated_Source\PSoC4/SPI.c ****         SPI_TX_STATUS_MASK_REG  = (SPI_TX_INIT_INTERRUPTS_MASK &
 119:.\Generated_Source\PSoC4/SPI.c ****                                                 (uint8)~SPI_STS_TX_FIFO_NOT_FULL);
 120:.\Generated_Source\PSoC4/SPI.c ****     #else /* SPI_TX_SOFTWARE_BUF_ENABLED */
 121:.\Generated_Source\PSoC4/SPI.c ****         SPI_TX_STATUS_MASK_REG  = SPI_TX_INIT_INTERRUPTS_MASK;
  66              		.loc 1 121 0
  67 002e 064B     		ldr	r3, .L2+8
  68 0030 0022     		mov	r2, #0
  69 0032 1A70     		strb	r2, [r3]
 122:.\Generated_Source\PSoC4/SPI.c ****     #endif /* SPI_TX_SOFTWARE_BUF_ENABLED */
 123:.\Generated_Source\PSoC4/SPI.c **** 
 124:.\Generated_Source\PSoC4/SPI.c ****     SPI_RX_STATUS_MASK_REG  = SPI_RX_INIT_INTERRUPTS_MASK;
  70              		.loc 1 124 0
  71 0034 054B     		ldr	r3, .L2+12
  72 0036 0822     		mov	r2, #8
  73 0038 1A70     		strb	r2, [r3]
 125:.\Generated_Source\PSoC4/SPI.c **** 
 126:.\Generated_Source\PSoC4/SPI.c **** }
  74              		.loc 1 126 0
  75 003a BD46     		mov	sp, r7
  76              		@ sp needed for prologue
  77 003c 80BD     		pop	{r7, pc}
  78              	.L3:
  79 003e C046     		.align	2
  80              	.L2:
  81 0040 82000F40 		.word	1074724994
  82 0044 00000000 		.word	SPI_RX_ISR
  83 0048 83000F40 		.word	1074724995
  84 004c 81000F40 		.word	1074724993
  85              		.cfi_endproc
  86              	.LFE0:
  87              		.size	SPI_Init, .-SPI_Init
  88              		.section	.text.SPI_Enable,"ax",%progbits
  89              		.align	2
  90              		.global	SPI_Enable
  91              		.code	16
  92              		.thumb_func
  93              		.type	SPI_Enable, %function
  94              	SPI_Enable:
  95              	.LFB1:
 127:.\Generated_Source\PSoC4/SPI.c **** 
 128:.\Generated_Source\PSoC4/SPI.c **** 
 129:.\Generated_Source\PSoC4/SPI.c **** /*******************************************************************************
 130:.\Generated_Source\PSoC4/SPI.c **** * Function Name: SPI_Enable
 131:.\Generated_Source\PSoC4/SPI.c **** ********************************************************************************
 132:.\Generated_Source\PSoC4/SPI.c **** *
 133:.\Generated_Source\PSoC4/SPI.c **** * Summary:
ARM GAS  C:\Users\trehans\AppData\Local\Temp\ccSsDmq0.s 			page 5


 134:.\Generated_Source\PSoC4/SPI.c **** *  Enable SPIS component.
 135:.\Generated_Source\PSoC4/SPI.c **** *
 136:.\Generated_Source\PSoC4/SPI.c **** * Parameters:
 137:.\Generated_Source\PSoC4/SPI.c **** *  None.
 138:.\Generated_Source\PSoC4/SPI.c **** *
 139:.\Generated_Source\PSoC4/SPI.c **** * Return:
 140:.\Generated_Source\PSoC4/SPI.c **** *  None.
 141:.\Generated_Source\PSoC4/SPI.c **** *
 142:.\Generated_Source\PSoC4/SPI.c **** *******************************************************************************/
 143:.\Generated_Source\PSoC4/SPI.c **** void SPI_Enable(void) 
 144:.\Generated_Source\PSoC4/SPI.c **** {
  96              		.loc 1 144 0
  97              		.cfi_startproc
  98 0000 90B5     		push	{r4, r7, lr}
  99              	.LCFI2:
 100              		.cfi_def_cfa_offset 12
 101              		.cfi_offset 4, -12
 102              		.cfi_offset 7, -8
 103              		.cfi_offset 14, -4
 104 0002 83B0     		sub	sp, sp, #12
 105              	.LCFI3:
 106              		.cfi_def_cfa_offset 24
 107 0004 00AF     		add	r7, sp, #0
 108              	.LCFI4:
 109              		.cfi_def_cfa_register 7
 145:.\Generated_Source\PSoC4/SPI.c ****     uint8 enableInterrupts;
 146:.\Generated_Source\PSoC4/SPI.c ****     enableInterrupts = CyEnterCriticalSection();
 110              		.loc 1 146 0
 111 0006 FC1D     		add	r4, r7, #7
 112 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 113 000c 031C     		mov	r3, r0
 114 000e 2370     		strb	r3, [r4]
 147:.\Generated_Source\PSoC4/SPI.c **** 
 148:.\Generated_Source\PSoC4/SPI.c ****     SPI_COUNTER_CONTROL_REG |= SPI_CNTR_ENABLE;
 115              		.loc 1 148 0
 116 0010 114B     		ldr	r3, .L5
 117 0012 114A     		ldr	r2, .L5
 118 0014 1278     		ldrb	r2, [r2]
 119 0016 D2B2     		uxtb	r2, r2
 120 0018 2021     		mov	r1, #32
 121 001a 0A43     		orr	r2, r1
 122 001c D2B2     		uxtb	r2, r2
 123 001e 1A70     		strb	r2, [r3]
 149:.\Generated_Source\PSoC4/SPI.c ****     SPI_TX_STATUS_ACTL_REG |= SPI_INT_ENABLE;
 124              		.loc 1 149 0
 125 0020 0E4B     		ldr	r3, .L5+4
 126 0022 0E4A     		ldr	r2, .L5+4
 127 0024 1278     		ldrb	r2, [r2]
 128 0026 D2B2     		uxtb	r2, r2
 129 0028 1021     		mov	r1, #16
 130 002a 0A43     		orr	r2, r1
 131 002c D2B2     		uxtb	r2, r2
 132 002e 1A70     		strb	r2, [r3]
 150:.\Generated_Source\PSoC4/SPI.c ****     SPI_RX_STATUS_ACTL_REG |= SPI_INT_ENABLE;
 133              		.loc 1 150 0
 134 0030 0B4B     		ldr	r3, .L5+8
 135 0032 0B4A     		ldr	r2, .L5+8
ARM GAS  C:\Users\trehans\AppData\Local\Temp\ccSsDmq0.s 			page 6


 136 0034 1278     		ldrb	r2, [r2]
 137 0036 D2B2     		uxtb	r2, r2
 138 0038 1021     		mov	r1, #16
 139 003a 0A43     		orr	r2, r1
 140 003c D2B2     		uxtb	r2, r2
 141 003e 1A70     		strb	r2, [r3]
 151:.\Generated_Source\PSoC4/SPI.c **** 
 152:.\Generated_Source\PSoC4/SPI.c ****     CyExitCriticalSection(enableInterrupts);
 142              		.loc 1 152 0
 143 0040 FB1D     		add	r3, r7, #7
 144 0042 1B78     		ldrb	r3, [r3]
 145 0044 181C     		mov	r0, r3
 146 0046 FFF7FEFF 		bl	CyExitCriticalSection
 153:.\Generated_Source\PSoC4/SPI.c **** 
 154:.\Generated_Source\PSoC4/SPI.c ****     #if(SPI_INTERNAL_TX_INT_ENABLED)
 155:.\Generated_Source\PSoC4/SPI.c ****         CyIntEnable(SPI_TX_ISR_NUMBER);
 156:.\Generated_Source\PSoC4/SPI.c ****     #endif /* SPI_INTERNAL_TX_INT_ENABLED */
 157:.\Generated_Source\PSoC4/SPI.c **** 
 158:.\Generated_Source\PSoC4/SPI.c ****     #if(SPI_INTERNAL_RX_INT_ENABLED)
 159:.\Generated_Source\PSoC4/SPI.c ****         CyIntEnable(SPI_RX_ISR_NUMBER);
 147              		.loc 1 159 0
 148 004a 0020     		mov	r0, #0
 149 004c FFF7FEFF 		bl	CyIntEnable
 160:.\Generated_Source\PSoC4/SPI.c ****     #endif /* SPI_INTERNAL_RX_INT_ENABLED */
 161:.\Generated_Source\PSoC4/SPI.c **** }
 150              		.loc 1 161 0
 151 0050 BD46     		mov	sp, r7
 152 0052 03B0     		add	sp, sp, #12
 153              		@ sp needed for prologue
 154 0054 90BD     		pop	{r4, r7, pc}
 155              	.L6:
 156 0056 C046     		.align	2
 157              	.L5:
 158 0058 92000F40 		.word	1074725010
 159 005c 93000F40 		.word	1074725011
 160 0060 91000F40 		.word	1074725009
 161              		.cfi_endproc
 162              	.LFE1:
 163              		.size	SPI_Enable, .-SPI_Enable
 164              		.section	.text.SPI_Start,"ax",%progbits
 165              		.align	2
 166              		.global	SPI_Start
 167              		.code	16
 168              		.thumb_func
 169              		.type	SPI_Start, %function
 170              	SPI_Start:
 171              	.LFB2:
 162:.\Generated_Source\PSoC4/SPI.c **** 
 163:.\Generated_Source\PSoC4/SPI.c **** 
 164:.\Generated_Source\PSoC4/SPI.c **** /*******************************************************************************
 165:.\Generated_Source\PSoC4/SPI.c **** * Function Name: SPI_Start
 166:.\Generated_Source\PSoC4/SPI.c **** ********************************************************************************
 167:.\Generated_Source\PSoC4/SPI.c **** *
 168:.\Generated_Source\PSoC4/SPI.c **** * Summary:
 169:.\Generated_Source\PSoC4/SPI.c **** *  Initialize and Enable the SPI Slave component.
 170:.\Generated_Source\PSoC4/SPI.c **** *
 171:.\Generated_Source\PSoC4/SPI.c **** * Parameters:
ARM GAS  C:\Users\trehans\AppData\Local\Temp\ccSsDmq0.s 			page 7


 172:.\Generated_Source\PSoC4/SPI.c **** *  None.
 173:.\Generated_Source\PSoC4/SPI.c **** *
 174:.\Generated_Source\PSoC4/SPI.c **** * Return:
 175:.\Generated_Source\PSoC4/SPI.c **** *  None.
 176:.\Generated_Source\PSoC4/SPI.c **** *
 177:.\Generated_Source\PSoC4/SPI.c **** * Global variables:
 178:.\Generated_Source\PSoC4/SPI.c **** *  SPI_initVar - used to check initial configuration, modified on
 179:.\Generated_Source\PSoC4/SPI.c **** *  first function call.
 180:.\Generated_Source\PSoC4/SPI.c **** *
 181:.\Generated_Source\PSoC4/SPI.c **** * Theory:
 182:.\Generated_Source\PSoC4/SPI.c **** *  Enable the clock input to enable operation.
 183:.\Generated_Source\PSoC4/SPI.c **** *
 184:.\Generated_Source\PSoC4/SPI.c **** * Reentrant:
 185:.\Generated_Source\PSoC4/SPI.c **** *  No.
 186:.\Generated_Source\PSoC4/SPI.c **** *
 187:.\Generated_Source\PSoC4/SPI.c **** *******************************************************************************/
 188:.\Generated_Source\PSoC4/SPI.c **** void SPI_Start(void) 
 189:.\Generated_Source\PSoC4/SPI.c **** {
 172              		.loc 1 189 0
 173              		.cfi_startproc
 174 0000 80B5     		push	{r7, lr}
 175              	.LCFI5:
 176              		.cfi_def_cfa_offset 8
 177              		.cfi_offset 7, -8
 178              		.cfi_offset 14, -4
 179 0002 00AF     		add	r7, sp, #0
 180              	.LCFI6:
 181              		.cfi_def_cfa_register 7
 190:.\Generated_Source\PSoC4/SPI.c ****     if(SPI_initVar == 0u)
 182              		.loc 1 190 0
 183 0004 064B     		ldr	r3, .L9
 184 0006 1B78     		ldrb	r3, [r3]
 185 0008 002B     		cmp	r3, #0
 186 000a 04D1     		bne	.L8
 191:.\Generated_Source\PSoC4/SPI.c ****     {
 192:.\Generated_Source\PSoC4/SPI.c ****         SPI_Init();
 187              		.loc 1 192 0
 188 000c FFF7FEFF 		bl	SPI_Init
 193:.\Generated_Source\PSoC4/SPI.c ****         SPI_initVar = 1u;
 189              		.loc 1 193 0
 190 0010 034B     		ldr	r3, .L9
 191 0012 0122     		mov	r2, #1
 192 0014 1A70     		strb	r2, [r3]
 193              	.L8:
 194:.\Generated_Source\PSoC4/SPI.c ****     }
 195:.\Generated_Source\PSoC4/SPI.c **** 
 196:.\Generated_Source\PSoC4/SPI.c ****     SPI_Enable();
 194              		.loc 1 196 0
 195 0016 FFF7FEFF 		bl	SPI_Enable
 197:.\Generated_Source\PSoC4/SPI.c **** }
 196              		.loc 1 197 0
 197 001a BD46     		mov	sp, r7
 198              		@ sp needed for prologue
 199 001c 80BD     		pop	{r7, pc}
 200              	.L10:
 201 001e C046     		.align	2
 202              	.L9:
ARM GAS  C:\Users\trehans\AppData\Local\Temp\ccSsDmq0.s 			page 8


 203 0020 00000000 		.word	SPI_initVar
 204              		.cfi_endproc
 205              	.LFE2:
 206              		.size	SPI_Start, .-SPI_Start
 207              		.section	.text.SPI_Stop,"ax",%progbits
 208              		.align	2
 209              		.global	SPI_Stop
 210              		.code	16
 211              		.thumb_func
 212              		.type	SPI_Stop, %function
 213              	SPI_Stop:
 214              	.LFB3:
 198:.\Generated_Source\PSoC4/SPI.c **** 
 199:.\Generated_Source\PSoC4/SPI.c **** 
 200:.\Generated_Source\PSoC4/SPI.c **** /*******************************************************************************
 201:.\Generated_Source\PSoC4/SPI.c **** * Function Name: SPI_Stop
 202:.\Generated_Source\PSoC4/SPI.c **** ********************************************************************************
 203:.\Generated_Source\PSoC4/SPI.c **** *
 204:.\Generated_Source\PSoC4/SPI.c **** * Summary:
 205:.\Generated_Source\PSoC4/SPI.c **** *  Disable the SPI Slave component.
 206:.\Generated_Source\PSoC4/SPI.c **** *
 207:.\Generated_Source\PSoC4/SPI.c **** * Parameters:
 208:.\Generated_Source\PSoC4/SPI.c **** *  None.
 209:.\Generated_Source\PSoC4/SPI.c **** *
 210:.\Generated_Source\PSoC4/SPI.c **** * Return:
 211:.\Generated_Source\PSoC4/SPI.c **** *  None.
 212:.\Generated_Source\PSoC4/SPI.c **** *
 213:.\Generated_Source\PSoC4/SPI.c **** * Theory:
 214:.\Generated_Source\PSoC4/SPI.c **** *  Disable the internal interrupt if one is used.
 215:.\Generated_Source\PSoC4/SPI.c **** *
 216:.\Generated_Source\PSoC4/SPI.c **** *******************************************************************************/
 217:.\Generated_Source\PSoC4/SPI.c **** void SPI_Stop(void) 
 218:.\Generated_Source\PSoC4/SPI.c **** {
 215              		.loc 1 218 0
 216              		.cfi_startproc
 217 0000 90B5     		push	{r4, r7, lr}
 218              	.LCFI7:
 219              		.cfi_def_cfa_offset 12
 220              		.cfi_offset 4, -12
 221              		.cfi_offset 7, -8
 222              		.cfi_offset 14, -4
 223 0002 83B0     		sub	sp, sp, #12
 224              	.LCFI8:
 225              		.cfi_def_cfa_offset 24
 226 0004 00AF     		add	r7, sp, #0
 227              	.LCFI9:
 228              		.cfi_def_cfa_register 7
 219:.\Generated_Source\PSoC4/SPI.c ****     uint8 enableInterrupts;
 220:.\Generated_Source\PSoC4/SPI.c ****     enableInterrupts = CyEnterCriticalSection();
 229              		.loc 1 220 0
 230 0006 FC1D     		add	r4, r7, #7
 231 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 232 000c 031C     		mov	r3, r0
 233 000e 2370     		strb	r3, [r4]
 221:.\Generated_Source\PSoC4/SPI.c **** 
 222:.\Generated_Source\PSoC4/SPI.c ****     SPI_TX_STATUS_ACTL_REG &= (uint8)~SPI_INT_ENABLE;
 234              		.loc 1 222 0
ARM GAS  C:\Users\trehans\AppData\Local\Temp\ccSsDmq0.s 			page 9


 235 0010 0D4B     		ldr	r3, .L12
 236 0012 0D4A     		ldr	r2, .L12
 237 0014 1278     		ldrb	r2, [r2]
 238 0016 D2B2     		uxtb	r2, r2
 239 0018 1021     		mov	r1, #16
 240 001a 8A43     		bic	r2, r1
 241 001c D2B2     		uxtb	r2, r2
 242 001e 1A70     		strb	r2, [r3]
 223:.\Generated_Source\PSoC4/SPI.c ****     SPI_RX_STATUS_ACTL_REG &= (uint8)~SPI_INT_ENABLE;
 243              		.loc 1 223 0
 244 0020 0A4B     		ldr	r3, .L12+4
 245 0022 0A4A     		ldr	r2, .L12+4
 246 0024 1278     		ldrb	r2, [r2]
 247 0026 D2B2     		uxtb	r2, r2
 248 0028 1021     		mov	r1, #16
 249 002a 8A43     		bic	r2, r1
 250 002c D2B2     		uxtb	r2, r2
 251 002e 1A70     		strb	r2, [r3]
 224:.\Generated_Source\PSoC4/SPI.c **** 
 225:.\Generated_Source\PSoC4/SPI.c ****     CyExitCriticalSection(enableInterrupts);
 252              		.loc 1 225 0
 253 0030 FB1D     		add	r3, r7, #7
 254 0032 1B78     		ldrb	r3, [r3]
 255 0034 181C     		mov	r0, r3
 256 0036 FFF7FEFF 		bl	CyExitCriticalSection
 226:.\Generated_Source\PSoC4/SPI.c **** 
 227:.\Generated_Source\PSoC4/SPI.c ****     #if(SPI_INTERNAL_TX_INT_ENABLED)
 228:.\Generated_Source\PSoC4/SPI.c ****         CyIntDisable(SPI_TX_ISR_NUMBER);
 229:.\Generated_Source\PSoC4/SPI.c ****     #endif /* SPI_INTERNAL_TX_INT_ENABLED */
 230:.\Generated_Source\PSoC4/SPI.c **** 
 231:.\Generated_Source\PSoC4/SPI.c ****     #if(SPI_INTERNAL_RX_INT_ENABLED)
 232:.\Generated_Source\PSoC4/SPI.c ****         CyIntDisable(SPI_RX_ISR_NUMBER);
 257              		.loc 1 232 0
 258 003a 0020     		mov	r0, #0
 259 003c FFF7FEFF 		bl	CyIntDisable
 233:.\Generated_Source\PSoC4/SPI.c ****     #endif /* SPI_INTERNAL_RX_INT_ENABLED */
 234:.\Generated_Source\PSoC4/SPI.c **** }
 260              		.loc 1 234 0
 261 0040 BD46     		mov	sp, r7
 262 0042 03B0     		add	sp, sp, #12
 263              		@ sp needed for prologue
 264 0044 90BD     		pop	{r4, r7, pc}
 265              	.L13:
 266 0046 C046     		.align	2
 267              	.L12:
 268 0048 93000F40 		.word	1074725011
 269 004c 91000F40 		.word	1074725009
 270              		.cfi_endproc
 271              	.LFE3:
 272              		.size	SPI_Stop, .-SPI_Stop
 273              		.section	.text.SPI_EnableTxInt,"ax",%progbits
 274              		.align	2
 275              		.global	SPI_EnableTxInt
 276              		.code	16
 277              		.thumb_func
 278              		.type	SPI_EnableTxInt, %function
 279              	SPI_EnableTxInt:
ARM GAS  C:\Users\trehans\AppData\Local\Temp\ccSsDmq0.s 			page 10


 280              	.LFB4:
 235:.\Generated_Source\PSoC4/SPI.c **** 
 236:.\Generated_Source\PSoC4/SPI.c **** 
 237:.\Generated_Source\PSoC4/SPI.c **** /*******************************************************************************
 238:.\Generated_Source\PSoC4/SPI.c **** * Function Name: SPI_EnableTxInt
 239:.\Generated_Source\PSoC4/SPI.c **** ********************************************************************************
 240:.\Generated_Source\PSoC4/SPI.c **** *
 241:.\Generated_Source\PSoC4/SPI.c **** * Summary:
 242:.\Generated_Source\PSoC4/SPI.c **** *  Enable internal Tx interrupt generation.
 243:.\Generated_Source\PSoC4/SPI.c **** *
 244:.\Generated_Source\PSoC4/SPI.c **** * Parameters:
 245:.\Generated_Source\PSoC4/SPI.c **** *  None.
 246:.\Generated_Source\PSoC4/SPI.c **** *
 247:.\Generated_Source\PSoC4/SPI.c **** * Return:
 248:.\Generated_Source\PSoC4/SPI.c **** *  None.
 249:.\Generated_Source\PSoC4/SPI.c **** *
 250:.\Generated_Source\PSoC4/SPI.c **** * Theory:
 251:.\Generated_Source\PSoC4/SPI.c **** *  Enable the internal Tx interrupt output -or- the interrupt component itself.
 252:.\Generated_Source\PSoC4/SPI.c **** *
 253:.\Generated_Source\PSoC4/SPI.c **** *******************************************************************************/
 254:.\Generated_Source\PSoC4/SPI.c **** void SPI_EnableTxInt(void) 
 255:.\Generated_Source\PSoC4/SPI.c **** {
 281              		.loc 1 255 0
 282              		.cfi_startproc
 283 0000 80B5     		push	{r7, lr}
 284              	.LCFI10:
 285              		.cfi_def_cfa_offset 8
 286              		.cfi_offset 7, -8
 287              		.cfi_offset 14, -4
 288 0002 00AF     		add	r7, sp, #0
 289              	.LCFI11:
 290              		.cfi_def_cfa_register 7
 256:.\Generated_Source\PSoC4/SPI.c ****     #if(SPI_INTERNAL_TX_INT_ENABLED)
 257:.\Generated_Source\PSoC4/SPI.c ****         CyIntEnable(SPI_TX_ISR_NUMBER);
 258:.\Generated_Source\PSoC4/SPI.c ****     #endif /* SPI_INTERNAL_TX_INT_ENABLED */
 259:.\Generated_Source\PSoC4/SPI.c **** }
 291              		.loc 1 259 0
 292 0004 BD46     		mov	sp, r7
 293              		@ sp needed for prologue
 294 0006 80BD     		pop	{r7, pc}
 295              		.cfi_endproc
 296              	.LFE4:
 297              		.size	SPI_EnableTxInt, .-SPI_EnableTxInt
 298              		.section	.text.SPI_EnableRxInt,"ax",%progbits
 299              		.align	2
 300              		.global	SPI_EnableRxInt
 301              		.code	16
 302              		.thumb_func
 303              		.type	SPI_EnableRxInt, %function
 304              	SPI_EnableRxInt:
 305              	.LFB5:
 260:.\Generated_Source\PSoC4/SPI.c **** 
 261:.\Generated_Source\PSoC4/SPI.c **** 
 262:.\Generated_Source\PSoC4/SPI.c **** /*******************************************************************************
 263:.\Generated_Source\PSoC4/SPI.c **** * Function Name: SPI_EnableRxInt
 264:.\Generated_Source\PSoC4/SPI.c **** ********************************************************************************
 265:.\Generated_Source\PSoC4/SPI.c **** *
ARM GAS  C:\Users\trehans\AppData\Local\Temp\ccSsDmq0.s 			page 11


 266:.\Generated_Source\PSoC4/SPI.c **** * Summary:
 267:.\Generated_Source\PSoC4/SPI.c **** *  Enable internal Rx interrupt generation.
 268:.\Generated_Source\PSoC4/SPI.c **** *
 269:.\Generated_Source\PSoC4/SPI.c **** * Parameters:
 270:.\Generated_Source\PSoC4/SPI.c **** *  None.
 271:.\Generated_Source\PSoC4/SPI.c **** *
 272:.\Generated_Source\PSoC4/SPI.c **** * Return:
 273:.\Generated_Source\PSoC4/SPI.c **** *  None.
 274:.\Generated_Source\PSoC4/SPI.c **** *
 275:.\Generated_Source\PSoC4/SPI.c **** * Theory:
 276:.\Generated_Source\PSoC4/SPI.c **** *  Enable the internal Rx interrupt output -or- the interrupt component itself.
 277:.\Generated_Source\PSoC4/SPI.c **** *
 278:.\Generated_Source\PSoC4/SPI.c **** *******************************************************************************/
 279:.\Generated_Source\PSoC4/SPI.c **** void SPI_EnableRxInt(void) 
 280:.\Generated_Source\PSoC4/SPI.c **** {
 306              		.loc 1 280 0
 307              		.cfi_startproc
 308 0000 80B5     		push	{r7, lr}
 309              	.LCFI12:
 310              		.cfi_def_cfa_offset 8
 311              		.cfi_offset 7, -8
 312              		.cfi_offset 14, -4
 313 0002 00AF     		add	r7, sp, #0
 314              	.LCFI13:
 315              		.cfi_def_cfa_register 7
 281:.\Generated_Source\PSoC4/SPI.c ****     #if(SPI_INTERNAL_RX_INT_ENABLED)
 282:.\Generated_Source\PSoC4/SPI.c ****         CyIntEnable(SPI_RX_ISR_NUMBER);
 316              		.loc 1 282 0
 317 0004 0020     		mov	r0, #0
 318 0006 FFF7FEFF 		bl	CyIntEnable
 283:.\Generated_Source\PSoC4/SPI.c ****     #endif /* SPI_INTERNAL_RX_INT_ENABLED */
 284:.\Generated_Source\PSoC4/SPI.c **** }
 319              		.loc 1 284 0
 320 000a BD46     		mov	sp, r7
 321              		@ sp needed for prologue
 322 000c 80BD     		pop	{r7, pc}
 323              		.cfi_endproc
 324              	.LFE5:
 325              		.size	SPI_EnableRxInt, .-SPI_EnableRxInt
 326 000e C046     		.section	.text.SPI_DisableTxInt,"ax",%progbits
 327              		.align	2
 328              		.global	SPI_DisableTxInt
 329              		.code	16
 330              		.thumb_func
 331              		.type	SPI_DisableTxInt, %function
 332              	SPI_DisableTxInt:
 333              	.LFB6:
 285:.\Generated_Source\PSoC4/SPI.c **** 
 286:.\Generated_Source\PSoC4/SPI.c **** 
 287:.\Generated_Source\PSoC4/SPI.c **** /*******************************************************************************
 288:.\Generated_Source\PSoC4/SPI.c **** * Function Name: SPI_DisableTxInt
 289:.\Generated_Source\PSoC4/SPI.c **** ********************************************************************************
 290:.\Generated_Source\PSoC4/SPI.c **** *
 291:.\Generated_Source\PSoC4/SPI.c **** * Summary:
 292:.\Generated_Source\PSoC4/SPI.c **** *  Disable internal Tx interrupt generation.
 293:.\Generated_Source\PSoC4/SPI.c **** *
 294:.\Generated_Source\PSoC4/SPI.c **** * Parameters:
ARM GAS  C:\Users\trehans\AppData\Local\Temp\ccSsDmq0.s 			page 12


 295:.\Generated_Source\PSoC4/SPI.c **** *  None.
 296:.\Generated_Source\PSoC4/SPI.c **** *
 297:.\Generated_Source\PSoC4/SPI.c **** * Return:
 298:.\Generated_Source\PSoC4/SPI.c **** *  None.
 299:.\Generated_Source\PSoC4/SPI.c **** *
 300:.\Generated_Source\PSoC4/SPI.c **** * Theory:
 301:.\Generated_Source\PSoC4/SPI.c **** *  Disable the internal Tx interrupt output -or- the interrupt component itself.
 302:.\Generated_Source\PSoC4/SPI.c **** *
 303:.\Generated_Source\PSoC4/SPI.c **** *******************************************************************************/
 304:.\Generated_Source\PSoC4/SPI.c **** void SPI_DisableTxInt(void) 
 305:.\Generated_Source\PSoC4/SPI.c **** {
 334              		.loc 1 305 0
 335              		.cfi_startproc
 336 0000 80B5     		push	{r7, lr}
 337              	.LCFI14:
 338              		.cfi_def_cfa_offset 8
 339              		.cfi_offset 7, -8
 340              		.cfi_offset 14, -4
 341 0002 00AF     		add	r7, sp, #0
 342              	.LCFI15:
 343              		.cfi_def_cfa_register 7
 306:.\Generated_Source\PSoC4/SPI.c ****     #if(SPI_INTERNAL_TX_INT_ENABLED)
 307:.\Generated_Source\PSoC4/SPI.c ****         CyIntDisable(SPI_TX_ISR_NUMBER);
 308:.\Generated_Source\PSoC4/SPI.c ****     #endif /* SPI_INTERNAL_TX_INT_ENABLED */
 309:.\Generated_Source\PSoC4/SPI.c **** }
 344              		.loc 1 309 0
 345 0004 BD46     		mov	sp, r7
 346              		@ sp needed for prologue
 347 0006 80BD     		pop	{r7, pc}
 348              		.cfi_endproc
 349              	.LFE6:
 350              		.size	SPI_DisableTxInt, .-SPI_DisableTxInt
 351              		.section	.text.SPI_DisableRxInt,"ax",%progbits
 352              		.align	2
 353              		.global	SPI_DisableRxInt
 354              		.code	16
 355              		.thumb_func
 356              		.type	SPI_DisableRxInt, %function
 357              	SPI_DisableRxInt:
 358              	.LFB7:
 310:.\Generated_Source\PSoC4/SPI.c **** 
 311:.\Generated_Source\PSoC4/SPI.c **** 
 312:.\Generated_Source\PSoC4/SPI.c **** /*******************************************************************************
 313:.\Generated_Source\PSoC4/SPI.c **** * Function Name: SPI_DisableRxInt
 314:.\Generated_Source\PSoC4/SPI.c **** ********************************************************************************
 315:.\Generated_Source\PSoC4/SPI.c **** *
 316:.\Generated_Source\PSoC4/SPI.c **** * Summary:
 317:.\Generated_Source\PSoC4/SPI.c **** *  Disable internal Rx interrupt generation.
 318:.\Generated_Source\PSoC4/SPI.c **** *
 319:.\Generated_Source\PSoC4/SPI.c **** * Parameters:
 320:.\Generated_Source\PSoC4/SPI.c **** *  None.
 321:.\Generated_Source\PSoC4/SPI.c **** *
 322:.\Generated_Source\PSoC4/SPI.c **** * Return:
 323:.\Generated_Source\PSoC4/SPI.c **** *  None.
 324:.\Generated_Source\PSoC4/SPI.c **** *
 325:.\Generated_Source\PSoC4/SPI.c **** * Theory:
 326:.\Generated_Source\PSoC4/SPI.c **** *  Disable the internal Rx interrupt output -or- the interrupt component itself.
ARM GAS  C:\Users\trehans\AppData\Local\Temp\ccSsDmq0.s 			page 13


 327:.\Generated_Source\PSoC4/SPI.c **** *
 328:.\Generated_Source\PSoC4/SPI.c **** *******************************************************************************/
 329:.\Generated_Source\PSoC4/SPI.c **** void SPI_DisableRxInt(void) 
 330:.\Generated_Source\PSoC4/SPI.c **** {
 359              		.loc 1 330 0
 360              		.cfi_startproc
 361 0000 80B5     		push	{r7, lr}
 362              	.LCFI16:
 363              		.cfi_def_cfa_offset 8
 364              		.cfi_offset 7, -8
 365              		.cfi_offset 14, -4
 366 0002 00AF     		add	r7, sp, #0
 367              	.LCFI17:
 368              		.cfi_def_cfa_register 7
 331:.\Generated_Source\PSoC4/SPI.c ****     #if(SPI_INTERNAL_RX_INT_ENABLED)
 332:.\Generated_Source\PSoC4/SPI.c ****         CyIntDisable(SPI_RX_ISR_NUMBER);
 369              		.loc 1 332 0
 370 0004 0020     		mov	r0, #0
 371 0006 FFF7FEFF 		bl	CyIntDisable
 333:.\Generated_Source\PSoC4/SPI.c ****     #endif /* SPI_INTERNAL_RX_INT_ENABLED */
 334:.\Generated_Source\PSoC4/SPI.c **** }
 372              		.loc 1 334 0
 373 000a BD46     		mov	sp, r7
 374              		@ sp needed for prologue
 375 000c 80BD     		pop	{r7, pc}
 376              		.cfi_endproc
 377              	.LFE7:
 378              		.size	SPI_DisableRxInt, .-SPI_DisableRxInt
 379 000e C046     		.section	.text.SPI_SetTxInterruptMode,"ax",%progbits
 380              		.align	2
 381              		.global	SPI_SetTxInterruptMode
 382              		.code	16
 383              		.thumb_func
 384              		.type	SPI_SetTxInterruptMode, %function
 385              	SPI_SetTxInterruptMode:
 386              	.LFB8:
 335:.\Generated_Source\PSoC4/SPI.c **** 
 336:.\Generated_Source\PSoC4/SPI.c **** 
 337:.\Generated_Source\PSoC4/SPI.c **** /*******************************************************************************
 338:.\Generated_Source\PSoC4/SPI.c **** * Function Name: SPI_SetTxInterruptMode
 339:.\Generated_Source\PSoC4/SPI.c **** ********************************************************************************
 340:.\Generated_Source\PSoC4/SPI.c **** *
 341:.\Generated_Source\PSoC4/SPI.c **** * Summary:
 342:.\Generated_Source\PSoC4/SPI.c **** *  Configure which status bits trigger an interrupt event.
 343:.\Generated_Source\PSoC4/SPI.c **** *
 344:.\Generated_Source\PSoC4/SPI.c **** * Parameters:
 345:.\Generated_Source\PSoC4/SPI.c **** *  intSrc: An or'd combination of the desired status bit masks (defined in the
 346:.\Generated_Source\PSoC4/SPI.c **** *  header file).
 347:.\Generated_Source\PSoC4/SPI.c **** *
 348:.\Generated_Source\PSoC4/SPI.c **** * Return:
 349:.\Generated_Source\PSoC4/SPI.c **** *  None.
 350:.\Generated_Source\PSoC4/SPI.c **** *
 351:.\Generated_Source\PSoC4/SPI.c **** * Theory:
 352:.\Generated_Source\PSoC4/SPI.c **** *  Enables the output of specific status bits to the interrupt controller.
 353:.\Generated_Source\PSoC4/SPI.c **** *
 354:.\Generated_Source\PSoC4/SPI.c **** *******************************************************************************/
 355:.\Generated_Source\PSoC4/SPI.c **** void SPI_SetTxInterruptMode(uint8 intSrc) 
ARM GAS  C:\Users\trehans\AppData\Local\Temp\ccSsDmq0.s 			page 14


 356:.\Generated_Source\PSoC4/SPI.c **** {
 387              		.loc 1 356 0
 388              		.cfi_startproc
 389 0000 80B5     		push	{r7, lr}
 390              	.LCFI18:
 391              		.cfi_def_cfa_offset 8
 392              		.cfi_offset 7, -8
 393              		.cfi_offset 14, -4
 394 0002 82B0     		sub	sp, sp, #8
 395              	.LCFI19:
 396              		.cfi_def_cfa_offset 16
 397 0004 00AF     		add	r7, sp, #0
 398              	.LCFI20:
 399              		.cfi_def_cfa_register 7
 400 0006 021C     		mov	r2, r0
 401 0008 FB1D     		add	r3, r7, #7
 402 000a 1A70     		strb	r2, [r3]
 357:.\Generated_Source\PSoC4/SPI.c ****     SPI_TX_STATUS_MASK_REG  = intSrc;
 403              		.loc 1 357 0
 404 000c 034B     		ldr	r3, .L19
 405 000e FA1D     		add	r2, r7, #7
 406 0010 1278     		ldrb	r2, [r2]
 407 0012 1A70     		strb	r2, [r3]
 358:.\Generated_Source\PSoC4/SPI.c **** }
 408              		.loc 1 358 0
 409 0014 BD46     		mov	sp, r7
 410 0016 02B0     		add	sp, sp, #8
 411              		@ sp needed for prologue
 412 0018 80BD     		pop	{r7, pc}
 413              	.L20:
 414 001a C046     		.align	2
 415              	.L19:
 416 001c 83000F40 		.word	1074724995
 417              		.cfi_endproc
 418              	.LFE8:
 419              		.size	SPI_SetTxInterruptMode, .-SPI_SetTxInterruptMode
 420              		.section	.text.SPI_SetRxInterruptMode,"ax",%progbits
 421              		.align	2
 422              		.global	SPI_SetRxInterruptMode
 423              		.code	16
 424              		.thumb_func
 425              		.type	SPI_SetRxInterruptMode, %function
 426              	SPI_SetRxInterruptMode:
 427              	.LFB9:
 359:.\Generated_Source\PSoC4/SPI.c **** 
 360:.\Generated_Source\PSoC4/SPI.c **** 
 361:.\Generated_Source\PSoC4/SPI.c **** /*******************************************************************************
 362:.\Generated_Source\PSoC4/SPI.c **** * Function Name: SPI_SetRxInterruptMode
 363:.\Generated_Source\PSoC4/SPI.c **** ********************************************************************************
 364:.\Generated_Source\PSoC4/SPI.c **** *
 365:.\Generated_Source\PSoC4/SPI.c **** * Summary:
 366:.\Generated_Source\PSoC4/SPI.c **** *  Configure which status bits trigger an interrupt event.
 367:.\Generated_Source\PSoC4/SPI.c **** *
 368:.\Generated_Source\PSoC4/SPI.c **** * Parameters:
 369:.\Generated_Source\PSoC4/SPI.c **** *  intSrc: An or'd combination of the desired status bit masks (defined in the
 370:.\Generated_Source\PSoC4/SPI.c **** *  header file).
 371:.\Generated_Source\PSoC4/SPI.c **** *
ARM GAS  C:\Users\trehans\AppData\Local\Temp\ccSsDmq0.s 			page 15


 372:.\Generated_Source\PSoC4/SPI.c **** * Return:
 373:.\Generated_Source\PSoC4/SPI.c **** *  None.
 374:.\Generated_Source\PSoC4/SPI.c **** *
 375:.\Generated_Source\PSoC4/SPI.c **** * Theory:
 376:.\Generated_Source\PSoC4/SPI.c **** *  Enables the output of specific status bits to the interrupt controller.
 377:.\Generated_Source\PSoC4/SPI.c **** *
 378:.\Generated_Source\PSoC4/SPI.c **** *******************************************************************************/
 379:.\Generated_Source\PSoC4/SPI.c **** void SPI_SetRxInterruptMode(uint8 intSrc) 
 380:.\Generated_Source\PSoC4/SPI.c **** {
 428              		.loc 1 380 0
 429              		.cfi_startproc
 430 0000 80B5     		push	{r7, lr}
 431              	.LCFI21:
 432              		.cfi_def_cfa_offset 8
 433              		.cfi_offset 7, -8
 434              		.cfi_offset 14, -4
 435 0002 82B0     		sub	sp, sp, #8
 436              	.LCFI22:
 437              		.cfi_def_cfa_offset 16
 438 0004 00AF     		add	r7, sp, #0
 439              	.LCFI23:
 440              		.cfi_def_cfa_register 7
 441 0006 021C     		mov	r2, r0
 442 0008 FB1D     		add	r3, r7, #7
 443 000a 1A70     		strb	r2, [r3]
 381:.\Generated_Source\PSoC4/SPI.c ****     SPI_RX_STATUS_MASK_REG  = intSrc;
 444              		.loc 1 381 0
 445 000c 034B     		ldr	r3, .L22
 446 000e FA1D     		add	r2, r7, #7
 447 0010 1278     		ldrb	r2, [r2]
 448 0012 1A70     		strb	r2, [r3]
 382:.\Generated_Source\PSoC4/SPI.c **** }
 449              		.loc 1 382 0
 450 0014 BD46     		mov	sp, r7
 451 0016 02B0     		add	sp, sp, #8
 452              		@ sp needed for prologue
 453 0018 80BD     		pop	{r7, pc}
 454              	.L23:
 455 001a C046     		.align	2
 456              	.L22:
 457 001c 81000F40 		.word	1074724993
 458              		.cfi_endproc
 459              	.LFE9:
 460              		.size	SPI_SetRxInterruptMode, .-SPI_SetRxInterruptMode
 461              		.section	.text.SPI_ReadTxStatus,"ax",%progbits
 462              		.align	2
 463              		.global	SPI_ReadTxStatus
 464              		.code	16
 465              		.thumb_func
 466              		.type	SPI_ReadTxStatus, %function
 467              	SPI_ReadTxStatus:
 468              	.LFB10:
 383:.\Generated_Source\PSoC4/SPI.c **** 
 384:.\Generated_Source\PSoC4/SPI.c **** 
 385:.\Generated_Source\PSoC4/SPI.c **** /*******************************************************************************
 386:.\Generated_Source\PSoC4/SPI.c **** * Function Name: SPI_ReadTxStatus
 387:.\Generated_Source\PSoC4/SPI.c **** ********************************************************************************
ARM GAS  C:\Users\trehans\AppData\Local\Temp\ccSsDmq0.s 			page 16


 388:.\Generated_Source\PSoC4/SPI.c **** *
 389:.\Generated_Source\PSoC4/SPI.c **** * Summary:
 390:.\Generated_Source\PSoC4/SPI.c **** *  Read the Tx status register for the component.
 391:.\Generated_Source\PSoC4/SPI.c **** *
 392:.\Generated_Source\PSoC4/SPI.c **** * Parameters:
 393:.\Generated_Source\PSoC4/SPI.c **** *  None.
 394:.\Generated_Source\PSoC4/SPI.c **** *
 395:.\Generated_Source\PSoC4/SPI.c **** * Return:
 396:.\Generated_Source\PSoC4/SPI.c **** *  Contents of the Tx status register.
 397:.\Generated_Source\PSoC4/SPI.c **** *
 398:.\Generated_Source\PSoC4/SPI.c **** * Global variables:
 399:.\Generated_Source\PSoC4/SPI.c **** *  SPI_swStatusTx - used to store in software status register,
 400:.\Generated_Source\PSoC4/SPI.c **** *  modified every function call - resets to zero.
 401:.\Generated_Source\PSoC4/SPI.c **** *
 402:.\Generated_Source\PSoC4/SPI.c **** * Theory:
 403:.\Generated_Source\PSoC4/SPI.c **** *  Allows the user and the API to read the Tx status register for error
 404:.\Generated_Source\PSoC4/SPI.c **** *  detection and flow control.
 405:.\Generated_Source\PSoC4/SPI.c **** *
 406:.\Generated_Source\PSoC4/SPI.c **** * Side Effects:
 407:.\Generated_Source\PSoC4/SPI.c **** *  Clear Tx status register of the component.
 408:.\Generated_Source\PSoC4/SPI.c **** *
 409:.\Generated_Source\PSoC4/SPI.c **** * Reentrant:
 410:.\Generated_Source\PSoC4/SPI.c **** *  No.
 411:.\Generated_Source\PSoC4/SPI.c **** *
 412:.\Generated_Source\PSoC4/SPI.c **** *******************************************************************************/
 413:.\Generated_Source\PSoC4/SPI.c **** uint8 SPI_ReadTxStatus(void) 
 414:.\Generated_Source\PSoC4/SPI.c **** {
 469              		.loc 1 414 0
 470              		.cfi_startproc
 471 0000 80B5     		push	{r7, lr}
 472              	.LCFI24:
 473              		.cfi_def_cfa_offset 8
 474              		.cfi_offset 7, -8
 475              		.cfi_offset 14, -4
 476 0002 82B0     		sub	sp, sp, #8
 477              	.LCFI25:
 478              		.cfi_def_cfa_offset 16
 479 0004 00AF     		add	r7, sp, #0
 480              	.LCFI26:
 481              		.cfi_def_cfa_register 7
 415:.\Generated_Source\PSoC4/SPI.c ****     uint8 tmpStatus;
 416:.\Generated_Source\PSoC4/SPI.c **** 
 417:.\Generated_Source\PSoC4/SPI.c ****     #if (SPI_TX_SOFTWARE_BUF_ENABLED)
 418:.\Generated_Source\PSoC4/SPI.c **** 
 419:.\Generated_Source\PSoC4/SPI.c ****         SPI_DisableTxInt();
 420:.\Generated_Source\PSoC4/SPI.c **** 
 421:.\Generated_Source\PSoC4/SPI.c ****         tmpStatus = SPI_GET_STATUS_TX(SPI_swStatusTx);
 422:.\Generated_Source\PSoC4/SPI.c **** 
 423:.\Generated_Source\PSoC4/SPI.c ****         SPI_swStatusTx = 0u;
 424:.\Generated_Source\PSoC4/SPI.c **** 
 425:.\Generated_Source\PSoC4/SPI.c ****         /* Enable Interrupts */
 426:.\Generated_Source\PSoC4/SPI.c ****         SPI_EnableTxInt();
 427:.\Generated_Source\PSoC4/SPI.c **** 
 428:.\Generated_Source\PSoC4/SPI.c ****     #else /* !SPI_TX_SOFTWARE_BUF_ENABLED */
 429:.\Generated_Source\PSoC4/SPI.c **** 
 430:.\Generated_Source\PSoC4/SPI.c ****         tmpStatus = SPI_TX_STATUS_REG;
 482              		.loc 1 430 0
ARM GAS  C:\Users\trehans\AppData\Local\Temp\ccSsDmq0.s 			page 17


 483 0006 054A     		ldr	r2, .L26
 484 0008 FB1D     		add	r3, r7, #7
 485 000a 1278     		ldrb	r2, [r2]
 486 000c 1A70     		strb	r2, [r3]
 431:.\Generated_Source\PSoC4/SPI.c **** 
 432:.\Generated_Source\PSoC4/SPI.c ****     #endif /* SPI_TX_SOFTWARE_BUF_ENABLED */
 433:.\Generated_Source\PSoC4/SPI.c **** 
 434:.\Generated_Source\PSoC4/SPI.c ****     return(tmpStatus);
 487              		.loc 1 434 0
 488 000e FB1D     		add	r3, r7, #7
 489 0010 1B78     		ldrb	r3, [r3]
 435:.\Generated_Source\PSoC4/SPI.c **** }
 490              		.loc 1 435 0
 491 0012 181C     		mov	r0, r3
 492 0014 BD46     		mov	sp, r7
 493 0016 02B0     		add	sp, sp, #8
 494              		@ sp needed for prologue
 495 0018 80BD     		pop	{r7, pc}
 496              	.L27:
 497 001a C046     		.align	2
 498              	.L26:
 499 001c 63000F40 		.word	1074724963
 500              		.cfi_endproc
 501              	.LFE10:
 502              		.size	SPI_ReadTxStatus, .-SPI_ReadTxStatus
 503              		.section	.text.SPI_ReadRxStatus,"ax",%progbits
 504              		.align	2
 505              		.global	SPI_ReadRxStatus
 506              		.code	16
 507              		.thumb_func
 508              		.type	SPI_ReadRxStatus, %function
 509              	SPI_ReadRxStatus:
 510              	.LFB11:
 436:.\Generated_Source\PSoC4/SPI.c **** 
 437:.\Generated_Source\PSoC4/SPI.c **** 
 438:.\Generated_Source\PSoC4/SPI.c **** /*******************************************************************************
 439:.\Generated_Source\PSoC4/SPI.c **** * Function Name: SPI_ReadRxStatus
 440:.\Generated_Source\PSoC4/SPI.c **** ********************************************************************************
 441:.\Generated_Source\PSoC4/SPI.c **** *
 442:.\Generated_Source\PSoC4/SPI.c **** * Summary:
 443:.\Generated_Source\PSoC4/SPI.c **** *  Read the Rx status register for the component.
 444:.\Generated_Source\PSoC4/SPI.c **** *
 445:.\Generated_Source\PSoC4/SPI.c **** * Parameters:
 446:.\Generated_Source\PSoC4/SPI.c **** *  None.
 447:.\Generated_Source\PSoC4/SPI.c **** *
 448:.\Generated_Source\PSoC4/SPI.c **** * Return:
 449:.\Generated_Source\PSoC4/SPI.c **** *  Contents of the Rx status register.
 450:.\Generated_Source\PSoC4/SPI.c **** *
 451:.\Generated_Source\PSoC4/SPI.c **** * Global variables:
 452:.\Generated_Source\PSoC4/SPI.c **** *  SPI_swStatusRx - used to store in software Rx status register,
 453:.\Generated_Source\PSoC4/SPI.c **** *  modified every function call - resets to zero.
 454:.\Generated_Source\PSoC4/SPI.c **** *
 455:.\Generated_Source\PSoC4/SPI.c **** * Theory:
 456:.\Generated_Source\PSoC4/SPI.c **** *  Allows the user and the API to read the Rx status register for error
 457:.\Generated_Source\PSoC4/SPI.c **** *  detection and flow control.
 458:.\Generated_Source\PSoC4/SPI.c **** *
 459:.\Generated_Source\PSoC4/SPI.c **** * Side Effects:
ARM GAS  C:\Users\trehans\AppData\Local\Temp\ccSsDmq0.s 			page 18


 460:.\Generated_Source\PSoC4/SPI.c **** *  Clear Rx status register of the component.
 461:.\Generated_Source\PSoC4/SPI.c **** *
 462:.\Generated_Source\PSoC4/SPI.c **** * Reentrant:
 463:.\Generated_Source\PSoC4/SPI.c **** *  No.
 464:.\Generated_Source\PSoC4/SPI.c **** *
 465:.\Generated_Source\PSoC4/SPI.c **** *******************************************************************************/
 466:.\Generated_Source\PSoC4/SPI.c **** uint8 SPI_ReadRxStatus(void) 
 467:.\Generated_Source\PSoC4/SPI.c **** {
 511              		.loc 1 467 0
 512              		.cfi_startproc
 513 0000 80B5     		push	{r7, lr}
 514              	.LCFI27:
 515              		.cfi_def_cfa_offset 8
 516              		.cfi_offset 7, -8
 517              		.cfi_offset 14, -4
 518 0002 82B0     		sub	sp, sp, #8
 519              	.LCFI28:
 520              		.cfi_def_cfa_offset 16
 521 0004 00AF     		add	r7, sp, #0
 522              	.LCFI29:
 523              		.cfi_def_cfa_register 7
 468:.\Generated_Source\PSoC4/SPI.c ****     uint8 tmpStatus;
 469:.\Generated_Source\PSoC4/SPI.c **** 
 470:.\Generated_Source\PSoC4/SPI.c ****     #if (SPI_RX_SOFTWARE_BUF_ENABLED)
 471:.\Generated_Source\PSoC4/SPI.c **** 
 472:.\Generated_Source\PSoC4/SPI.c ****         SPI_DisableRxInt();
 473:.\Generated_Source\PSoC4/SPI.c **** 
 474:.\Generated_Source\PSoC4/SPI.c ****         tmpStatus = SPI_GET_STATUS_RX(SPI_swStatusRx);
 475:.\Generated_Source\PSoC4/SPI.c **** 
 476:.\Generated_Source\PSoC4/SPI.c ****         SPI_swStatusRx = 0u;
 477:.\Generated_Source\PSoC4/SPI.c **** 
 478:.\Generated_Source\PSoC4/SPI.c ****         /* Enable Interrupts */
 479:.\Generated_Source\PSoC4/SPI.c ****         SPI_EnableRxInt();
 480:.\Generated_Source\PSoC4/SPI.c **** 
 481:.\Generated_Source\PSoC4/SPI.c ****     #else /* !SPI_RX_SOFTWARE_BUF_ENABLED */
 482:.\Generated_Source\PSoC4/SPI.c **** 
 483:.\Generated_Source\PSoC4/SPI.c ****         tmpStatus = SPI_RX_STATUS_REG;
 524              		.loc 1 483 0
 525 0006 054A     		ldr	r2, .L30
 526 0008 FB1D     		add	r3, r7, #7
 527 000a 1278     		ldrb	r2, [r2]
 528 000c 1A70     		strb	r2, [r3]
 484:.\Generated_Source\PSoC4/SPI.c **** 
 485:.\Generated_Source\PSoC4/SPI.c ****     #endif /* SPI_RX_SOFTWARE_BUF_ENABLED */
 486:.\Generated_Source\PSoC4/SPI.c **** 
 487:.\Generated_Source\PSoC4/SPI.c ****     return(tmpStatus);
 529              		.loc 1 487 0
 530 000e FB1D     		add	r3, r7, #7
 531 0010 1B78     		ldrb	r3, [r3]
 488:.\Generated_Source\PSoC4/SPI.c **** }
 532              		.loc 1 488 0
 533 0012 181C     		mov	r0, r3
 534 0014 BD46     		mov	sp, r7
 535 0016 02B0     		add	sp, sp, #8
 536              		@ sp needed for prologue
 537 0018 80BD     		pop	{r7, pc}
 538              	.L31:
ARM GAS  C:\Users\trehans\AppData\Local\Temp\ccSsDmq0.s 			page 19


 539 001a C046     		.align	2
 540              	.L30:
 541 001c 61000F40 		.word	1074724961
 542              		.cfi_endproc
 543              	.LFE11:
 544              		.size	SPI_ReadRxStatus, .-SPI_ReadRxStatus
 545              		.section	.text.SPI_WriteTxData,"ax",%progbits
 546              		.align	2
 547              		.global	SPI_WriteTxData
 548              		.code	16
 549              		.thumb_func
 550              		.type	SPI_WriteTxData, %function
 551              	SPI_WriteTxData:
 552              	.LFB12:
 489:.\Generated_Source\PSoC4/SPI.c **** 
 490:.\Generated_Source\PSoC4/SPI.c **** 
 491:.\Generated_Source\PSoC4/SPI.c **** /*******************************************************************************
 492:.\Generated_Source\PSoC4/SPI.c **** * Function Name: SPI_WriteTxData
 493:.\Generated_Source\PSoC4/SPI.c **** ********************************************************************************
 494:.\Generated_Source\PSoC4/SPI.c **** *
 495:.\Generated_Source\PSoC4/SPI.c **** * Summary:
 496:.\Generated_Source\PSoC4/SPI.c **** *  Write a byte of data to be sent across the SPI.
 497:.\Generated_Source\PSoC4/SPI.c **** *
 498:.\Generated_Source\PSoC4/SPI.c **** * Parameters:
 499:.\Generated_Source\PSoC4/SPI.c **** *  txDataByte: The data value to send across the SPI.
 500:.\Generated_Source\PSoC4/SPI.c **** *
 501:.\Generated_Source\PSoC4/SPI.c **** * Return:
 502:.\Generated_Source\PSoC4/SPI.c **** *  None.
 503:.\Generated_Source\PSoC4/SPI.c **** *
 504:.\Generated_Source\PSoC4/SPI.c **** * Global variables:
 505:.\Generated_Source\PSoC4/SPI.c **** *  SPI_txBufferWrite - used for the account of the bytes which
 506:.\Generated_Source\PSoC4/SPI.c **** *  have been written down in the TX software buffer, modified every function
 507:.\Generated_Source\PSoC4/SPI.c **** *  call if TX Software Buffer is used.
 508:.\Generated_Source\PSoC4/SPI.c **** *  SPI_txBufferRead - used for the account of the bytes which
 509:.\Generated_Source\PSoC4/SPI.c **** *  have been read from the TX software buffer.
 510:.\Generated_Source\PSoC4/SPI.c **** *  SPI_txBuffer[SPI_TX_BUFFER_SIZE] - used to store
 511:.\Generated_Source\PSoC4/SPI.c **** *  data to sending, modified every function call if TX Software Buffer is used.
 512:.\Generated_Source\PSoC4/SPI.c **** *
 513:.\Generated_Source\PSoC4/SPI.c **** * Theory:
 514:.\Generated_Source\PSoC4/SPI.c **** *  Allows the user to transmit any byte of data in a single transfer.
 515:.\Generated_Source\PSoC4/SPI.c **** *
 516:.\Generated_Source\PSoC4/SPI.c **** * Side Effects:
 517:.\Generated_Source\PSoC4/SPI.c **** *  If this function is called again before the previous byte is finished then
 518:.\Generated_Source\PSoC4/SPI.c **** *  the next byte will be appended to the transfer with no time between
 519:.\Generated_Source\PSoC4/SPI.c **** *  the byte transfers. Clear Tx status register of the component.
 520:.\Generated_Source\PSoC4/SPI.c **** *
 521:.\Generated_Source\PSoC4/SPI.c **** * Reentrant:
 522:.\Generated_Source\PSoC4/SPI.c **** *  No.
 523:.\Generated_Source\PSoC4/SPI.c **** *
 524:.\Generated_Source\PSoC4/SPI.c **** *******************************************************************************/
 525:.\Generated_Source\PSoC4/SPI.c **** void SPI_WriteTxData(uint16 txData) 
 526:.\Generated_Source\PSoC4/SPI.c **** {
 553              		.loc 1 526 0
 554              		.cfi_startproc
 555 0000 80B5     		push	{r7, lr}
 556              	.LCFI30:
 557              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\trehans\AppData\Local\Temp\ccSsDmq0.s 			page 20


 558              		.cfi_offset 7, -8
 559              		.cfi_offset 14, -4
 560 0002 82B0     		sub	sp, sp, #8
 561              	.LCFI31:
 562              		.cfi_def_cfa_offset 16
 563 0004 00AF     		add	r7, sp, #0
 564              	.LCFI32:
 565              		.cfi_def_cfa_register 7
 566 0006 021C     		mov	r2, r0
 567 0008 BB1D     		add	r3, r7, #6
 568 000a 1A80     		strh	r2, [r3]
 527:.\Generated_Source\PSoC4/SPI.c ****     #if(SPI_TX_SOFTWARE_BUF_ENABLED)
 528:.\Generated_Source\PSoC4/SPI.c **** 
 529:.\Generated_Source\PSoC4/SPI.c ****         uint8 tempStatus;
 530:.\Generated_Source\PSoC4/SPI.c ****         uint8 tmpTxBufferRead;
 531:.\Generated_Source\PSoC4/SPI.c **** 
 532:.\Generated_Source\PSoC4/SPI.c ****         /* Block if buffer is full, so we don't overwrite. */
 533:.\Generated_Source\PSoC4/SPI.c ****         do
 534:.\Generated_Source\PSoC4/SPI.c ****         {
 535:.\Generated_Source\PSoC4/SPI.c ****             tmpTxBufferRead = SPI_txBufferRead;
 536:.\Generated_Source\PSoC4/SPI.c ****             if (0u == tmpTxBufferRead)
 537:.\Generated_Source\PSoC4/SPI.c ****             {
 538:.\Generated_Source\PSoC4/SPI.c ****                 tmpTxBufferRead = SPI_TX_BUFFER_SIZE - 1u;
 539:.\Generated_Source\PSoC4/SPI.c ****             }
 540:.\Generated_Source\PSoC4/SPI.c ****             else
 541:.\Generated_Source\PSoC4/SPI.c ****             {
 542:.\Generated_Source\PSoC4/SPI.c ****                 tmpTxBufferRead--;
 543:.\Generated_Source\PSoC4/SPI.c ****             }
 544:.\Generated_Source\PSoC4/SPI.c **** 
 545:.\Generated_Source\PSoC4/SPI.c ****         } while(tmpTxBufferRead == SPI_txBufferWrite);
 546:.\Generated_Source\PSoC4/SPI.c **** 
 547:.\Generated_Source\PSoC4/SPI.c ****         /* Disable Interrupt to protect variables that could change on interrupt. */
 548:.\Generated_Source\PSoC4/SPI.c ****         SPI_DisableTxInt();
 549:.\Generated_Source\PSoC4/SPI.c **** 
 550:.\Generated_Source\PSoC4/SPI.c ****         tempStatus = SPI_GET_STATUS_TX(SPI_swStatusTx);
 551:.\Generated_Source\PSoC4/SPI.c ****         SPI_swStatusTx = tempStatus;
 552:.\Generated_Source\PSoC4/SPI.c **** 
 553:.\Generated_Source\PSoC4/SPI.c ****         if((SPI_txBufferRead == SPI_txBufferWrite) &&
 554:.\Generated_Source\PSoC4/SPI.c ****             (0u != (SPI_swStatusTx & SPI_STS_TX_FIFO_NOT_FULL)))
 555:.\Generated_Source\PSoC4/SPI.c ****         {
 556:.\Generated_Source\PSoC4/SPI.c ****             /* Add directly to the FIFO. */
 557:.\Generated_Source\PSoC4/SPI.c ****             CY_SET_REG16(SPI_TXDATA_PTR, txData);
 558:.\Generated_Source\PSoC4/SPI.c ****         }
 559:.\Generated_Source\PSoC4/SPI.c ****         else
 560:.\Generated_Source\PSoC4/SPI.c ****         {
 561:.\Generated_Source\PSoC4/SPI.c ****             /* Add to the software buffer. */
 562:.\Generated_Source\PSoC4/SPI.c ****             SPI_txBufferWrite++;
 563:.\Generated_Source\PSoC4/SPI.c ****             if(SPI_txBufferWrite >= SPI_TX_BUFFER_SIZE)
 564:.\Generated_Source\PSoC4/SPI.c ****             {
 565:.\Generated_Source\PSoC4/SPI.c ****                 SPI_txBufferWrite = 0u;
 566:.\Generated_Source\PSoC4/SPI.c ****             }
 567:.\Generated_Source\PSoC4/SPI.c **** 
 568:.\Generated_Source\PSoC4/SPI.c ****             if(SPI_txBufferWrite == SPI_txBufferRead)
 569:.\Generated_Source\PSoC4/SPI.c ****             {
 570:.\Generated_Source\PSoC4/SPI.c ****                 SPI_txBufferRead++;
 571:.\Generated_Source\PSoC4/SPI.c ****                 if(SPI_txBufferRead >= SPI_RX_BUFFER_SIZE)
 572:.\Generated_Source\PSoC4/SPI.c ****                 {
ARM GAS  C:\Users\trehans\AppData\Local\Temp\ccSsDmq0.s 			page 21


 573:.\Generated_Source\PSoC4/SPI.c ****                     SPI_txBufferRead = 0u;
 574:.\Generated_Source\PSoC4/SPI.c ****                 }
 575:.\Generated_Source\PSoC4/SPI.c ****                 SPI_txBufferFull = 1u;
 576:.\Generated_Source\PSoC4/SPI.c ****             }
 577:.\Generated_Source\PSoC4/SPI.c **** 
 578:.\Generated_Source\PSoC4/SPI.c ****             SPI_txBuffer[SPI_txBufferWrite] = txData;
 579:.\Generated_Source\PSoC4/SPI.c **** 
 580:.\Generated_Source\PSoC4/SPI.c ****             SPI_TX_STATUS_MASK_REG |= SPI_STS_TX_FIFO_NOT_FULL;
 581:.\Generated_Source\PSoC4/SPI.c ****         }
 582:.\Generated_Source\PSoC4/SPI.c **** 
 583:.\Generated_Source\PSoC4/SPI.c ****         /* Enable Interrupt. */
 584:.\Generated_Source\PSoC4/SPI.c ****         SPI_EnableTxInt();
 585:.\Generated_Source\PSoC4/SPI.c **** 
 586:.\Generated_Source\PSoC4/SPI.c ****     #else /* !SPI_TX_SOFTWARE_BUF_ENABLED*/
 587:.\Generated_Source\PSoC4/SPI.c **** 
 588:.\Generated_Source\PSoC4/SPI.c ****         
 589:.\Generated_Source\PSoC4/SPI.c ****         while(0u == (SPI_TX_STATUS_REG & SPI_STS_TX_FIFO_NOT_FULL))
 569              		.loc 1 589 0
 570 000c C046     		mov	r8, r8
 571              	.L33:
 572              		.loc 1 589 0 is_stmt 0 discriminator 1
 573 000e 074B     		ldr	r3, .L34
 574 0010 1B78     		ldrb	r3, [r3]
 575 0012 DBB2     		uxtb	r3, r3
 576 0014 1A1C     		mov	r2, r3
 577 0016 0223     		mov	r3, #2
 578 0018 1340     		and	r3, r2
 579 001a F8D0     		beq	.L33
 590:.\Generated_Source\PSoC4/SPI.c **** 		{
 591:.\Generated_Source\PSoC4/SPI.c **** 			; /* Block while FIFO is full */
 592:.\Generated_Source\PSoC4/SPI.c **** 		}
 593:.\Generated_Source\PSoC4/SPI.c **** 
 594:.\Generated_Source\PSoC4/SPI.c ****         /* Then write the byte */
 595:.\Generated_Source\PSoC4/SPI.c ****         CY_SET_REG16(SPI_TXDATA_PTR, txData);
 580              		.loc 1 595 0 is_stmt 1
 581 001c 044B     		ldr	r3, .L34+4
 582 001e BA1D     		add	r2, r7, #6
 583 0020 1288     		ldrh	r2, [r2]
 584 0022 1A80     		strh	r2, [r3]
 596:.\Generated_Source\PSoC4/SPI.c **** 
 597:.\Generated_Source\PSoC4/SPI.c ****     #endif /* SPI_TX_SOFTWARE_BUF_ENABLED */
 598:.\Generated_Source\PSoC4/SPI.c **** }
 585              		.loc 1 598 0
 586 0024 BD46     		mov	sp, r7
 587 0026 02B0     		add	sp, sp, #8
 588              		@ sp needed for prologue
 589 0028 80BD     		pop	{r7, pc}
 590              	.L35:
 591 002a C046     		.align	2
 592              	.L34:
 593 002c 63000F40 		.word	1074724963
 594 0030 84100F40 		.word	1074729092
 595              		.cfi_endproc
 596              	.LFE12:
 597              		.size	SPI_WriteTxData, .-SPI_WriteTxData
 598              		.section	.text.SPI_ReadRxData,"ax",%progbits
 599              		.align	2
ARM GAS  C:\Users\trehans\AppData\Local\Temp\ccSsDmq0.s 			page 22


 600              		.global	SPI_ReadRxData
 601              		.code	16
 602              		.thumb_func
 603              		.type	SPI_ReadRxData, %function
 604              	SPI_ReadRxData:
 605              	.LFB13:
 599:.\Generated_Source\PSoC4/SPI.c **** 
 600:.\Generated_Source\PSoC4/SPI.c **** #if(SPI_MODE_USE_ZERO != 0u)
 601:.\Generated_Source\PSoC4/SPI.c **** 
 602:.\Generated_Source\PSoC4/SPI.c ****     /*******************************************************************************
 603:.\Generated_Source\PSoC4/SPI.c ****     * Function Name: SPI_WriteTxDataZero
 604:.\Generated_Source\PSoC4/SPI.c ****     ********************************************************************************
 605:.\Generated_Source\PSoC4/SPI.c ****     *
 606:.\Generated_Source\PSoC4/SPI.c ****     * Summary:
 607:.\Generated_Source\PSoC4/SPI.c ****     *  Write a byte zero of data to be sent across the SPI. This must be used in
 608:.\Generated_Source\PSoC4/SPI.c ****     *  Mode 00 and 01 if the FIFO is empty and data is not being sent.
 609:.\Generated_Source\PSoC4/SPI.c ****     *
 610:.\Generated_Source\PSoC4/SPI.c ****     * Parameters:
 611:.\Generated_Source\PSoC4/SPI.c ****     *  txDataByte: The data value to send across the SPI.
 612:.\Generated_Source\PSoC4/SPI.c ****     *
 613:.\Generated_Source\PSoC4/SPI.c ****     * Return:
 614:.\Generated_Source\PSoC4/SPI.c ****     *  None.
 615:.\Generated_Source\PSoC4/SPI.c ****     *
 616:.\Generated_Source\PSoC4/SPI.c ****     * Theory:
 617:.\Generated_Source\PSoC4/SPI.c ****     *  Allows the user to transmit any byte of data in a single transfer. Clear
 618:.\Generated_Source\PSoC4/SPI.c ****     *  status register of the component.
 619:.\Generated_Source\PSoC4/SPI.c ****     *
 620:.\Generated_Source\PSoC4/SPI.c ****     *******************************************************************************/
 621:.\Generated_Source\PSoC4/SPI.c ****     void SPI_WriteTxDataZero(uint16 txDataByte)
 622:.\Generated_Source\PSoC4/SPI.c ****                                         
 623:.\Generated_Source\PSoC4/SPI.c ****     {
 624:.\Generated_Source\PSoC4/SPI.c ****         CY_SET_REG16(SPI_TXDATA_ZERO_PTR, txDataByte);
 625:.\Generated_Source\PSoC4/SPI.c ****     }
 626:.\Generated_Source\PSoC4/SPI.c **** 
 627:.\Generated_Source\PSoC4/SPI.c **** #endif /* (SPI_MODE_USE_ZERO != 0u) */
 628:.\Generated_Source\PSoC4/SPI.c **** 
 629:.\Generated_Source\PSoC4/SPI.c **** 
 630:.\Generated_Source\PSoC4/SPI.c **** /*******************************************************************************
 631:.\Generated_Source\PSoC4/SPI.c **** * Function Name: SPI_ReadRxData
 632:.\Generated_Source\PSoC4/SPI.c **** ********************************************************************************
 633:.\Generated_Source\PSoC4/SPI.c **** *
 634:.\Generated_Source\PSoC4/SPI.c **** * Summary:
 635:.\Generated_Source\PSoC4/SPI.c **** *  Read the next byte of data received across the SPI.
 636:.\Generated_Source\PSoC4/SPI.c **** *
 637:.\Generated_Source\PSoC4/SPI.c **** * Parameters:
 638:.\Generated_Source\PSoC4/SPI.c **** *  None.
 639:.\Generated_Source\PSoC4/SPI.c **** *
 640:.\Generated_Source\PSoC4/SPI.c **** * Return:
 641:.\Generated_Source\PSoC4/SPI.c **** *  The next byte of data read from the FIFO.
 642:.\Generated_Source\PSoC4/SPI.c **** *
 643:.\Generated_Source\PSoC4/SPI.c **** * Global variables:
 644:.\Generated_Source\PSoC4/SPI.c **** *  SPI_rxBufferWrite - used for the account of the bytes which
 645:.\Generated_Source\PSoC4/SPI.c **** *  have been written down in the RX software buffer.
 646:.\Generated_Source\PSoC4/SPI.c **** *  SPI_rxBufferRead - used for the account of the bytes which
 647:.\Generated_Source\PSoC4/SPI.c **** *  have been read from the RX software buffer, modified every function
 648:.\Generated_Source\PSoC4/SPI.c **** *  call if RX Software Buffer is used.
 649:.\Generated_Source\PSoC4/SPI.c **** *  SPI_rxBuffer[SPI_RX_BUFFER_SIZE] - used to store
ARM GAS  C:\Users\trehans\AppData\Local\Temp\ccSsDmq0.s 			page 23


 650:.\Generated_Source\PSoC4/SPI.c **** *  received data.
 651:.\Generated_Source\PSoC4/SPI.c **** *
 652:.\Generated_Source\PSoC4/SPI.c **** * Theory:
 653:.\Generated_Source\PSoC4/SPI.c **** *  Allows the user to read a byte of data received.
 654:.\Generated_Source\PSoC4/SPI.c **** *
 655:.\Generated_Source\PSoC4/SPI.c **** * Side Effects:
 656:.\Generated_Source\PSoC4/SPI.c **** *  Will return invalid data if the FIFO is empty.  User should poll for FIFO
 657:.\Generated_Source\PSoC4/SPI.c **** *  empty status before calling Read function.
 658:.\Generated_Source\PSoC4/SPI.c **** *
 659:.\Generated_Source\PSoC4/SPI.c **** * Reentrant:
 660:.\Generated_Source\PSoC4/SPI.c **** *  No.
 661:.\Generated_Source\PSoC4/SPI.c **** *
 662:.\Generated_Source\PSoC4/SPI.c **** *******************************************************************************/
 663:.\Generated_Source\PSoC4/SPI.c **** uint16 SPI_ReadRxData(void) 
 664:.\Generated_Source\PSoC4/SPI.c **** {
 606              		.loc 1 664 0
 607              		.cfi_startproc
 608 0000 80B5     		push	{r7, lr}
 609              	.LCFI33:
 610              		.cfi_def_cfa_offset 8
 611              		.cfi_offset 7, -8
 612              		.cfi_offset 14, -4
 613 0002 82B0     		sub	sp, sp, #8
 614              	.LCFI34:
 615              		.cfi_def_cfa_offset 16
 616 0004 00AF     		add	r7, sp, #0
 617              	.LCFI35:
 618              		.cfi_def_cfa_register 7
 665:.\Generated_Source\PSoC4/SPI.c ****     uint16 rxData;
 666:.\Generated_Source\PSoC4/SPI.c **** 
 667:.\Generated_Source\PSoC4/SPI.c ****     #if(SPI_RX_SOFTWARE_BUF_ENABLED)
 668:.\Generated_Source\PSoC4/SPI.c **** 
 669:.\Generated_Source\PSoC4/SPI.c ****         /* Disable Interrupt to protect variables that could change on interrupt. */
 670:.\Generated_Source\PSoC4/SPI.c ****         SPI_DisableRxInt();
 671:.\Generated_Source\PSoC4/SPI.c **** 
 672:.\Generated_Source\PSoC4/SPI.c ****         if(SPI_rxBufferRead != SPI_rxBufferWrite)
 673:.\Generated_Source\PSoC4/SPI.c ****         {
 674:.\Generated_Source\PSoC4/SPI.c ****             if(SPI_rxBufferFull == 0u)
 675:.\Generated_Source\PSoC4/SPI.c ****             {
 676:.\Generated_Source\PSoC4/SPI.c ****                 SPI_rxBufferRead++;
 677:.\Generated_Source\PSoC4/SPI.c ****                 if(SPI_rxBufferRead >= SPI_RX_BUFFER_SIZE)
 678:.\Generated_Source\PSoC4/SPI.c ****                 {
 679:.\Generated_Source\PSoC4/SPI.c ****                     SPI_rxBufferRead = 0u;
 680:.\Generated_Source\PSoC4/SPI.c ****                 }
 681:.\Generated_Source\PSoC4/SPI.c ****             }
 682:.\Generated_Source\PSoC4/SPI.c ****             else
 683:.\Generated_Source\PSoC4/SPI.c ****             {
 684:.\Generated_Source\PSoC4/SPI.c ****                 SPI_rxBufferFull = 0u;
 685:.\Generated_Source\PSoC4/SPI.c ****             }
 686:.\Generated_Source\PSoC4/SPI.c ****         }
 687:.\Generated_Source\PSoC4/SPI.c **** 
 688:.\Generated_Source\PSoC4/SPI.c ****         rxData = SPI_rxBuffer[SPI_rxBufferRead];
 689:.\Generated_Source\PSoC4/SPI.c **** 
 690:.\Generated_Source\PSoC4/SPI.c ****         /* Enable Interrupt. */
 691:.\Generated_Source\PSoC4/SPI.c ****         SPI_EnableRxInt();
 692:.\Generated_Source\PSoC4/SPI.c **** 
 693:.\Generated_Source\PSoC4/SPI.c ****     #else /* !SPI_RX_SOFTWARE_BUF_ENABLED */
ARM GAS  C:\Users\trehans\AppData\Local\Temp\ccSsDmq0.s 			page 24


 694:.\Generated_Source\PSoC4/SPI.c **** 
 695:.\Generated_Source\PSoC4/SPI.c ****         rxData = CY_GET_REG16(SPI_RXDATA_PTR);
 619              		.loc 1 695 0
 620 0006 054A     		ldr	r2, .L38
 621 0008 BB1D     		add	r3, r7, #6
 622 000a 1288     		ldrh	r2, [r2]
 623 000c 1A80     		strh	r2, [r3]
 696:.\Generated_Source\PSoC4/SPI.c **** 
 697:.\Generated_Source\PSoC4/SPI.c ****     #endif /* SPI_RX_SOFTWARE_BUF_ENABLED */
 698:.\Generated_Source\PSoC4/SPI.c **** 
 699:.\Generated_Source\PSoC4/SPI.c ****     return (rxData);
 624              		.loc 1 699 0
 625 000e BB1D     		add	r3, r7, #6
 626 0010 1B88     		ldrh	r3, [r3]
 700:.\Generated_Source\PSoC4/SPI.c **** 
 701:.\Generated_Source\PSoC4/SPI.c **** }
 627              		.loc 1 701 0
 628 0012 181C     		mov	r0, r3
 629 0014 BD46     		mov	sp, r7
 630 0016 02B0     		add	sp, sp, #8
 631              		@ sp needed for prologue
 632 0018 80BD     		pop	{r7, pc}
 633              	.L39:
 634 001a C046     		.align	2
 635              	.L38:
 636 001c A4100F40 		.word	1074729124
 637              		.cfi_endproc
 638              	.LFE13:
 639              		.size	SPI_ReadRxData, .-SPI_ReadRxData
 640              		.section	.text.SPI_GetRxBufferSize,"ax",%progbits
 641              		.align	2
 642              		.global	SPI_GetRxBufferSize
 643              		.code	16
 644              		.thumb_func
 645              		.type	SPI_GetRxBufferSize, %function
 646              	SPI_GetRxBufferSize:
 647              	.LFB14:
 702:.\Generated_Source\PSoC4/SPI.c **** 
 703:.\Generated_Source\PSoC4/SPI.c **** 
 704:.\Generated_Source\PSoC4/SPI.c **** /*******************************************************************************
 705:.\Generated_Source\PSoC4/SPI.c **** * Function Name: SPI_GetRxBufferSize
 706:.\Generated_Source\PSoC4/SPI.c **** ********************************************************************************
 707:.\Generated_Source\PSoC4/SPI.c **** *
 708:.\Generated_Source\PSoC4/SPI.c **** * Summary:
 709:.\Generated_Source\PSoC4/SPI.c **** *  Returns the number of bytes/words of data currently held in the RX buffer.
 710:.\Generated_Source\PSoC4/SPI.c **** *  If RX Software Buffer not used then function return 0 if FIFO empty or 1 if
 711:.\Generated_Source\PSoC4/SPI.c **** *  FIFO not empty. In another case function return size of RX Software Buffer.
 712:.\Generated_Source\PSoC4/SPI.c **** *
 713:.\Generated_Source\PSoC4/SPI.c **** * Parameters:
 714:.\Generated_Source\PSoC4/SPI.c **** *  None.
 715:.\Generated_Source\PSoC4/SPI.c **** *
 716:.\Generated_Source\PSoC4/SPI.c **** * Return:
 717:.\Generated_Source\PSoC4/SPI.c **** *  Integer count of the number of bytes/words in the RX buffer.
 718:.\Generated_Source\PSoC4/SPI.c **** *
 719:.\Generated_Source\PSoC4/SPI.c **** * Global variables:
 720:.\Generated_Source\PSoC4/SPI.c **** *  SPI_rxBufferWrite - used for the account of the bytes which
 721:.\Generated_Source\PSoC4/SPI.c **** *  have been written down in the RX software buffer.
ARM GAS  C:\Users\trehans\AppData\Local\Temp\ccSsDmq0.s 			page 25


 722:.\Generated_Source\PSoC4/SPI.c **** *  SPI_rxBufferRead - used for the account of the bytes which
 723:.\Generated_Source\PSoC4/SPI.c **** *  have been read from the RX software buffer.
 724:.\Generated_Source\PSoC4/SPI.c **** *
 725:.\Generated_Source\PSoC4/SPI.c **** * Theory:
 726:.\Generated_Source\PSoC4/SPI.c **** *  Allows the user to find out how full the RX Buffer is.
 727:.\Generated_Source\PSoC4/SPI.c **** *
 728:.\Generated_Source\PSoC4/SPI.c **** *******************************************************************************/
 729:.\Generated_Source\PSoC4/SPI.c **** uint8 SPI_GetRxBufferSize(void) 
 730:.\Generated_Source\PSoC4/SPI.c **** {
 648              		.loc 1 730 0
 649              		.cfi_startproc
 650 0000 80B5     		push	{r7, lr}
 651              	.LCFI36:
 652              		.cfi_def_cfa_offset 8
 653              		.cfi_offset 7, -8
 654              		.cfi_offset 14, -4
 655 0002 82B0     		sub	sp, sp, #8
 656              	.LCFI37:
 657              		.cfi_def_cfa_offset 16
 658 0004 00AF     		add	r7, sp, #0
 659              	.LCFI38:
 660              		.cfi_def_cfa_register 7
 731:.\Generated_Source\PSoC4/SPI.c ****     uint8 size;
 732:.\Generated_Source\PSoC4/SPI.c **** 
 733:.\Generated_Source\PSoC4/SPI.c ****     #if(SPI_RX_SOFTWARE_BUF_ENABLED)
 734:.\Generated_Source\PSoC4/SPI.c **** 
 735:.\Generated_Source\PSoC4/SPI.c ****         /* Disable Interrupt to protect variables that could change on interrupt. */
 736:.\Generated_Source\PSoC4/SPI.c ****         SPI_DisableRxInt();
 737:.\Generated_Source\PSoC4/SPI.c **** 
 738:.\Generated_Source\PSoC4/SPI.c ****         if(SPI_rxBufferRead == SPI_rxBufferWrite)
 739:.\Generated_Source\PSoC4/SPI.c ****         {
 740:.\Generated_Source\PSoC4/SPI.c ****             size = 0u; /* No data in RX buffer */
 741:.\Generated_Source\PSoC4/SPI.c ****         }
 742:.\Generated_Source\PSoC4/SPI.c ****         else if(SPI_rxBufferRead < SPI_rxBufferWrite)
 743:.\Generated_Source\PSoC4/SPI.c ****         {
 744:.\Generated_Source\PSoC4/SPI.c ****             size = (SPI_rxBufferWrite - SPI_rxBufferRead);
 745:.\Generated_Source\PSoC4/SPI.c ****         }
 746:.\Generated_Source\PSoC4/SPI.c ****         else
 747:.\Generated_Source\PSoC4/SPI.c ****         {
 748:.\Generated_Source\PSoC4/SPI.c ****             size = (SPI_RX_BUFFER_SIZE - SPI_rxBufferRead) + SPI_rxBufferWrite;
 749:.\Generated_Source\PSoC4/SPI.c ****         }
 750:.\Generated_Source\PSoC4/SPI.c **** 
 751:.\Generated_Source\PSoC4/SPI.c ****         /* Enable interrupt. */
 752:.\Generated_Source\PSoC4/SPI.c ****         SPI_EnableRxInt();
 753:.\Generated_Source\PSoC4/SPI.c **** 
 754:.\Generated_Source\PSoC4/SPI.c ****     #else /* !SPI_RX_SOFTWARE_BUF_ENABLED*/
 755:.\Generated_Source\PSoC4/SPI.c **** 
 756:.\Generated_Source\PSoC4/SPI.c ****         /* We can only know if there is data in the fifo. */
 757:.\Generated_Source\PSoC4/SPI.c ****         size = ((SPI_RX_STATUS_REG & SPI_STS_RX_FIFO_NOT_EMPTY) != 0u) ? 1u : 0u;
 661              		.loc 1 757 0
 662 0006 094B     		ldr	r3, .L44
 663 0008 1B78     		ldrb	r3, [r3]
 664 000a DBB2     		uxtb	r3, r3
 665 000c 1A1C     		mov	r2, r3
 666 000e 0823     		mov	r3, #8
 667 0010 1340     		and	r3, r2
 668 0012 01D0     		beq	.L41
ARM GAS  C:\Users\trehans\AppData\Local\Temp\ccSsDmq0.s 			page 26


 669              		.loc 1 757 0 is_stmt 0 discriminator 1
 670 0014 0123     		mov	r3, #1
 671 0016 00E0     		b	.L42
 672              	.L41:
 673              		.loc 1 757 0 discriminator 2
 674 0018 0023     		mov	r3, #0
 675              	.L42:
 676              		.loc 1 757 0 discriminator 3
 677 001a FA1D     		add	r2, r7, #7
 678 001c 1370     		strb	r3, [r2]
 758:.\Generated_Source\PSoC4/SPI.c **** 
 759:.\Generated_Source\PSoC4/SPI.c ****     #endif /* SPI_RX_SOFTWARE_BUF_ENABLED */
 760:.\Generated_Source\PSoC4/SPI.c **** 
 761:.\Generated_Source\PSoC4/SPI.c ****     return (size);
 679              		.loc 1 761 0 is_stmt 1 discriminator 3
 680 001e FB1D     		add	r3, r7, #7
 681 0020 1B78     		ldrb	r3, [r3]
 762:.\Generated_Source\PSoC4/SPI.c **** }
 682              		.loc 1 762 0 discriminator 3
 683 0022 181C     		mov	r0, r3
 684 0024 BD46     		mov	sp, r7
 685 0026 02B0     		add	sp, sp, #8
 686              		@ sp needed for prologue
 687 0028 80BD     		pop	{r7, pc}
 688              	.L45:
 689 002a C046     		.align	2
 690              	.L44:
 691 002c 61000F40 		.word	1074724961
 692              		.cfi_endproc
 693              	.LFE14:
 694              		.size	SPI_GetRxBufferSize, .-SPI_GetRxBufferSize
 695              		.section	.text.SPI_GetTxBufferSize,"ax",%progbits
 696              		.align	2
 697              		.global	SPI_GetTxBufferSize
 698              		.code	16
 699              		.thumb_func
 700              		.type	SPI_GetTxBufferSize, %function
 701              	SPI_GetTxBufferSize:
 702              	.LFB15:
 763:.\Generated_Source\PSoC4/SPI.c **** 
 764:.\Generated_Source\PSoC4/SPI.c **** 
 765:.\Generated_Source\PSoC4/SPI.c **** /*******************************************************************************
 766:.\Generated_Source\PSoC4/SPI.c **** * Function Name: SPI_GetTxBufferSize
 767:.\Generated_Source\PSoC4/SPI.c **** ********************************************************************************
 768:.\Generated_Source\PSoC4/SPI.c **** *
 769:.\Generated_Source\PSoC4/SPI.c **** * Summary:
 770:.\Generated_Source\PSoC4/SPI.c **** *  Returns the number of bytes/words of data currently held in the TX buffer.
 771:.\Generated_Source\PSoC4/SPI.c **** *  If TX Software Buffer not used then function return 0 - if FIFO empty, 1 - if
 772:.\Generated_Source\PSoC4/SPI.c **** *  FIFO not full, 4 - if FIFO full. In another case function return size of TX
 773:.\Generated_Source\PSoC4/SPI.c **** *  Software Buffer.
 774:.\Generated_Source\PSoC4/SPI.c **** *
 775:.\Generated_Source\PSoC4/SPI.c **** * Parameters:
 776:.\Generated_Source\PSoC4/SPI.c **** *  None.
 777:.\Generated_Source\PSoC4/SPI.c **** *
 778:.\Generated_Source\PSoC4/SPI.c **** * Return:
 779:.\Generated_Source\PSoC4/SPI.c **** *  Integer count of the number of bytes/words in the TX buffer.
 780:.\Generated_Source\PSoC4/SPI.c **** *
ARM GAS  C:\Users\trehans\AppData\Local\Temp\ccSsDmq0.s 			page 27


 781:.\Generated_Source\PSoC4/SPI.c **** * Global variables:
 782:.\Generated_Source\PSoC4/SPI.c **** *  SPI_txBufferWrite - used for the account of the bytes which
 783:.\Generated_Source\PSoC4/SPI.c **** *  have been written down in the TX software buffer.
 784:.\Generated_Source\PSoC4/SPI.c **** *  SPI_txBufferRead - used for the account of the bytes which
 785:.\Generated_Source\PSoC4/SPI.c **** *  have been read from the TX software buffer.
 786:.\Generated_Source\PSoC4/SPI.c **** *
 787:.\Generated_Source\PSoC4/SPI.c **** * Theory:
 788:.\Generated_Source\PSoC4/SPI.c **** *  Allows the user to find out how full the TX Buffer is.
 789:.\Generated_Source\PSoC4/SPI.c **** *
 790:.\Generated_Source\PSoC4/SPI.c **** * Side Effects:
 791:.\Generated_Source\PSoC4/SPI.c **** *  Clear status register of the component.
 792:.\Generated_Source\PSoC4/SPI.c **** *
 793:.\Generated_Source\PSoC4/SPI.c **** *******************************************************************************/
 794:.\Generated_Source\PSoC4/SPI.c **** uint8  SPI_GetTxBufferSize(void) 
 795:.\Generated_Source\PSoC4/SPI.c **** {
 703              		.loc 1 795 0
 704              		.cfi_startproc
 705 0000 80B5     		push	{r7, lr}
 706              	.LCFI39:
 707              		.cfi_def_cfa_offset 8
 708              		.cfi_offset 7, -8
 709              		.cfi_offset 14, -4
 710 0002 82B0     		sub	sp, sp, #8
 711              	.LCFI40:
 712              		.cfi_def_cfa_offset 16
 713 0004 00AF     		add	r7, sp, #0
 714              	.LCFI41:
 715              		.cfi_def_cfa_register 7
 796:.\Generated_Source\PSoC4/SPI.c ****     uint8 size;
 797:.\Generated_Source\PSoC4/SPI.c **** 
 798:.\Generated_Source\PSoC4/SPI.c ****     #if(SPI_TX_SOFTWARE_BUF_ENABLED)
 799:.\Generated_Source\PSoC4/SPI.c **** 
 800:.\Generated_Source\PSoC4/SPI.c ****         /* Disable Interrupt to protect variables that could change on interrupt. */
 801:.\Generated_Source\PSoC4/SPI.c ****         SPI_DisableTxInt();
 802:.\Generated_Source\PSoC4/SPI.c **** 
 803:.\Generated_Source\PSoC4/SPI.c ****         if(SPI_txBufferRead == SPI_txBufferWrite)
 804:.\Generated_Source\PSoC4/SPI.c ****         {
 805:.\Generated_Source\PSoC4/SPI.c ****             size = 0u;
 806:.\Generated_Source\PSoC4/SPI.c ****         }
 807:.\Generated_Source\PSoC4/SPI.c ****         else if(SPI_txBufferRead < SPI_txBufferWrite)
 808:.\Generated_Source\PSoC4/SPI.c ****         {
 809:.\Generated_Source\PSoC4/SPI.c ****             size = (SPI_txBufferWrite - SPI_txBufferRead);
 810:.\Generated_Source\PSoC4/SPI.c ****         }
 811:.\Generated_Source\PSoC4/SPI.c ****         else
 812:.\Generated_Source\PSoC4/SPI.c ****         {
 813:.\Generated_Source\PSoC4/SPI.c ****             size = (SPI_TX_BUFFER_SIZE - SPI_txBufferRead) + SPI_txBufferWrite;
 814:.\Generated_Source\PSoC4/SPI.c ****         }
 815:.\Generated_Source\PSoC4/SPI.c **** 
 816:.\Generated_Source\PSoC4/SPI.c ****         /* Enable Interrupt. */
 817:.\Generated_Source\PSoC4/SPI.c ****         SPI_EnableTxInt();
 818:.\Generated_Source\PSoC4/SPI.c **** 
 819:.\Generated_Source\PSoC4/SPI.c ****     #else /* !SPI_TX_SOFTWARE_BUF_ENABLED */
 820:.\Generated_Source\PSoC4/SPI.c **** 
 821:.\Generated_Source\PSoC4/SPI.c ****         size = SPI_TX_STATUS_REG;
 716              		.loc 1 821 0
 717 0006 0F4A     		ldr	r2, .L51
 718 0008 FB1D     		add	r3, r7, #7
ARM GAS  C:\Users\trehans\AppData\Local\Temp\ccSsDmq0.s 			page 28


 719 000a 1278     		ldrb	r2, [r2]
 720 000c 1A70     		strb	r2, [r3]
 822:.\Generated_Source\PSoC4/SPI.c **** 
 823:.\Generated_Source\PSoC4/SPI.c ****         /* Is the fifo is full. */
 824:.\Generated_Source\PSoC4/SPI.c ****         if((size & SPI_STS_TX_FIFO_EMPTY) != 0u)
 721              		.loc 1 824 0
 722 000e FB1D     		add	r3, r7, #7
 723 0010 1A78     		ldrb	r2, [r3]
 724 0012 0423     		mov	r3, #4
 725 0014 1340     		and	r3, r2
 726 0016 03D0     		beq	.L47
 825:.\Generated_Source\PSoC4/SPI.c ****         {
 826:.\Generated_Source\PSoC4/SPI.c ****             size = 0u;
 727              		.loc 1 826 0
 728 0018 FB1D     		add	r3, r7, #7
 729 001a 0022     		mov	r2, #0
 730 001c 1A70     		strb	r2, [r3]
 731 001e 0BE0     		b	.L48
 732              	.L47:
 827:.\Generated_Source\PSoC4/SPI.c ****         }
 828:.\Generated_Source\PSoC4/SPI.c ****         else if((size & SPI_STS_TX_FIFO_NOT_FULL) != 0u)
 733              		.loc 1 828 0
 734 0020 FB1D     		add	r3, r7, #7
 735 0022 1A78     		ldrb	r2, [r3]
 736 0024 0223     		mov	r3, #2
 737 0026 1340     		and	r3, r2
 738 0028 03D0     		beq	.L49
 829:.\Generated_Source\PSoC4/SPI.c ****         {
 830:.\Generated_Source\PSoC4/SPI.c ****             size = 1u;
 739              		.loc 1 830 0
 740 002a FB1D     		add	r3, r7, #7
 741 002c 0122     		mov	r2, #1
 742 002e 1A70     		strb	r2, [r3]
 743 0030 02E0     		b	.L48
 744              	.L49:
 831:.\Generated_Source\PSoC4/SPI.c ****         }
 832:.\Generated_Source\PSoC4/SPI.c ****         else
 833:.\Generated_Source\PSoC4/SPI.c ****         {
 834:.\Generated_Source\PSoC4/SPI.c ****             size = 4u;
 745              		.loc 1 834 0
 746 0032 FB1D     		add	r3, r7, #7
 747 0034 0422     		mov	r2, #4
 748 0036 1A70     		strb	r2, [r3]
 749              	.L48:
 835:.\Generated_Source\PSoC4/SPI.c ****         }
 836:.\Generated_Source\PSoC4/SPI.c **** 
 837:.\Generated_Source\PSoC4/SPI.c ****     #endif /* SPI_TX_SOFTWARE_BUF_ENABLED */
 838:.\Generated_Source\PSoC4/SPI.c **** 
 839:.\Generated_Source\PSoC4/SPI.c ****     return (size);
 750              		.loc 1 839 0
 751 0038 FB1D     		add	r3, r7, #7
 752 003a 1B78     		ldrb	r3, [r3]
 840:.\Generated_Source\PSoC4/SPI.c **** }
 753              		.loc 1 840 0
 754 003c 181C     		mov	r0, r3
 755 003e BD46     		mov	sp, r7
 756 0040 02B0     		add	sp, sp, #8
ARM GAS  C:\Users\trehans\AppData\Local\Temp\ccSsDmq0.s 			page 29


 757              		@ sp needed for prologue
 758 0042 80BD     		pop	{r7, pc}
 759              	.L52:
 760              		.align	2
 761              	.L51:
 762 0044 63000F40 		.word	1074724963
 763              		.cfi_endproc
 764              	.LFE15:
 765              		.size	SPI_GetTxBufferSize, .-SPI_GetTxBufferSize
 766              		.section	.text.SPI_ClearRxBuffer,"ax",%progbits
 767              		.align	2
 768              		.global	SPI_ClearRxBuffer
 769              		.code	16
 770              		.thumb_func
 771              		.type	SPI_ClearRxBuffer, %function
 772              	SPI_ClearRxBuffer:
 773              	.LFB16:
 841:.\Generated_Source\PSoC4/SPI.c **** 
 842:.\Generated_Source\PSoC4/SPI.c **** 
 843:.\Generated_Source\PSoC4/SPI.c **** /*******************************************************************************
 844:.\Generated_Source\PSoC4/SPI.c **** * Function Name: SPI_ClearRxBuffer
 845:.\Generated_Source\PSoC4/SPI.c **** ********************************************************************************
 846:.\Generated_Source\PSoC4/SPI.c **** *
 847:.\Generated_Source\PSoC4/SPI.c **** * Summary:
 848:.\Generated_Source\PSoC4/SPI.c **** *  Clear the RX RAM buffer by setting the read and write pointers both to zero.
 849:.\Generated_Source\PSoC4/SPI.c **** *
 850:.\Generated_Source\PSoC4/SPI.c **** * Parameters:
 851:.\Generated_Source\PSoC4/SPI.c **** *  None.
 852:.\Generated_Source\PSoC4/SPI.c **** *
 853:.\Generated_Source\PSoC4/SPI.c **** * Return:
 854:.\Generated_Source\PSoC4/SPI.c **** *  None.
 855:.\Generated_Source\PSoC4/SPI.c **** *
 856:.\Generated_Source\PSoC4/SPI.c **** * Global variables:
 857:.\Generated_Source\PSoC4/SPI.c **** *  SPI_rxBufferWrite - used for the account of the bytes which
 858:.\Generated_Source\PSoC4/SPI.c **** *  have been written down in the RX software buffer, modified every function
 859:.\Generated_Source\PSoC4/SPI.c **** *  call - resets to zero.
 860:.\Generated_Source\PSoC4/SPI.c **** *  SPI_rxBufferRead - used for the account of the bytes which
 861:.\Generated_Source\PSoC4/SPI.c **** *  have been read from the RX software buffer, modified every function call -
 862:.\Generated_Source\PSoC4/SPI.c **** *  resets to zero.
 863:.\Generated_Source\PSoC4/SPI.c **** *
 864:.\Generated_Source\PSoC4/SPI.c **** * Theory:
 865:.\Generated_Source\PSoC4/SPI.c **** *  Setting the pointers to zero makes the system believe there is no data to
 866:.\Generated_Source\PSoC4/SPI.c **** *  read and writing will resume at address 0 overwriting any data that may have
 867:.\Generated_Source\PSoC4/SPI.c **** *  remained in the RAM.
 868:.\Generated_Source\PSoC4/SPI.c **** *
 869:.\Generated_Source\PSoC4/SPI.c **** * Side Effects:
 870:.\Generated_Source\PSoC4/SPI.c **** *  Any received data not read from the RAM buffer will be lost when overwritten.
 871:.\Generated_Source\PSoC4/SPI.c **** *
 872:.\Generated_Source\PSoC4/SPI.c **** * Reentrant:
 873:.\Generated_Source\PSoC4/SPI.c **** *  No.
 874:.\Generated_Source\PSoC4/SPI.c **** *
 875:.\Generated_Source\PSoC4/SPI.c **** *******************************************************************************/
 876:.\Generated_Source\PSoC4/SPI.c **** void SPI_ClearRxBuffer(void) 
 877:.\Generated_Source\PSoC4/SPI.c **** {
 774              		.loc 1 877 0
 775              		.cfi_startproc
 776 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\trehans\AppData\Local\Temp\ccSsDmq0.s 			page 30


 777              	.LCFI42:
 778              		.cfi_def_cfa_offset 8
 779              		.cfi_offset 7, -8
 780              		.cfi_offset 14, -4
 781 0002 00AF     		add	r7, sp, #0
 782              	.LCFI43:
 783              		.cfi_def_cfa_register 7
 878:.\Generated_Source\PSoC4/SPI.c ****     /* Clear Hardware RX FIFO */
 879:.\Generated_Source\PSoC4/SPI.c ****     while((SPI_RX_STATUS_REG & SPI_STS_RX_FIFO_NOT_EMPTY) != 0u)
 784              		.loc 1 879 0
 785 0004 01E0     		b	.L54
 786              	.L55:
 880:.\Generated_Source\PSoC4/SPI.c ****     {
 881:.\Generated_Source\PSoC4/SPI.c ****         CY_GET_REG16(SPI_RXDATA_PTR);
 787              		.loc 1 881 0
 788 0006 054B     		ldr	r3, .L56
 789 0008 1B88     		ldrh	r3, [r3]
 790              	.L54:
 879:.\Generated_Source\PSoC4/SPI.c ****     while((SPI_RX_STATUS_REG & SPI_STS_RX_FIFO_NOT_EMPTY) != 0u)
 791              		.loc 1 879 0 discriminator 1
 792 000a 054B     		ldr	r3, .L56+4
 793 000c 1B78     		ldrb	r3, [r3]
 794 000e DBB2     		uxtb	r3, r3
 795 0010 1A1C     		mov	r2, r3
 796 0012 0823     		mov	r3, #8
 797 0014 1340     		and	r3, r2
 798 0016 F6D1     		bne	.L55
 882:.\Generated_Source\PSoC4/SPI.c ****     }
 883:.\Generated_Source\PSoC4/SPI.c **** 
 884:.\Generated_Source\PSoC4/SPI.c ****     #if(SPI_RX_SOFTWARE_BUF_ENABLED)
 885:.\Generated_Source\PSoC4/SPI.c **** 
 886:.\Generated_Source\PSoC4/SPI.c ****         /* Disable interrupt to protect variables that could change on interrupt. */
 887:.\Generated_Source\PSoC4/SPI.c ****         SPI_DisableRxInt();
 888:.\Generated_Source\PSoC4/SPI.c **** 
 889:.\Generated_Source\PSoC4/SPI.c ****         SPI_rxBufferRead  = 0u;
 890:.\Generated_Source\PSoC4/SPI.c ****         SPI_rxBufferWrite = 0u;
 891:.\Generated_Source\PSoC4/SPI.c **** 		SPI_rxBufferFull  = 0u;
 892:.\Generated_Source\PSoC4/SPI.c ****         /* Enable interrupt. */
 893:.\Generated_Source\PSoC4/SPI.c ****         SPI_EnableRxInt();
 894:.\Generated_Source\PSoC4/SPI.c **** 
 895:.\Generated_Source\PSoC4/SPI.c ****     #endif /* SPI_RX_SOFTWARE_BUF_ENABLED */
 896:.\Generated_Source\PSoC4/SPI.c **** }
 799              		.loc 1 896 0
 800 0018 BD46     		mov	sp, r7
 801              		@ sp needed for prologue
 802 001a 80BD     		pop	{r7, pc}
 803              	.L57:
 804              		.align	2
 805              	.L56:
 806 001c A4100F40 		.word	1074729124
 807 0020 61000F40 		.word	1074724961
 808              		.cfi_endproc
 809              	.LFE16:
 810              		.size	SPI_ClearRxBuffer, .-SPI_ClearRxBuffer
 811              		.section	.text.SPI_ClearTxBuffer,"ax",%progbits
 812              		.align	2
 813              		.global	SPI_ClearTxBuffer
ARM GAS  C:\Users\trehans\AppData\Local\Temp\ccSsDmq0.s 			page 31


 814              		.code	16
 815              		.thumb_func
 816              		.type	SPI_ClearTxBuffer, %function
 817              	SPI_ClearTxBuffer:
 818              	.LFB17:
 897:.\Generated_Source\PSoC4/SPI.c **** 
 898:.\Generated_Source\PSoC4/SPI.c **** 
 899:.\Generated_Source\PSoC4/SPI.c **** /*******************************************************************************
 900:.\Generated_Source\PSoC4/SPI.c **** * Function Name: SPI_ClearTxBuffer
 901:.\Generated_Source\PSoC4/SPI.c **** ********************************************************************************
 902:.\Generated_Source\PSoC4/SPI.c **** *
 903:.\Generated_Source\PSoC4/SPI.c **** * Summary:
 904:.\Generated_Source\PSoC4/SPI.c **** *  Clear the TX RAM buffer by setting the read and write pointers both to zero.
 905:.\Generated_Source\PSoC4/SPI.c **** *
 906:.\Generated_Source\PSoC4/SPI.c **** * Parameters:
 907:.\Generated_Source\PSoC4/SPI.c **** *  None.
 908:.\Generated_Source\PSoC4/SPI.c **** *
 909:.\Generated_Source\PSoC4/SPI.c **** * Return:
 910:.\Generated_Source\PSoC4/SPI.c **** *  None.
 911:.\Generated_Source\PSoC4/SPI.c **** *
 912:.\Generated_Source\PSoC4/SPI.c **** * Global variables:
 913:.\Generated_Source\PSoC4/SPI.c **** *  SPI_txBufferWrite - used for the account of the bytes which
 914:.\Generated_Source\PSoC4/SPI.c **** *  have been written down in the TX software buffer, modified every function
 915:.\Generated_Source\PSoC4/SPI.c **** *  call - resets to zero.
 916:.\Generated_Source\PSoC4/SPI.c **** *  SPI_txBufferRead - used for the account of the bytes which
 917:.\Generated_Source\PSoC4/SPI.c **** *  have been read from the TX software buffer, modified every function call -
 918:.\Generated_Source\PSoC4/SPI.c **** *  resets to zero.
 919:.\Generated_Source\PSoC4/SPI.c **** *
 920:.\Generated_Source\PSoC4/SPI.c **** * Theory:
 921:.\Generated_Source\PSoC4/SPI.c **** *  Setting the pointers to zero makes the system believe there is no data to
 922:.\Generated_Source\PSoC4/SPI.c **** *  read and writing will resume at address 0 overwriting any data that may have
 923:.\Generated_Source\PSoC4/SPI.c **** *  remained in the RAM.
 924:.\Generated_Source\PSoC4/SPI.c **** *
 925:.\Generated_Source\PSoC4/SPI.c **** * Side Effects:
 926:.\Generated_Source\PSoC4/SPI.c **** *  Any data not yet transmitted from the RAM buffer will be lost when
 927:.\Generated_Source\PSoC4/SPI.c **** *  overwritten.
 928:.\Generated_Source\PSoC4/SPI.c **** *
 929:.\Generated_Source\PSoC4/SPI.c **** * Reentrant:
 930:.\Generated_Source\PSoC4/SPI.c **** *  No.
 931:.\Generated_Source\PSoC4/SPI.c **** *
 932:.\Generated_Source\PSoC4/SPI.c **** *******************************************************************************/
 933:.\Generated_Source\PSoC4/SPI.c **** void SPI_ClearTxBuffer(void) 
 934:.\Generated_Source\PSoC4/SPI.c **** {
 819              		.loc 1 934 0
 820              		.cfi_startproc
 821 0000 90B5     		push	{r4, r7, lr}
 822              	.LCFI44:
 823              		.cfi_def_cfa_offset 12
 824              		.cfi_offset 4, -12
 825              		.cfi_offset 7, -8
 826              		.cfi_offset 14, -4
 827 0002 83B0     		sub	sp, sp, #12
 828              	.LCFI45:
 829              		.cfi_def_cfa_offset 24
 830 0004 00AF     		add	r7, sp, #0
 831              	.LCFI46:
 832              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\trehans\AppData\Local\Temp\ccSsDmq0.s 			page 32


 935:.\Generated_Source\PSoC4/SPI.c ****     uint8 enableInterrupts;
 936:.\Generated_Source\PSoC4/SPI.c **** 
 937:.\Generated_Source\PSoC4/SPI.c ****     /* Clear Hardware TX FIFO */
 938:.\Generated_Source\PSoC4/SPI.c ****     enableInterrupts = CyEnterCriticalSection();
 833              		.loc 1 938 0
 834 0006 FC1D     		add	r4, r7, #7
 835 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 836 000c 031C     		mov	r3, r0
 837 000e 2370     		strb	r3, [r4]
 939:.\Generated_Source\PSoC4/SPI.c **** 
 940:.\Generated_Source\PSoC4/SPI.c ****     #if(SPI_DATA_WIDTH <= 8u)
 941:.\Generated_Source\PSoC4/SPI.c **** 
 942:.\Generated_Source\PSoC4/SPI.c ****         /* Clear TX FIFO */
 943:.\Generated_Source\PSoC4/SPI.c ****         SPI_TX_AUX_CONTROL_DP0_REG |= (uint8)SPI_FIFO_CLR;
 944:.\Generated_Source\PSoC4/SPI.c ****         SPI_TX_AUX_CONTROL_DP0_REG &= (uint8)~SPI_FIFO_CLR;
 945:.\Generated_Source\PSoC4/SPI.c **** 
 946:.\Generated_Source\PSoC4/SPI.c ****     #else
 947:.\Generated_Source\PSoC4/SPI.c **** 
 948:.\Generated_Source\PSoC4/SPI.c ****         /* Clear TX FIFO */
 949:.\Generated_Source\PSoC4/SPI.c ****         SPI_TX_AUX_CONTROL_DP0_REG |= (uint8)SPI_FIFO_CLR;
 838              		.loc 1 949 0
 839 0010 134B     		ldr	r3, .L59
 840 0012 134A     		ldr	r2, .L59
 841 0014 1278     		ldrb	r2, [r2]
 842 0016 D2B2     		uxtb	r2, r2
 843 0018 0321     		mov	r1, #3
 844 001a 0A43     		orr	r2, r1
 845 001c D2B2     		uxtb	r2, r2
 846 001e 1A70     		strb	r2, [r3]
 950:.\Generated_Source\PSoC4/SPI.c ****         SPI_TX_AUX_CONTROL_DP0_REG &= (uint8)~SPI_FIFO_CLR;
 847              		.loc 1 950 0
 848 0020 0F4B     		ldr	r3, .L59
 849 0022 0F4A     		ldr	r2, .L59
 850 0024 1278     		ldrb	r2, [r2]
 851 0026 D2B2     		uxtb	r2, r2
 852 0028 0321     		mov	r1, #3
 853 002a 8A43     		bic	r2, r1
 854 002c D2B2     		uxtb	r2, r2
 855 002e 1A70     		strb	r2, [r3]
 951:.\Generated_Source\PSoC4/SPI.c ****         SPI_TX_AUX_CONTROL_DP1_REG |= (uint8)SPI_FIFO_CLR;
 856              		.loc 1 951 0
 857 0030 0C4B     		ldr	r3, .L59+4
 858 0032 0C4A     		ldr	r2, .L59+4
 859 0034 1278     		ldrb	r2, [r2]
 860 0036 D2B2     		uxtb	r2, r2
 861 0038 0321     		mov	r1, #3
 862 003a 0A43     		orr	r2, r1
 863 003c D2B2     		uxtb	r2, r2
 864 003e 1A70     		strb	r2, [r3]
 952:.\Generated_Source\PSoC4/SPI.c ****         SPI_TX_AUX_CONTROL_DP1_REG &= (uint8)~SPI_FIFO_CLR;
 865              		.loc 1 952 0
 866 0040 084B     		ldr	r3, .L59+4
 867 0042 084A     		ldr	r2, .L59+4
 868 0044 1278     		ldrb	r2, [r2]
 869 0046 D2B2     		uxtb	r2, r2
 870 0048 0321     		mov	r1, #3
 871 004a 8A43     		bic	r2, r1
ARM GAS  C:\Users\trehans\AppData\Local\Temp\ccSsDmq0.s 			page 33


 872 004c D2B2     		uxtb	r2, r2
 873 004e 1A70     		strb	r2, [r3]
 953:.\Generated_Source\PSoC4/SPI.c **** 
 954:.\Generated_Source\PSoC4/SPI.c ****     #endif /* SPI_DATA_WIDTH > 8u */
 955:.\Generated_Source\PSoC4/SPI.c **** 
 956:.\Generated_Source\PSoC4/SPI.c ****     CyExitCriticalSection(enableInterrupts);
 874              		.loc 1 956 0
 875 0050 FB1D     		add	r3, r7, #7
 876 0052 1B78     		ldrb	r3, [r3]
 877 0054 181C     		mov	r0, r3
 878 0056 FFF7FEFF 		bl	CyExitCriticalSection
 957:.\Generated_Source\PSoC4/SPI.c **** 
 958:.\Generated_Source\PSoC4/SPI.c ****     #if(SPI_TX_SOFTWARE_BUF_ENABLED)
 959:.\Generated_Source\PSoC4/SPI.c **** 
 960:.\Generated_Source\PSoC4/SPI.c ****         /* Disable Interrupt to protect variables that could change on interrupt. */
 961:.\Generated_Source\PSoC4/SPI.c ****         SPI_DisableTxInt();
 962:.\Generated_Source\PSoC4/SPI.c **** 
 963:.\Generated_Source\PSoC4/SPI.c ****         SPI_txBufferRead  = 0u;
 964:.\Generated_Source\PSoC4/SPI.c ****         SPI_txBufferWrite = 0u;
 965:.\Generated_Source\PSoC4/SPI.c **** 		SPI_txBufferFull  = 0u;
 966:.\Generated_Source\PSoC4/SPI.c **** 		
 967:.\Generated_Source\PSoC4/SPI.c ****         /* If Buffer is empty then disable TX FIFO status interrupt */
 968:.\Generated_Source\PSoC4/SPI.c ****         SPI_TX_STATUS_MASK_REG &= (uint8)~SPI_STS_TX_FIFO_NOT_FULL;
 969:.\Generated_Source\PSoC4/SPI.c **** 
 970:.\Generated_Source\PSoC4/SPI.c ****         /* Enable Interrupt. */
 971:.\Generated_Source\PSoC4/SPI.c ****         SPI_EnableTxInt();
 972:.\Generated_Source\PSoC4/SPI.c **** 
 973:.\Generated_Source\PSoC4/SPI.c ****     #endif /* SPI_TX_SOFTWARE_BUF_ENABLED */
 974:.\Generated_Source\PSoC4/SPI.c **** }
 879              		.loc 1 974 0
 880 005a BD46     		mov	sp, r7
 881 005c 03B0     		add	sp, sp, #12
 882              		@ sp needed for prologue
 883 005e 90BD     		pop	{r4, r7, pc}
 884              	.L60:
 885              		.align	2
 886              	.L59:
 887 0060 92000F40 		.word	1074725010
 888 0064 93000F40 		.word	1074725011
 889              		.cfi_endproc
 890              	.LFE17:
 891              		.size	SPI_ClearTxBuffer, .-SPI_ClearTxBuffer
 892              		.section	.text.SPI_PutArray,"ax",%progbits
 893              		.align	2
 894              		.global	SPI_PutArray
 895              		.code	16
 896              		.thumb_func
 897              		.type	SPI_PutArray, %function
 898              	SPI_PutArray:
 899              	.LFB18:
 975:.\Generated_Source\PSoC4/SPI.c **** 
 976:.\Generated_Source\PSoC4/SPI.c **** 
 977:.\Generated_Source\PSoC4/SPI.c **** #if (SPI_BIDIRECTIONAL_MODE != 0u)
 978:.\Generated_Source\PSoC4/SPI.c **** 
 979:.\Generated_Source\PSoC4/SPI.c ****     /*******************************************************************************
 980:.\Generated_Source\PSoC4/SPI.c ****     * Function Name: SPI_TxEnable
 981:.\Generated_Source\PSoC4/SPI.c ****     ********************************************************************************
ARM GAS  C:\Users\trehans\AppData\Local\Temp\ccSsDmq0.s 			page 34


 982:.\Generated_Source\PSoC4/SPI.c ****     *
 983:.\Generated_Source\PSoC4/SPI.c ****     * Summary:
 984:.\Generated_Source\PSoC4/SPI.c ****     *  If the SPI Slave is configured to use a single bi-directional pin then this
 985:.\Generated_Source\PSoC4/SPI.c ****     *  will set the bi-directional pin to transmit.
 986:.\Generated_Source\PSoC4/SPI.c ****     *
 987:.\Generated_Source\PSoC4/SPI.c ****     * Parameters:
 988:.\Generated_Source\PSoC4/SPI.c ****     *  None.
 989:.\Generated_Source\PSoC4/SPI.c ****     *
 990:.\Generated_Source\PSoC4/SPI.c ****     * Return:
 991:.\Generated_Source\PSoC4/SPI.c ****     *  None.
 992:.\Generated_Source\PSoC4/SPI.c ****     *
 993:.\Generated_Source\PSoC4/SPI.c ****     *******************************************************************************/
 994:.\Generated_Source\PSoC4/SPI.c ****     void SPI_TxEnable(void) 
 995:.\Generated_Source\PSoC4/SPI.c ****     {
 996:.\Generated_Source\PSoC4/SPI.c ****             SPI_CONTROL_REG |= SPI_CTRL_TX_SIGNAL_EN;
 997:.\Generated_Source\PSoC4/SPI.c ****     }
 998:.\Generated_Source\PSoC4/SPI.c **** 
 999:.\Generated_Source\PSoC4/SPI.c **** 
1000:.\Generated_Source\PSoC4/SPI.c ****     /*******************************************************************************
1001:.\Generated_Source\PSoC4/SPI.c ****     * Function Name: SPI_TxDisable
1002:.\Generated_Source\PSoC4/SPI.c ****     ********************************************************************************
1003:.\Generated_Source\PSoC4/SPI.c ****     *
1004:.\Generated_Source\PSoC4/SPI.c ****     * Summary:
1005:.\Generated_Source\PSoC4/SPI.c ****     *  If the SPI Slave is configured to use a single bi-directional pin then this
1006:.\Generated_Source\PSoC4/SPI.c ****     *  will set the bi-directional pin to receive.
1007:.\Generated_Source\PSoC4/SPI.c ****     *
1008:.\Generated_Source\PSoC4/SPI.c ****     * Parameters:
1009:.\Generated_Source\PSoC4/SPI.c ****     *  None.
1010:.\Generated_Source\PSoC4/SPI.c ****     *
1011:.\Generated_Source\PSoC4/SPI.c ****     * Return:
1012:.\Generated_Source\PSoC4/SPI.c ****     *  None.
1013:.\Generated_Source\PSoC4/SPI.c ****     *
1014:.\Generated_Source\PSoC4/SPI.c ****     *******************************************************************************/
1015:.\Generated_Source\PSoC4/SPI.c ****     void SPI_TxDisable(void) 
1016:.\Generated_Source\PSoC4/SPI.c ****     {
1017:.\Generated_Source\PSoC4/SPI.c ****             SPI_CONTROL_REG &= (uint8)~SPI_CTRL_TX_SIGNAL_EN;
1018:.\Generated_Source\PSoC4/SPI.c ****     }
1019:.\Generated_Source\PSoC4/SPI.c **** 
1020:.\Generated_Source\PSoC4/SPI.c **** #endif /* SPI_BIDIRECTIONAL_MODE != 0u */
1021:.\Generated_Source\PSoC4/SPI.c **** 
1022:.\Generated_Source\PSoC4/SPI.c **** 
1023:.\Generated_Source\PSoC4/SPI.c **** /*******************************************************************************
1024:.\Generated_Source\PSoC4/SPI.c **** * Function Name: SPI_PutArray
1025:.\Generated_Source\PSoC4/SPI.c **** ********************************************************************************
1026:.\Generated_Source\PSoC4/SPI.c **** *
1027:.\Generated_Source\PSoC4/SPI.c **** * Summary:
1028:.\Generated_Source\PSoC4/SPI.c **** *  Write available data from RAM/ROM to the TX buffer while space is available
1029:.\Generated_Source\PSoC4/SPI.c **** *  in the TX buffer. Keep trying until all data is passed to the TX buffer. If
1030:.\Generated_Source\PSoC4/SPI.c **** *  used Mode 00 or 01 before PutArray() function should be called
1031:.\Generated_Source\PSoC4/SPI.c **** *  WriteTxDataZero() function.
1032:.\Generated_Source\PSoC4/SPI.c **** *
1033:.\Generated_Source\PSoC4/SPI.c **** * Parameters:
1034:.\Generated_Source\PSoC4/SPI.c **** *  *buffer: Pointer to the location in RAM containing the data to send
1035:.\Generated_Source\PSoC4/SPI.c **** *  byteCount: The number of bytes to move to the transmit buffer.
1036:.\Generated_Source\PSoC4/SPI.c **** *
1037:.\Generated_Source\PSoC4/SPI.c **** * Return:
1038:.\Generated_Source\PSoC4/SPI.c **** *  None.
ARM GAS  C:\Users\trehans\AppData\Local\Temp\ccSsDmq0.s 			page 35


1039:.\Generated_Source\PSoC4/SPI.c **** *
1040:.\Generated_Source\PSoC4/SPI.c **** * Side Effects:
1041:.\Generated_Source\PSoC4/SPI.c **** *  Will stay in this routine until all data has been sent.  May get locked in
1042:.\Generated_Source\PSoC4/SPI.c **** *  this loop if data is not being initiated by the master if there is not
1043:.\Generated_Source\PSoC4/SPI.c **** *  enough room in the TX FIFO.
1044:.\Generated_Source\PSoC4/SPI.c **** *
1045:.\Generated_Source\PSoC4/SPI.c **** * Reentrant:
1046:.\Generated_Source\PSoC4/SPI.c **** *  No.
1047:.\Generated_Source\PSoC4/SPI.c **** *
1048:.\Generated_Source\PSoC4/SPI.c **** *******************************************************************************/
1049:.\Generated_Source\PSoC4/SPI.c **** void SPI_PutArray(const uint16 buffer[], uint8 byteCount)
1050:.\Generated_Source\PSoC4/SPI.c ****                                                                     
1051:.\Generated_Source\PSoC4/SPI.c **** {
 900              		.loc 1 1051 0
 901              		.cfi_startproc
 902 0000 80B5     		push	{r7, lr}
 903              	.LCFI47:
 904              		.cfi_def_cfa_offset 8
 905              		.cfi_offset 7, -8
 906              		.cfi_offset 14, -4
 907 0002 84B0     		sub	sp, sp, #16
 908              	.LCFI48:
 909              		.cfi_def_cfa_offset 24
 910 0004 00AF     		add	r7, sp, #0
 911              	.LCFI49:
 912              		.cfi_def_cfa_register 7
 913 0006 7860     		str	r0, [r7, #4]
 914 0008 0A1C     		mov	r2, r1
 915 000a FB1C     		add	r3, r7, #3
 916 000c 1A70     		strb	r2, [r3]
1052:.\Generated_Source\PSoC4/SPI.c ****     uint8 bufIndex;
1053:.\Generated_Source\PSoC4/SPI.c ****     bufIndex = 0u;
 917              		.loc 1 1053 0
 918 000e 3B1C     		mov	r3, r7
 919 0010 0F33     		add	r3, r3, #15
 920 0012 0022     		mov	r2, #0
 921 0014 1A70     		strb	r2, [r3]
1054:.\Generated_Source\PSoC4/SPI.c **** 
1055:.\Generated_Source\PSoC4/SPI.c ****     while(byteCount > 0u)
 922              		.loc 1 1055 0
 923 0016 15E0     		b	.L62
 924              	.L63:
1056:.\Generated_Source\PSoC4/SPI.c ****     {
1057:.\Generated_Source\PSoC4/SPI.c ****         SPI_WriteTxData(buffer[bufIndex]);
 925              		.loc 1 1057 0
 926 0018 3B1C     		mov	r3, r7
 927 001a 0F33     		add	r3, r3, #15
 928 001c 1B78     		ldrb	r3, [r3]
 929 001e 5B00     		lsl	r3, r3, #1
 930 0020 7A68     		ldr	r2, [r7, #4]
 931 0022 D318     		add	r3, r2, r3
 932 0024 1B88     		ldrh	r3, [r3]
 933 0026 181C     		mov	r0, r3
 934 0028 FFF7FEFF 		bl	SPI_WriteTxData
1058:.\Generated_Source\PSoC4/SPI.c ****         bufIndex++;
 935              		.loc 1 1058 0
 936 002c 3B1C     		mov	r3, r7
ARM GAS  C:\Users\trehans\AppData\Local\Temp\ccSsDmq0.s 			page 36


 937 002e 0F33     		add	r3, r3, #15
 938 0030 3A1C     		mov	r2, r7
 939 0032 0F32     		add	r2, r2, #15
 940 0034 1278     		ldrb	r2, [r2]
 941 0036 0132     		add	r2, r2, #1
 942 0038 1A70     		strb	r2, [r3]
1059:.\Generated_Source\PSoC4/SPI.c ****         byteCount--;
 943              		.loc 1 1059 0
 944 003a FB1C     		add	r3, r7, #3
 945 003c FA1C     		add	r2, r7, #3
 946 003e 1278     		ldrb	r2, [r2]
 947 0040 013A     		sub	r2, r2, #1
 948 0042 1A70     		strb	r2, [r3]
 949              	.L62:
1055:.\Generated_Source\PSoC4/SPI.c ****     while(byteCount > 0u)
 950              		.loc 1 1055 0 discriminator 1
 951 0044 FB1C     		add	r3, r7, #3
 952 0046 1B78     		ldrb	r3, [r3]
 953 0048 002B     		cmp	r3, #0
 954 004a E5D1     		bne	.L63
1060:.\Generated_Source\PSoC4/SPI.c ****     }
1061:.\Generated_Source\PSoC4/SPI.c **** }
 955              		.loc 1 1061 0
 956 004c BD46     		mov	sp, r7
 957 004e 04B0     		add	sp, sp, #16
 958              		@ sp needed for prologue
 959 0050 80BD     		pop	{r7, pc}
 960              		.cfi_endproc
 961              	.LFE18:
 962              		.size	SPI_PutArray, .-SPI_PutArray
 963 0052 C046     		.section	.text.SPI_ClearFIFO,"ax",%progbits
 964              		.align	2
 965              		.global	SPI_ClearFIFO
 966              		.code	16
 967              		.thumb_func
 968              		.type	SPI_ClearFIFO, %function
 969              	SPI_ClearFIFO:
 970              	.LFB19:
1062:.\Generated_Source\PSoC4/SPI.c **** 
1063:.\Generated_Source\PSoC4/SPI.c **** 
1064:.\Generated_Source\PSoC4/SPI.c **** /*******************************************************************************
1065:.\Generated_Source\PSoC4/SPI.c **** * Function Name: SPI_ClearFIFO
1066:.\Generated_Source\PSoC4/SPI.c **** ********************************************************************************
1067:.\Generated_Source\PSoC4/SPI.c **** *
1068:.\Generated_Source\PSoC4/SPI.c **** * Summary:
1069:.\Generated_Source\PSoC4/SPI.c **** *  Clear the RX and TX FIFO's of all data for a fresh start.
1070:.\Generated_Source\PSoC4/SPI.c **** *
1071:.\Generated_Source\PSoC4/SPI.c **** * Parameters:
1072:.\Generated_Source\PSoC4/SPI.c **** *  None.
1073:.\Generated_Source\PSoC4/SPI.c **** *
1074:.\Generated_Source\PSoC4/SPI.c **** * Return:
1075:.\Generated_Source\PSoC4/SPI.c **** *  None.
1076:.\Generated_Source\PSoC4/SPI.c **** *
1077:.\Generated_Source\PSoC4/SPI.c **** * Side Effects:
1078:.\Generated_Source\PSoC4/SPI.c **** *  Clear status register of the component.
1079:.\Generated_Source\PSoC4/SPI.c **** *
1080:.\Generated_Source\PSoC4/SPI.c **** *******************************************************************************/
ARM GAS  C:\Users\trehans\AppData\Local\Temp\ccSsDmq0.s 			page 37


1081:.\Generated_Source\PSoC4/SPI.c **** void SPI_ClearFIFO(void) 
1082:.\Generated_Source\PSoC4/SPI.c **** {
 971              		.loc 1 1082 0
 972              		.cfi_startproc
 973 0000 90B5     		push	{r4, r7, lr}
 974              	.LCFI50:
 975              		.cfi_def_cfa_offset 12
 976              		.cfi_offset 4, -12
 977              		.cfi_offset 7, -8
 978              		.cfi_offset 14, -4
 979 0002 83B0     		sub	sp, sp, #12
 980              	.LCFI51:
 981              		.cfi_def_cfa_offset 24
 982 0004 00AF     		add	r7, sp, #0
 983              	.LCFI52:
 984              		.cfi_def_cfa_register 7
1083:.\Generated_Source\PSoC4/SPI.c ****     uint8 enableInterrupts;
1084:.\Generated_Source\PSoC4/SPI.c **** 
1085:.\Generated_Source\PSoC4/SPI.c ****     while((SPI_RX_STATUS_REG & SPI_STS_RX_FIFO_NOT_EMPTY) != 0u)
 985              		.loc 1 1085 0
 986 0006 01E0     		b	.L65
 987              	.L66:
1086:.\Generated_Source\PSoC4/SPI.c ****     {
1087:.\Generated_Source\PSoC4/SPI.c ****         CY_GET_REG16(SPI_RXDATA_PTR);
 988              		.loc 1 1087 0
 989 0008 1A4B     		ldr	r3, .L67
 990 000a 1B88     		ldrh	r3, [r3]
 991              	.L65:
1085:.\Generated_Source\PSoC4/SPI.c ****     while((SPI_RX_STATUS_REG & SPI_STS_RX_FIFO_NOT_EMPTY) != 0u)
 992              		.loc 1 1085 0 discriminator 1
 993 000c 1A4B     		ldr	r3, .L67+4
 994 000e 1B78     		ldrb	r3, [r3]
 995 0010 DBB2     		uxtb	r3, r3
 996 0012 1A1C     		mov	r2, r3
 997 0014 0823     		mov	r3, #8
 998 0016 1340     		and	r3, r2
 999 0018 F6D1     		bne	.L66
1088:.\Generated_Source\PSoC4/SPI.c ****     }
1089:.\Generated_Source\PSoC4/SPI.c **** 
1090:.\Generated_Source\PSoC4/SPI.c ****     enableInterrupts = CyEnterCriticalSection();
 1000              		.loc 1 1090 0
 1001 001a FC1D     		add	r4, r7, #7
 1002 001c FFF7FEFF 		bl	CyEnterCriticalSection
 1003 0020 031C     		mov	r3, r0
 1004 0022 2370     		strb	r3, [r4]
1091:.\Generated_Source\PSoC4/SPI.c **** 
1092:.\Generated_Source\PSoC4/SPI.c ****     #if(SPI_DATA_WIDTH <= 8u)
1093:.\Generated_Source\PSoC4/SPI.c **** 
1094:.\Generated_Source\PSoC4/SPI.c ****         /* Clear TX FIFO */
1095:.\Generated_Source\PSoC4/SPI.c ****         SPI_TX_AUX_CONTROL_DP0_REG |= (uint8)SPI_FIFO_CLR;
1096:.\Generated_Source\PSoC4/SPI.c ****         SPI_TX_AUX_CONTROL_DP0_REG &= (uint8)~SPI_FIFO_CLR;
1097:.\Generated_Source\PSoC4/SPI.c **** 
1098:.\Generated_Source\PSoC4/SPI.c ****     #else
1099:.\Generated_Source\PSoC4/SPI.c **** 
1100:.\Generated_Source\PSoC4/SPI.c ****         /* Clear TX FIFO */
1101:.\Generated_Source\PSoC4/SPI.c ****         SPI_TX_AUX_CONTROL_DP0_REG |= (uint8)SPI_FIFO_CLR;
 1005              		.loc 1 1101 0
ARM GAS  C:\Users\trehans\AppData\Local\Temp\ccSsDmq0.s 			page 38


 1006 0024 154B     		ldr	r3, .L67+8
 1007 0026 154A     		ldr	r2, .L67+8
 1008 0028 1278     		ldrb	r2, [r2]
 1009 002a D2B2     		uxtb	r2, r2
 1010 002c 0321     		mov	r1, #3
 1011 002e 0A43     		orr	r2, r1
 1012 0030 D2B2     		uxtb	r2, r2
 1013 0032 1A70     		strb	r2, [r3]
1102:.\Generated_Source\PSoC4/SPI.c ****         SPI_TX_AUX_CONTROL_DP0_REG &= (uint8)~SPI_FIFO_CLR;
 1014              		.loc 1 1102 0
 1015 0034 114B     		ldr	r3, .L67+8
 1016 0036 114A     		ldr	r2, .L67+8
 1017 0038 1278     		ldrb	r2, [r2]
 1018 003a D2B2     		uxtb	r2, r2
 1019 003c 0321     		mov	r1, #3
 1020 003e 8A43     		bic	r2, r1
 1021 0040 D2B2     		uxtb	r2, r2
 1022 0042 1A70     		strb	r2, [r3]
1103:.\Generated_Source\PSoC4/SPI.c ****         SPI_TX_AUX_CONTROL_DP1_REG |= (uint8)SPI_FIFO_CLR;
 1023              		.loc 1 1103 0
 1024 0044 0E4B     		ldr	r3, .L67+12
 1025 0046 0E4A     		ldr	r2, .L67+12
 1026 0048 1278     		ldrb	r2, [r2]
 1027 004a D2B2     		uxtb	r2, r2
 1028 004c 0321     		mov	r1, #3
 1029 004e 0A43     		orr	r2, r1
 1030 0050 D2B2     		uxtb	r2, r2
 1031 0052 1A70     		strb	r2, [r3]
1104:.\Generated_Source\PSoC4/SPI.c ****         SPI_TX_AUX_CONTROL_DP1_REG &= (uint8)~SPI_FIFO_CLR;
 1032              		.loc 1 1104 0
 1033 0054 0A4B     		ldr	r3, .L67+12
 1034 0056 0A4A     		ldr	r2, .L67+12
 1035 0058 1278     		ldrb	r2, [r2]
 1036 005a D2B2     		uxtb	r2, r2
 1037 005c 0321     		mov	r1, #3
 1038 005e 8A43     		bic	r2, r1
 1039 0060 D2B2     		uxtb	r2, r2
 1040 0062 1A70     		strb	r2, [r3]
1105:.\Generated_Source\PSoC4/SPI.c **** 
1106:.\Generated_Source\PSoC4/SPI.c ****     #endif /* SPI_DATA_WIDTH <= 8u */
1107:.\Generated_Source\PSoC4/SPI.c **** 
1108:.\Generated_Source\PSoC4/SPI.c ****     CyExitCriticalSection(enableInterrupts);
 1041              		.loc 1 1108 0
 1042 0064 FB1D     		add	r3, r7, #7
 1043 0066 1B78     		ldrb	r3, [r3]
 1044 0068 181C     		mov	r0, r3
 1045 006a FFF7FEFF 		bl	CyExitCriticalSection
1109:.\Generated_Source\PSoC4/SPI.c **** }
 1046              		.loc 1 1109 0
 1047 006e BD46     		mov	sp, r7
 1048 0070 03B0     		add	sp, sp, #12
 1049              		@ sp needed for prologue
 1050 0072 90BD     		pop	{r4, r7, pc}
 1051              	.L68:
 1052              		.align	2
 1053              	.L67:
 1054 0074 A4100F40 		.word	1074729124
ARM GAS  C:\Users\trehans\AppData\Local\Temp\ccSsDmq0.s 			page 39


 1055 0078 61000F40 		.word	1074724961
 1056 007c 92000F40 		.word	1074725010
 1057 0080 93000F40 		.word	1074725011
 1058              		.cfi_endproc
 1059              	.LFE19:
 1060              		.size	SPI_ClearFIFO, .-SPI_ClearFIFO
 1061              		.section	.text.SPI_EnableInt,"ax",%progbits
 1062              		.align	2
 1063              		.global	SPI_EnableInt
 1064              		.code	16
 1065              		.thumb_func
 1066              		.type	SPI_EnableInt, %function
 1067              	SPI_EnableInt:
 1068              	.LFB20:
1110:.\Generated_Source\PSoC4/SPI.c **** 
1111:.\Generated_Source\PSoC4/SPI.c **** 
1112:.\Generated_Source\PSoC4/SPI.c **** /* Following functions are for version Compatibility, they are obsolete.
1113:.\Generated_Source\PSoC4/SPI.c **** *  Please do not use it in new projects.
1114:.\Generated_Source\PSoC4/SPI.c **** */
1115:.\Generated_Source\PSoC4/SPI.c **** 
1116:.\Generated_Source\PSoC4/SPI.c **** 
1117:.\Generated_Source\PSoC4/SPI.c **** /*******************************************************************************
1118:.\Generated_Source\PSoC4/SPI.c **** * Function Name: SPI_EnableInt
1119:.\Generated_Source\PSoC4/SPI.c **** ********************************************************************************
1120:.\Generated_Source\PSoC4/SPI.c **** *
1121:.\Generated_Source\PSoC4/SPI.c **** * Summary:
1122:.\Generated_Source\PSoC4/SPI.c **** *  Enable internal interrupt generation.
1123:.\Generated_Source\PSoC4/SPI.c **** *
1124:.\Generated_Source\PSoC4/SPI.c **** * Parameters:
1125:.\Generated_Source\PSoC4/SPI.c **** *  None.
1126:.\Generated_Source\PSoC4/SPI.c **** *
1127:.\Generated_Source\PSoC4/SPI.c **** * Return:
1128:.\Generated_Source\PSoC4/SPI.c **** *  None.
1129:.\Generated_Source\PSoC4/SPI.c **** *
1130:.\Generated_Source\PSoC4/SPI.c **** * Theory:
1131:.\Generated_Source\PSoC4/SPI.c **** *  Enable the internal interrupt output -or- the interrupt component itself.
1132:.\Generated_Source\PSoC4/SPI.c **** *
1133:.\Generated_Source\PSoC4/SPI.c **** *******************************************************************************/
1134:.\Generated_Source\PSoC4/SPI.c **** void SPI_EnableInt(void) 
1135:.\Generated_Source\PSoC4/SPI.c **** {
 1069              		.loc 1 1135 0
 1070              		.cfi_startproc
 1071 0000 80B5     		push	{r7, lr}
 1072              	.LCFI53:
 1073              		.cfi_def_cfa_offset 8
 1074              		.cfi_offset 7, -8
 1075              		.cfi_offset 14, -4
 1076 0002 00AF     		add	r7, sp, #0
 1077              	.LCFI54:
 1078              		.cfi_def_cfa_register 7
1136:.\Generated_Source\PSoC4/SPI.c ****     #if(SPI_INTERNAL_TX_INT_ENABLED)
1137:.\Generated_Source\PSoC4/SPI.c ****         CyIntEnable(SPI_TX_ISR_NUMBER);
1138:.\Generated_Source\PSoC4/SPI.c ****     #endif /* SPI_INTERNAL_TX_INT_ENABLED */
1139:.\Generated_Source\PSoC4/SPI.c **** 
1140:.\Generated_Source\PSoC4/SPI.c ****     #if(SPI_INTERNAL_RX_INT_ENABLED)
1141:.\Generated_Source\PSoC4/SPI.c ****         CyIntEnable(SPI_RX_ISR_NUMBER);
 1079              		.loc 1 1141 0
ARM GAS  C:\Users\trehans\AppData\Local\Temp\ccSsDmq0.s 			page 40


 1080 0004 0020     		mov	r0, #0
 1081 0006 FFF7FEFF 		bl	CyIntEnable
1142:.\Generated_Source\PSoC4/SPI.c ****     #endif /* SPI_INTERNAL_RX_INT_ENABLED */
1143:.\Generated_Source\PSoC4/SPI.c **** }
 1082              		.loc 1 1143 0
 1083 000a BD46     		mov	sp, r7
 1084              		@ sp needed for prologue
 1085 000c 80BD     		pop	{r7, pc}
 1086              		.cfi_endproc
 1087              	.LFE20:
 1088              		.size	SPI_EnableInt, .-SPI_EnableInt
 1089 000e C046     		.section	.text.SPI_DisableInt,"ax",%progbits
 1090              		.align	2
 1091              		.global	SPI_DisableInt
 1092              		.code	16
 1093              		.thumb_func
 1094              		.type	SPI_DisableInt, %function
 1095              	SPI_DisableInt:
 1096              	.LFB21:
1144:.\Generated_Source\PSoC4/SPI.c **** 
1145:.\Generated_Source\PSoC4/SPI.c **** 
1146:.\Generated_Source\PSoC4/SPI.c **** /*******************************************************************************
1147:.\Generated_Source\PSoC4/SPI.c **** * Function Name: SPI_DisableInt
1148:.\Generated_Source\PSoC4/SPI.c **** ********************************************************************************
1149:.\Generated_Source\PSoC4/SPI.c **** *
1150:.\Generated_Source\PSoC4/SPI.c **** * Summary:
1151:.\Generated_Source\PSoC4/SPI.c **** *  Disable internal interrupt generation.
1152:.\Generated_Source\PSoC4/SPI.c **** *
1153:.\Generated_Source\PSoC4/SPI.c **** * Parameters:
1154:.\Generated_Source\PSoC4/SPI.c **** *  None.
1155:.\Generated_Source\PSoC4/SPI.c **** *
1156:.\Generated_Source\PSoC4/SPI.c **** * Return:
1157:.\Generated_Source\PSoC4/SPI.c **** *  None.
1158:.\Generated_Source\PSoC4/SPI.c **** *
1159:.\Generated_Source\PSoC4/SPI.c **** * Theory:
1160:.\Generated_Source\PSoC4/SPI.c **** *  Disable the internal interrupt output -or- the interrupt component itself.
1161:.\Generated_Source\PSoC4/SPI.c **** *
1162:.\Generated_Source\PSoC4/SPI.c **** *******************************************************************************/
1163:.\Generated_Source\PSoC4/SPI.c **** void SPI_DisableInt(void) 
1164:.\Generated_Source\PSoC4/SPI.c **** {
 1097              		.loc 1 1164 0
 1098              		.cfi_startproc
 1099 0000 80B5     		push	{r7, lr}
 1100              	.LCFI55:
 1101              		.cfi_def_cfa_offset 8
 1102              		.cfi_offset 7, -8
 1103              		.cfi_offset 14, -4
 1104 0002 00AF     		add	r7, sp, #0
 1105              	.LCFI56:
 1106              		.cfi_def_cfa_register 7
1165:.\Generated_Source\PSoC4/SPI.c ****     #if(SPI_INTERNAL_TX_INT_ENABLED)
1166:.\Generated_Source\PSoC4/SPI.c ****         CyIntDisable(SPI_TX_ISR_NUMBER);
1167:.\Generated_Source\PSoC4/SPI.c ****     #endif /* SPI_INTERNAL_TX_INT_ENABLED */
1168:.\Generated_Source\PSoC4/SPI.c **** 
1169:.\Generated_Source\PSoC4/SPI.c ****     #if(SPI_INTERNAL_RX_INT_ENABLED)
1170:.\Generated_Source\PSoC4/SPI.c ****         CyIntDisable(SPI_RX_ISR_NUMBER);
 1107              		.loc 1 1170 0
ARM GAS  C:\Users\trehans\AppData\Local\Temp\ccSsDmq0.s 			page 41


 1108 0004 0020     		mov	r0, #0
 1109 0006 FFF7FEFF 		bl	CyIntDisable
1171:.\Generated_Source\PSoC4/SPI.c ****     #endif /* SPI_INTERNAL_RX_INT_ENABLED */
1172:.\Generated_Source\PSoC4/SPI.c **** }
 1110              		.loc 1 1172 0
 1111 000a BD46     		mov	sp, r7
 1112              		@ sp needed for prologue
 1113 000c 80BD     		pop	{r7, pc}
 1114              		.cfi_endproc
 1115              	.LFE21:
 1116              		.size	SPI_DisableInt, .-SPI_DisableInt
 1117 000e C046     		.section	.text.SPI_SetInterruptMode,"ax",%progbits
 1118              		.align	2
 1119              		.global	SPI_SetInterruptMode
 1120              		.code	16
 1121              		.thumb_func
 1122              		.type	SPI_SetInterruptMode, %function
 1123              	SPI_SetInterruptMode:
 1124              	.LFB22:
1173:.\Generated_Source\PSoC4/SPI.c **** 
1174:.\Generated_Source\PSoC4/SPI.c **** 
1175:.\Generated_Source\PSoC4/SPI.c **** /*******************************************************************************
1176:.\Generated_Source\PSoC4/SPI.c **** * Function Name: SPI_SetInterruptMode
1177:.\Generated_Source\PSoC4/SPI.c **** ********************************************************************************
1178:.\Generated_Source\PSoC4/SPI.c **** *
1179:.\Generated_Source\PSoC4/SPI.c **** * Summary:
1180:.\Generated_Source\PSoC4/SPI.c **** *  Configure which status bits trigger an interrupt event.
1181:.\Generated_Source\PSoC4/SPI.c **** *
1182:.\Generated_Source\PSoC4/SPI.c **** * Parameters:
1183:.\Generated_Source\PSoC4/SPI.c **** *  intSrc: An or'd combination of the desired status bit masks (defined in the
1184:.\Generated_Source\PSoC4/SPI.c **** *  header file).
1185:.\Generated_Source\PSoC4/SPI.c **** *
1186:.\Generated_Source\PSoC4/SPI.c **** * Return:
1187:.\Generated_Source\PSoC4/SPI.c **** *  None.
1188:.\Generated_Source\PSoC4/SPI.c **** *
1189:.\Generated_Source\PSoC4/SPI.c **** * Theory:
1190:.\Generated_Source\PSoC4/SPI.c **** *  Enables the output of specific status bits to the interrupt controller.
1191:.\Generated_Source\PSoC4/SPI.c **** *
1192:.\Generated_Source\PSoC4/SPI.c **** *******************************************************************************/
1193:.\Generated_Source\PSoC4/SPI.c **** void SPI_SetInterruptMode(uint8 intSrc) 
1194:.\Generated_Source\PSoC4/SPI.c **** {
 1125              		.loc 1 1194 0
 1126              		.cfi_startproc
 1127 0000 80B5     		push	{r7, lr}
 1128              	.LCFI57:
 1129              		.cfi_def_cfa_offset 8
 1130              		.cfi_offset 7, -8
 1131              		.cfi_offset 14, -4
 1132 0002 82B0     		sub	sp, sp, #8
 1133              	.LCFI58:
 1134              		.cfi_def_cfa_offset 16
 1135 0004 00AF     		add	r7, sp, #0
 1136              	.LCFI59:
 1137              		.cfi_def_cfa_register 7
 1138 0006 021C     		mov	r2, r0
 1139 0008 FB1D     		add	r3, r7, #7
 1140 000a 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\trehans\AppData\Local\Temp\ccSsDmq0.s 			page 42


1195:.\Generated_Source\PSoC4/SPI.c ****     SPI_TX_STATUS_MASK_REG  = intSrc;
 1141              		.loc 1 1195 0
 1142 000c 054B     		ldr	r3, .L72
 1143 000e FA1D     		add	r2, r7, #7
 1144 0010 1278     		ldrb	r2, [r2]
 1145 0012 1A70     		strb	r2, [r3]
1196:.\Generated_Source\PSoC4/SPI.c ****     SPI_RX_STATUS_MASK_REG  = intSrc;
 1146              		.loc 1 1196 0
 1147 0014 044B     		ldr	r3, .L72+4
 1148 0016 FA1D     		add	r2, r7, #7
 1149 0018 1278     		ldrb	r2, [r2]
 1150 001a 1A70     		strb	r2, [r3]
1197:.\Generated_Source\PSoC4/SPI.c **** }
 1151              		.loc 1 1197 0
 1152 001c BD46     		mov	sp, r7
 1153 001e 02B0     		add	sp, sp, #8
 1154              		@ sp needed for prologue
 1155 0020 80BD     		pop	{r7, pc}
 1156              	.L73:
 1157 0022 C046     		.align	2
 1158              	.L72:
 1159 0024 83000F40 		.word	1074724995
 1160 0028 81000F40 		.word	1074724993
 1161              		.cfi_endproc
 1162              	.LFE22:
 1163              		.size	SPI_SetInterruptMode, .-SPI_SetInterruptMode
 1164              		.section	.text.SPI_ReadStatus,"ax",%progbits
 1165              		.align	2
 1166              		.global	SPI_ReadStatus
 1167              		.code	16
 1168              		.thumb_func
 1169              		.type	SPI_ReadStatus, %function
 1170              	SPI_ReadStatus:
 1171              	.LFB23:
1198:.\Generated_Source\PSoC4/SPI.c **** 
1199:.\Generated_Source\PSoC4/SPI.c **** 
1200:.\Generated_Source\PSoC4/SPI.c **** /*******************************************************************************
1201:.\Generated_Source\PSoC4/SPI.c **** * Function Name: SPI_ReadStatus
1202:.\Generated_Source\PSoC4/SPI.c **** ********************************************************************************
1203:.\Generated_Source\PSoC4/SPI.c **** *
1204:.\Generated_Source\PSoC4/SPI.c **** * Summary:
1205:.\Generated_Source\PSoC4/SPI.c **** *  Read the status register for the component.
1206:.\Generated_Source\PSoC4/SPI.c **** *
1207:.\Generated_Source\PSoC4/SPI.c **** * Parameters:
1208:.\Generated_Source\PSoC4/SPI.c **** *  None.
1209:.\Generated_Source\PSoC4/SPI.c **** *
1210:.\Generated_Source\PSoC4/SPI.c **** * Return:
1211:.\Generated_Source\PSoC4/SPI.c **** *  Contents of the status register.
1212:.\Generated_Source\PSoC4/SPI.c **** *
1213:.\Generated_Source\PSoC4/SPI.c **** * Global variables:
1214:.\Generated_Source\PSoC4/SPI.c **** *  SPI_swStatus - used to store in software status register,
1215:.\Generated_Source\PSoC4/SPI.c **** *  modified every function call - resets to zero.
1216:.\Generated_Source\PSoC4/SPI.c **** *
1217:.\Generated_Source\PSoC4/SPI.c **** * Theory:
1218:.\Generated_Source\PSoC4/SPI.c **** *  Allows the user and the API to read the status register for error detection
1219:.\Generated_Source\PSoC4/SPI.c **** *  and flow control.
1220:.\Generated_Source\PSoC4/SPI.c **** *
ARM GAS  C:\Users\trehans\AppData\Local\Temp\ccSsDmq0.s 			page 43


1221:.\Generated_Source\PSoC4/SPI.c **** * Side Effects:
1222:.\Generated_Source\PSoC4/SPI.c **** *  Clear status register of the component.
1223:.\Generated_Source\PSoC4/SPI.c **** *
1224:.\Generated_Source\PSoC4/SPI.c **** * Reentrant:
1225:.\Generated_Source\PSoC4/SPI.c **** *  No.
1226:.\Generated_Source\PSoC4/SPI.c **** *
1227:.\Generated_Source\PSoC4/SPI.c **** *******************************************************************************/
1228:.\Generated_Source\PSoC4/SPI.c **** uint8 SPI_ReadStatus(void) 
1229:.\Generated_Source\PSoC4/SPI.c **** {
 1172              		.loc 1 1229 0
 1173              		.cfi_startproc
 1174 0000 80B5     		push	{r7, lr}
 1175              	.LCFI60:
 1176              		.cfi_def_cfa_offset 8
 1177              		.cfi_offset 7, -8
 1178              		.cfi_offset 14, -4
 1179 0002 82B0     		sub	sp, sp, #8
 1180              	.LCFI61:
 1181              		.cfi_def_cfa_offset 16
 1182 0004 00AF     		add	r7, sp, #0
 1183              	.LCFI62:
 1184              		.cfi_def_cfa_register 7
1230:.\Generated_Source\PSoC4/SPI.c ****     uint8 tmpStatus;
1231:.\Generated_Source\PSoC4/SPI.c **** 
1232:.\Generated_Source\PSoC4/SPI.c ****     #if ((SPI_TX_SOFTWARE_BUF_ENABLED) || (SPI_RX_SOFTWARE_BUF_ENABLED))
1233:.\Generated_Source\PSoC4/SPI.c **** 
1234:.\Generated_Source\PSoC4/SPI.c ****         SPI_DisableInt();
1235:.\Generated_Source\PSoC4/SPI.c **** 
1236:.\Generated_Source\PSoC4/SPI.c ****         tmpStatus = SPI_GET_STATUS_TX(SPI_swStatusTx) |
1237:.\Generated_Source\PSoC4/SPI.c ****               (SPI_GET_STATUS_RX(SPI_swStatusRx) & (uint8)~SPI_STS_RX_FIFO_FULL);
1238:.\Generated_Source\PSoC4/SPI.c **** 
1239:.\Generated_Source\PSoC4/SPI.c ****         SPI_swStatusTx = 0u;
1240:.\Generated_Source\PSoC4/SPI.c ****         SPI_swStatusRx = 0u;
1241:.\Generated_Source\PSoC4/SPI.c **** 
1242:.\Generated_Source\PSoC4/SPI.c ****         /* Enable Interrupts */
1243:.\Generated_Source\PSoC4/SPI.c ****         SPI_EnableInt();
1244:.\Generated_Source\PSoC4/SPI.c **** 
1245:.\Generated_Source\PSoC4/SPI.c ****     #else /* !((SPI_TX_SOFTWARE_BUF_ENABLED) || (SPI_RX_SOFTWARE_BUF_ENABLED)) */
1246:.\Generated_Source\PSoC4/SPI.c **** 
1247:.\Generated_Source\PSoC4/SPI.c ****         tmpStatus = SPI_TX_STATUS_REG | (SPI_RX_STATUS_REG &
 1185              		.loc 1 1247 0
 1186 0006 0A4B     		ldr	r3, .L76
 1187 0008 1B78     		ldrb	r3, [r3]
 1188 000a DBB2     		uxtb	r3, r3
 1189 000c DAB2     		uxtb	r2, r3
 1190 000e 094B     		ldr	r3, .L76+4
 1191 0010 1B78     		ldrb	r3, [r3]
 1192 0012 DBB2     		uxtb	r3, r3
 1193 0014 DBB2     		uxtb	r3, r3
 1194 0016 4021     		mov	r1, #64
 1195 0018 8B43     		bic	r3, r1
 1196 001a DBB2     		uxtb	r3, r3
 1197 001c 1343     		orr	r3, r2
 1198 001e DAB2     		uxtb	r2, r3
 1199 0020 FB1D     		add	r3, r7, #7
 1200 0022 1A70     		strb	r2, [r3]
1248:.\Generated_Source\PSoC4/SPI.c ****                                                       (uint8)~SPI_STS_RX_FIFO_FULL);
ARM GAS  C:\Users\trehans\AppData\Local\Temp\ccSsDmq0.s 			page 44


1249:.\Generated_Source\PSoC4/SPI.c **** 
1250:.\Generated_Source\PSoC4/SPI.c ****     #endif /* (SPI_TX_SOFTWARE_BUF_ENABLED) || (SPI_RX_SOFTWARE_BUF_ENABLED) */
1251:.\Generated_Source\PSoC4/SPI.c **** 
1252:.\Generated_Source\PSoC4/SPI.c ****     return(tmpStatus);
 1201              		.loc 1 1252 0
 1202 0024 FB1D     		add	r3, r7, #7
 1203 0026 1B78     		ldrb	r3, [r3]
1253:.\Generated_Source\PSoC4/SPI.c **** }
 1204              		.loc 1 1253 0
 1205 0028 181C     		mov	r0, r3
 1206 002a BD46     		mov	sp, r7
 1207 002c 02B0     		add	sp, sp, #8
 1208              		@ sp needed for prologue
 1209 002e 80BD     		pop	{r7, pc}
 1210              	.L77:
 1211              		.align	2
 1212              	.L76:
 1213 0030 63000F40 		.word	1074724963
 1214 0034 61000F40 		.word	1074724961
 1215              		.cfi_endproc
 1216              	.LFE23:
 1217              		.size	SPI_ReadStatus, .-SPI_ReadStatus
 1218              		.text
 1219              	.Letext0:
 1220              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 1221              		.section	.debug_info,"",%progbits
 1222              	.Ldebug_info0:
 1223 0000 82040000 		.4byte	0x482
 1224 0004 0200     		.2byte	0x2
 1225 0006 00000000 		.4byte	.Ldebug_abbrev0
 1226 000a 04       		.byte	0x4
 1227 000b 01       		.uleb128 0x1
 1228 000c 29030000 		.4byte	.LASF53
 1229 0010 01       		.byte	0x1
 1230 0011 14000000 		.4byte	.LASF54
 1231 0015 B1000000 		.4byte	.LASF55
 1232 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1233 001d 00000000 		.4byte	0
 1234 0021 00000000 		.4byte	0
 1235 0025 00000000 		.4byte	.Ldebug_line0
 1236 0029 02       		.uleb128 0x2
 1237 002a 01       		.byte	0x1
 1238 002b 06       		.byte	0x6
 1239 002c F4020000 		.4byte	.LASF0
 1240 0030 02       		.uleb128 0x2
 1241 0031 01       		.byte	0x1
 1242 0032 08       		.byte	0x8
 1243 0033 92010000 		.4byte	.LASF1
 1244 0037 02       		.uleb128 0x2
 1245 0038 02       		.byte	0x2
 1246 0039 05       		.byte	0x5
 1247 003a AE020000 		.4byte	.LASF2
 1248 003e 02       		.uleb128 0x2
 1249 003f 02       		.byte	0x2
 1250 0040 07       		.byte	0x7
 1251 0041 5E000000 		.4byte	.LASF3
 1252 0045 02       		.uleb128 0x2
ARM GAS  C:\Users\trehans\AppData\Local\Temp\ccSsDmq0.s 			page 45


 1253 0046 04       		.byte	0x4
 1254 0047 05       		.byte	0x5
 1255 0048 D0020000 		.4byte	.LASF4
 1256 004c 02       		.uleb128 0x2
 1257 004d 04       		.byte	0x4
 1258 004e 07       		.byte	0x7
 1259 004f 4F010000 		.4byte	.LASF5
 1260 0053 02       		.uleb128 0x2
 1261 0054 08       		.byte	0x8
 1262 0055 05       		.byte	0x5
 1263 0056 81020000 		.4byte	.LASF6
 1264 005a 02       		.uleb128 0x2
 1265 005b 08       		.byte	0x8
 1266 005c 07       		.byte	0x7
 1267 005d 2E020000 		.4byte	.LASF7
 1268 0061 03       		.uleb128 0x3
 1269 0062 04       		.byte	0x4
 1270 0063 05       		.byte	0x5
 1271 0064 696E7400 		.ascii	"int\000"
 1272 0068 02       		.uleb128 0x2
 1273 0069 04       		.byte	0x4
 1274 006a 07       		.byte	0x7
 1275 006b 0A020000 		.4byte	.LASF8
 1276 006f 04       		.uleb128 0x4
 1277 0070 61010000 		.4byte	.LASF9
 1278 0074 02       		.byte	0x2
 1279 0075 5B       		.byte	0x5b
 1280 0076 30000000 		.4byte	0x30
 1281 007a 04       		.uleb128 0x4
 1282 007b EF010000 		.4byte	.LASF10
 1283 007f 02       		.byte	0x2
 1284 0080 5C       		.byte	0x5c
 1285 0081 3E000000 		.4byte	0x3e
 1286 0085 02       		.uleb128 0x2
 1287 0086 04       		.byte	0x4
 1288 0087 04       		.byte	0x4
 1289 0088 0B010000 		.4byte	.LASF11
 1290 008c 02       		.uleb128 0x2
 1291 008d 08       		.byte	0x8
 1292 008e 04       		.byte	0x4
 1293 008f A0010000 		.4byte	.LASF12
 1294 0093 02       		.uleb128 0x2
 1295 0094 01       		.byte	0x1
 1296 0095 08       		.byte	0x8
 1297 0096 8F020000 		.4byte	.LASF13
 1298 009a 04       		.uleb128 0x4
 1299 009b 39010000 		.4byte	.LASF14
 1300 009f 02       		.byte	0x2
 1301 00a0 F0       		.byte	0xf0
 1302 00a1 A5000000 		.4byte	0xa5
 1303 00a5 05       		.uleb128 0x5
 1304 00a6 6F000000 		.4byte	0x6f
 1305 00aa 04       		.uleb128 0x4
 1306 00ab 00000000 		.4byte	.LASF15
 1307 00af 02       		.byte	0x2
 1308 00b0 F1       		.byte	0xf1
 1309 00b1 B5000000 		.4byte	0xb5
ARM GAS  C:\Users\trehans\AppData\Local\Temp\ccSsDmq0.s 			page 46


 1310 00b5 05       		.uleb128 0x5
 1311 00b6 7A000000 		.4byte	0x7a
 1312 00ba 02       		.uleb128 0x2
 1313 00bb 04       		.byte	0x4
 1314 00bc 07       		.byte	0x7
 1315 00bd 67020000 		.4byte	.LASF16
 1316 00c1 06       		.uleb128 0x6
 1317 00c2 01       		.byte	0x1
 1318 00c3 71000000 		.4byte	.LASF17
 1319 00c7 01       		.byte	0x1
 1320 00c8 43       		.byte	0x43
 1321 00c9 01       		.byte	0x1
 1322 00ca 00000000 		.4byte	.LFB0
 1323 00ce 50000000 		.4byte	.LFE0
 1324 00d2 00000000 		.4byte	.LLST0
 1325 00d6 01       		.byte	0x1
 1326 00d7 07       		.uleb128 0x7
 1327 00d8 01       		.byte	0x1
 1328 00d9 94020000 		.4byte	.LASF19
 1329 00dd 01       		.byte	0x1
 1330 00de 8F       		.byte	0x8f
 1331 00df 01       		.byte	0x1
 1332 00e0 00000000 		.4byte	.LFB1
 1333 00e4 64000000 		.4byte	.LFE1
 1334 00e8 2C000000 		.4byte	.LLST1
 1335 00ec 01       		.byte	0x1
 1336 00ed 00010000 		.4byte	0x100
 1337 00f1 08       		.uleb128 0x8
 1338 00f2 70020000 		.4byte	.LASF21
 1339 00f6 01       		.byte	0x1
 1340 00f7 91       		.byte	0x91
 1341 00f8 6F000000 		.4byte	0x6f
 1342 00fc 02       		.byte	0x2
 1343 00fd 91       		.byte	0x91
 1344 00fe 6F       		.sleb128 -17
 1345 00ff 00       		.byte	0
 1346 0100 06       		.uleb128 0x6
 1347 0101 01       		.byte	0x1
 1348 0102 1F030000 		.4byte	.LASF18
 1349 0106 01       		.byte	0x1
 1350 0107 BC       		.byte	0xbc
 1351 0108 01       		.byte	0x1
 1352 0109 00000000 		.4byte	.LFB2
 1353 010d 24000000 		.4byte	.LFE2
 1354 0111 64000000 		.4byte	.LLST2
 1355 0115 01       		.byte	0x1
 1356 0116 07       		.uleb128 0x7
 1357 0117 01       		.byte	0x1
 1358 0118 E6010000 		.4byte	.LASF20
 1359 011c 01       		.byte	0x1
 1360 011d D9       		.byte	0xd9
 1361 011e 01       		.byte	0x1
 1362 011f 00000000 		.4byte	.LFB3
 1363 0123 50000000 		.4byte	.LFE3
 1364 0127 90000000 		.4byte	.LLST3
 1365 012b 01       		.byte	0x1
 1366 012c 3F010000 		.4byte	0x13f
ARM GAS  C:\Users\trehans\AppData\Local\Temp\ccSsDmq0.s 			page 47


 1367 0130 08       		.uleb128 0x8
 1368 0131 70020000 		.4byte	.LASF21
 1369 0135 01       		.byte	0x1
 1370 0136 DB       		.byte	0xdb
 1371 0137 6F000000 		.4byte	0x6f
 1372 013b 02       		.byte	0x2
 1373 013c 91       		.byte	0x91
 1374 013d 6F       		.sleb128 -17
 1375 013e 00       		.byte	0
 1376 013f 09       		.uleb128 0x9
 1377 0140 01       		.byte	0x1
 1378 0141 82010000 		.4byte	.LASF22
 1379 0145 01       		.byte	0x1
 1380 0146 FE       		.byte	0xfe
 1381 0147 01       		.byte	0x1
 1382 0148 00000000 		.4byte	.LFB4
 1383 014c 08000000 		.4byte	.LFE4
 1384 0150 C8000000 		.4byte	.LLST4
 1385 0154 01       		.byte	0x1
 1386 0155 0A       		.uleb128 0xa
 1387 0156 01       		.byte	0x1
 1388 0157 0F030000 		.4byte	.LASF23
 1389 015b 01       		.byte	0x1
 1390 015c 1701     		.2byte	0x117
 1391 015e 01       		.byte	0x1
 1392 015f 00000000 		.4byte	.LFB5
 1393 0163 0E000000 		.4byte	.LFE5
 1394 0167 F4000000 		.4byte	.LLST5
 1395 016b 01       		.byte	0x1
 1396 016c 0B       		.uleb128 0xb
 1397 016d 01       		.byte	0x1
 1398 016e BF020000 		.4byte	.LASF24
 1399 0172 01       		.byte	0x1
 1400 0173 3001     		.2byte	0x130
 1401 0175 01       		.byte	0x1
 1402 0176 00000000 		.4byte	.LFB6
 1403 017a 08000000 		.4byte	.LFE6
 1404 017e 20010000 		.4byte	.LLST6
 1405 0182 01       		.byte	0x1
 1406 0183 0A       		.uleb128 0xa
 1407 0184 01       		.byte	0x1
 1408 0185 3E010000 		.4byte	.LASF25
 1409 0189 01       		.byte	0x1
 1410 018a 4901     		.2byte	0x149
 1411 018c 01       		.byte	0x1
 1412 018d 00000000 		.4byte	.LFB7
 1413 0191 0E000000 		.4byte	.LFE7
 1414 0195 4C010000 		.4byte	.LLST7
 1415 0199 01       		.byte	0x1
 1416 019a 0C       		.uleb128 0xc
 1417 019b 01       		.byte	0x1
 1418 019c 17020000 		.4byte	.LASF26
 1419 01a0 01       		.byte	0x1
 1420 01a1 6301     		.2byte	0x163
 1421 01a3 01       		.byte	0x1
 1422 01a4 00000000 		.4byte	.LFB8
 1423 01a8 20000000 		.4byte	.LFE8
ARM GAS  C:\Users\trehans\AppData\Local\Temp\ccSsDmq0.s 			page 48


 1424 01ac 78010000 		.4byte	.LLST8
 1425 01b0 01       		.byte	0x1
 1426 01b1 C5010000 		.4byte	0x1c5
 1427 01b5 0D       		.uleb128 0xd
 1428 01b6 BE010000 		.4byte	.LASF28
 1429 01ba 01       		.byte	0x1
 1430 01bb 6301     		.2byte	0x163
 1431 01bd 6F000000 		.4byte	0x6f
 1432 01c1 02       		.byte	0x2
 1433 01c2 91       		.byte	0x91
 1434 01c3 77       		.sleb128 -9
 1435 01c4 00       		.byte	0
 1436 01c5 0C       		.uleb128 0xc
 1437 01c6 01       		.byte	0x1
 1438 01c7 A7010000 		.4byte	.LASF27
 1439 01cb 01       		.byte	0x1
 1440 01cc 7B01     		.2byte	0x17b
 1441 01ce 01       		.byte	0x1
 1442 01cf 00000000 		.4byte	.LFB9
 1443 01d3 20000000 		.4byte	.LFE9
 1444 01d7 B0010000 		.4byte	.LLST9
 1445 01db 01       		.byte	0x1
 1446 01dc F0010000 		.4byte	0x1f0
 1447 01e0 0D       		.uleb128 0xd
 1448 01e1 BE010000 		.4byte	.LASF28
 1449 01e5 01       		.byte	0x1
 1450 01e6 7B01     		.2byte	0x17b
 1451 01e8 6F000000 		.4byte	0x6f
 1452 01ec 02       		.byte	0x2
 1453 01ed 91       		.byte	0x91
 1454 01ee 77       		.sleb128 -9
 1455 01ef 00       		.byte	0
 1456 01f0 0E       		.uleb128 0xe
 1457 01f1 01       		.byte	0x1
 1458 01f2 71010000 		.4byte	.LASF30
 1459 01f6 01       		.byte	0x1
 1460 01f7 9D01     		.2byte	0x19d
 1461 01f9 01       		.byte	0x1
 1462 01fa 6F000000 		.4byte	0x6f
 1463 01fe 00000000 		.4byte	.LFB10
 1464 0202 20000000 		.4byte	.LFE10
 1465 0206 E8010000 		.4byte	.LLST10
 1466 020a 01       		.byte	0x1
 1467 020b 1F020000 		.4byte	0x21f
 1468 020f 0F       		.uleb128 0xf
 1469 0210 D9020000 		.4byte	.LASF29
 1470 0214 01       		.byte	0x1
 1471 0215 9F01     		.2byte	0x19f
 1472 0217 6F000000 		.4byte	0x6f
 1473 021b 02       		.byte	0x2
 1474 021c 91       		.byte	0x91
 1475 021d 77       		.sleb128 -9
 1476 021e 00       		.byte	0
 1477 021f 0E       		.uleb128 0xe
 1478 0220 01       		.byte	0x1
 1479 0221 E3020000 		.4byte	.LASF31
 1480 0225 01       		.byte	0x1
ARM GAS  C:\Users\trehans\AppData\Local\Temp\ccSsDmq0.s 			page 49


 1481 0226 D201     		.2byte	0x1d2
 1482 0228 01       		.byte	0x1
 1483 0229 6F000000 		.4byte	0x6f
 1484 022d 00000000 		.4byte	.LFB11
 1485 0231 20000000 		.4byte	.LFE11
 1486 0235 20020000 		.4byte	.LLST11
 1487 0239 01       		.byte	0x1
 1488 023a 4E020000 		.4byte	0x24e
 1489 023e 0F       		.uleb128 0xf
 1490 023f D9020000 		.4byte	.LASF29
 1491 0243 01       		.byte	0x1
 1492 0244 D401     		.2byte	0x1d4
 1493 0246 6F000000 		.4byte	0x6f
 1494 024a 02       		.byte	0x2
 1495 024b 91       		.byte	0x91
 1496 024c 77       		.sleb128 -9
 1497 024d 00       		.byte	0
 1498 024e 0C       		.uleb128 0xc
 1499 024f 01       		.byte	0x1
 1500 0250 33000000 		.4byte	.LASF32
 1501 0254 01       		.byte	0x1
 1502 0255 0D02     		.2byte	0x20d
 1503 0257 01       		.byte	0x1
 1504 0258 00000000 		.4byte	.LFB12
 1505 025c 34000000 		.4byte	.LFE12
 1506 0260 58020000 		.4byte	.LLST12
 1507 0264 01       		.byte	0x1
 1508 0265 79020000 		.4byte	0x279
 1509 0269 0D       		.uleb128 0xd
 1510 026a 4E020000 		.4byte	.LASF33
 1511 026e 01       		.byte	0x1
 1512 026f 0D02     		.2byte	0x20d
 1513 0271 7A000000 		.4byte	0x7a
 1514 0275 02       		.byte	0x2
 1515 0276 91       		.byte	0x91
 1516 0277 76       		.sleb128 -10
 1517 0278 00       		.byte	0
 1518 0279 0E       		.uleb128 0xe
 1519 027a 01       		.byte	0x1
 1520 027b 4F000000 		.4byte	.LASF34
 1521 027f 01       		.byte	0x1
 1522 0280 9702     		.2byte	0x297
 1523 0282 01       		.byte	0x1
 1524 0283 7A000000 		.4byte	0x7a
 1525 0287 00000000 		.4byte	.LFB13
 1526 028b 20000000 		.4byte	.LFE13
 1527 028f 90020000 		.4byte	.LLST13
 1528 0293 01       		.byte	0x1
 1529 0294 A8020000 		.4byte	0x2a8
 1530 0298 0F       		.uleb128 0xf
 1531 0299 AA000000 		.4byte	.LASF35
 1532 029d 01       		.byte	0x1
 1533 029e 9902     		.2byte	0x299
 1534 02a0 7A000000 		.4byte	0x7a
 1535 02a4 02       		.byte	0x2
 1536 02a5 91       		.byte	0x91
 1537 02a6 76       		.sleb128 -10
ARM GAS  C:\Users\trehans\AppData\Local\Temp\ccSsDmq0.s 			page 50


 1538 02a7 00       		.byte	0
 1539 02a8 0E       		.uleb128 0xe
 1540 02a9 01       		.byte	0x1
 1541 02aa F6010000 		.4byte	.LASF36
 1542 02ae 01       		.byte	0x1
 1543 02af D902     		.2byte	0x2d9
 1544 02b1 01       		.byte	0x1
 1545 02b2 6F000000 		.4byte	0x6f
 1546 02b6 00000000 		.4byte	.LFB14
 1547 02ba 30000000 		.4byte	.LFE14
 1548 02be C8020000 		.4byte	.LLST14
 1549 02c2 01       		.byte	0x1
 1550 02c3 D7020000 		.4byte	0x2d7
 1551 02c7 0F       		.uleb128 0xf
 1552 02c8 34010000 		.4byte	.LASF37
 1553 02cc 01       		.byte	0x1
 1554 02cd DB02     		.2byte	0x2db
 1555 02cf 6F000000 		.4byte	0x6f
 1556 02d3 02       		.byte	0x2
 1557 02d4 91       		.byte	0x91
 1558 02d5 77       		.sleb128 -9
 1559 02d6 00       		.byte	0
 1560 02d7 0E       		.uleb128 0xe
 1561 02d8 01       		.byte	0x1
 1562 02d9 D2010000 		.4byte	.LASF38
 1563 02dd 01       		.byte	0x1
 1564 02de 1A03     		.2byte	0x31a
 1565 02e0 01       		.byte	0x1
 1566 02e1 6F000000 		.4byte	0x6f
 1567 02e5 00000000 		.4byte	.LFB15
 1568 02e9 48000000 		.4byte	.LFE15
 1569 02ed 00030000 		.4byte	.LLST15
 1570 02f1 01       		.byte	0x1
 1571 02f2 06030000 		.4byte	0x306
 1572 02f6 0F       		.uleb128 0xf
 1573 02f7 34010000 		.4byte	.LASF37
 1574 02fb 01       		.byte	0x1
 1575 02fc 1C03     		.2byte	0x31c
 1576 02fe 6F000000 		.4byte	0x6f
 1577 0302 02       		.byte	0x2
 1578 0303 91       		.byte	0x91
 1579 0304 77       		.sleb128 -9
 1580 0305 00       		.byte	0
 1581 0306 0B       		.uleb128 0xb
 1582 0307 01       		.byte	0x1
 1583 0308 55020000 		.4byte	.LASF39
 1584 030c 01       		.byte	0x1
 1585 030d 6C03     		.2byte	0x36c
 1586 030f 01       		.byte	0x1
 1587 0310 00000000 		.4byte	.LFB16
 1588 0314 24000000 		.4byte	.LFE16
 1589 0318 38030000 		.4byte	.LLST16
 1590 031c 01       		.byte	0x1
 1591 031d 10       		.uleb128 0x10
 1592 031e 01       		.byte	0x1
 1593 031f 89000000 		.4byte	.LASF40
 1594 0323 01       		.byte	0x1
ARM GAS  C:\Users\trehans\AppData\Local\Temp\ccSsDmq0.s 			page 51


 1595 0324 A503     		.2byte	0x3a5
 1596 0326 01       		.byte	0x1
 1597 0327 00000000 		.4byte	.LFB17
 1598 032b 68000000 		.4byte	.LFE17
 1599 032f 64030000 		.4byte	.LLST17
 1600 0333 01       		.byte	0x1
 1601 0334 48030000 		.4byte	0x348
 1602 0338 0F       		.uleb128 0xf
 1603 0339 70020000 		.4byte	.LASF21
 1604 033d 01       		.byte	0x1
 1605 033e A703     		.2byte	0x3a7
 1606 0340 6F000000 		.4byte	0x6f
 1607 0344 02       		.byte	0x2
 1608 0345 91       		.byte	0x91
 1609 0346 6F       		.sleb128 -17
 1610 0347 00       		.byte	0
 1611 0348 10       		.uleb128 0x10
 1612 0349 01       		.byte	0x1
 1613 034a C5010000 		.4byte	.LASF41
 1614 034e 01       		.byte	0x1
 1615 034f 1904     		.2byte	0x419
 1616 0351 01       		.byte	0x1
 1617 0352 00000000 		.4byte	.LFB18
 1618 0356 52000000 		.4byte	.LFE18
 1619 035a 9C030000 		.4byte	.LLST18
 1620 035e 01       		.byte	0x1
 1621 035f 91030000 		.4byte	0x391
 1622 0363 0D       		.uleb128 0xd
 1623 0364 B8020000 		.4byte	.LASF42
 1624 0368 01       		.byte	0x1
 1625 0369 1904     		.2byte	0x419
 1626 036b 91030000 		.4byte	0x391
 1627 036f 02       		.byte	0x2
 1628 0370 91       		.byte	0x91
 1629 0371 6C       		.sleb128 -20
 1630 0372 0D       		.uleb128 0xd
 1631 0373 67010000 		.4byte	.LASF43
 1632 0377 01       		.byte	0x1
 1633 0378 1904     		.2byte	0x419
 1634 037a 6F000000 		.4byte	0x6f
 1635 037e 02       		.byte	0x2
 1636 037f 91       		.byte	0x91
 1637 0380 6B       		.sleb128 -21
 1638 0381 0F       		.uleb128 0xf
 1639 0382 45020000 		.4byte	.LASF44
 1640 0386 01       		.byte	0x1
 1641 0387 1C04     		.2byte	0x41c
 1642 0389 6F000000 		.4byte	0x6f
 1643 038d 02       		.byte	0x2
 1644 038e 91       		.byte	0x91
 1645 038f 77       		.sleb128 -9
 1646 0390 00       		.byte	0
 1647 0391 11       		.uleb128 0x11
 1648 0392 04       		.byte	0x4
 1649 0393 97030000 		.4byte	0x397
 1650 0397 12       		.uleb128 0x12
 1651 0398 7A000000 		.4byte	0x7a
ARM GAS  C:\Users\trehans\AppData\Local\Temp\ccSsDmq0.s 			page 52


 1652 039c 10       		.uleb128 0x10
 1653 039d 01       		.byte	0x1
 1654 039e 11010000 		.4byte	.LASF45
 1655 03a2 01       		.byte	0x1
 1656 03a3 3904     		.2byte	0x439
 1657 03a5 01       		.byte	0x1
 1658 03a6 00000000 		.4byte	.LFB19
 1659 03aa 84000000 		.4byte	.LFE19
 1660 03ae D4030000 		.4byte	.LLST19
 1661 03b2 01       		.byte	0x1
 1662 03b3 C7030000 		.4byte	0x3c7
 1663 03b7 0F       		.uleb128 0xf
 1664 03b8 70020000 		.4byte	.LASF21
 1665 03bc 01       		.byte	0x1
 1666 03bd 3B04     		.2byte	0x43b
 1667 03bf 6F000000 		.4byte	0x6f
 1668 03c3 02       		.byte	0x2
 1669 03c4 91       		.byte	0x91
 1670 03c5 6F       		.sleb128 -17
 1671 03c6 00       		.byte	0
 1672 03c7 0A       		.uleb128 0xa
 1673 03c8 01       		.byte	0x1
 1674 03c9 06000000 		.4byte	.LASF46
 1675 03cd 01       		.byte	0x1
 1676 03ce 6E04     		.2byte	0x46e
 1677 03d0 01       		.byte	0x1
 1678 03d1 00000000 		.4byte	.LFB20
 1679 03d5 0E000000 		.4byte	.LFE20
 1680 03d9 0C040000 		.4byte	.LLST20
 1681 03dd 01       		.byte	0x1
 1682 03de 0A       		.uleb128 0xa
 1683 03df 01       		.byte	0x1
 1684 03e0 9F020000 		.4byte	.LASF47
 1685 03e4 01       		.byte	0x1
 1686 03e5 8B04     		.2byte	0x48b
 1687 03e7 01       		.byte	0x1
 1688 03e8 00000000 		.4byte	.LFB21
 1689 03ec 0E000000 		.4byte	.LFE21
 1690 03f0 38040000 		.4byte	.LLST21
 1691 03f4 01       		.byte	0x1
 1692 03f5 0C       		.uleb128 0xc
 1693 03f6 01       		.byte	0x1
 1694 03f7 1F010000 		.4byte	.LASF48
 1695 03fb 01       		.byte	0x1
 1696 03fc A904     		.2byte	0x4a9
 1697 03fe 01       		.byte	0x1
 1698 03ff 00000000 		.4byte	.LFB22
 1699 0403 2C000000 		.4byte	.LFE22
 1700 0407 64040000 		.4byte	.LLST22
 1701 040b 01       		.byte	0x1
 1702 040c 20040000 		.4byte	0x420
 1703 0410 0D       		.uleb128 0xd
 1704 0411 BE010000 		.4byte	.LASF28
 1705 0415 01       		.byte	0x1
 1706 0416 A904     		.2byte	0x4a9
 1707 0418 6F000000 		.4byte	0x6f
 1708 041c 02       		.byte	0x2
ARM GAS  C:\Users\trehans\AppData\Local\Temp\ccSsDmq0.s 			page 53


 1709 041d 91       		.byte	0x91
 1710 041e 77       		.sleb128 -9
 1711 041f 00       		.byte	0
 1712 0420 0E       		.uleb128 0xe
 1713 0421 01       		.byte	0x1
 1714 0422 00030000 		.4byte	.LASF49
 1715 0426 01       		.byte	0x1
 1716 0427 CC04     		.2byte	0x4cc
 1717 0429 01       		.byte	0x1
 1718 042a 6F000000 		.4byte	0x6f
 1719 042e 00000000 		.4byte	.LFB23
 1720 0432 38000000 		.4byte	.LFE23
 1721 0436 9C040000 		.4byte	.LLST23
 1722 043a 01       		.byte	0x1
 1723 043b 4F040000 		.4byte	0x44f
 1724 043f 0F       		.uleb128 0xf
 1725 0440 D9020000 		.4byte	.LASF29
 1726 0444 01       		.byte	0x1
 1727 0445 CE04     		.2byte	0x4ce
 1728 0447 6F000000 		.4byte	0x6f
 1729 044b 02       		.byte	0x2
 1730 044c 91       		.byte	0x91
 1731 044d 77       		.sleb128 -9
 1732 044e 00       		.byte	0
 1733 044f 13       		.uleb128 0x13
 1734 0450 43000000 		.4byte	.LASF50
 1735 0454 01       		.byte	0x1
 1736 0455 26       		.byte	0x26
 1737 0456 6F000000 		.4byte	0x6f
 1738 045a 01       		.byte	0x1
 1739 045b 05       		.byte	0x5
 1740 045c 03       		.byte	0x3
 1741 045d 00000000 		.4byte	SPI_initVar
 1742 0461 13       		.uleb128 0x13
 1743 0462 9B000000 		.4byte	.LASF51
 1744 0466 01       		.byte	0x1
 1745 0467 28       		.byte	0x28
 1746 0468 A5000000 		.4byte	0xa5
 1747 046c 01       		.byte	0x1
 1748 046d 05       		.byte	0x5
 1749 046e 03       		.byte	0x3
 1750 046f 00000000 		.4byte	SPI_swStatusTx
 1751 0473 13       		.uleb128 0x13
 1752 0474 7A000000 		.4byte	.LASF52
 1753 0478 01       		.byte	0x1
 1754 0479 29       		.byte	0x29
 1755 047a A5000000 		.4byte	0xa5
 1756 047e 01       		.byte	0x1
 1757 047f 05       		.byte	0x5
 1758 0480 03       		.byte	0x3
 1759 0481 00000000 		.4byte	SPI_swStatusRx
 1760 0485 00       		.byte	0
 1761              		.section	.debug_abbrev,"",%progbits
 1762              	.Ldebug_abbrev0:
 1763 0000 01       		.uleb128 0x1
 1764 0001 11       		.uleb128 0x11
 1765 0002 01       		.byte	0x1
ARM GAS  C:\Users\trehans\AppData\Local\Temp\ccSsDmq0.s 			page 54


 1766 0003 25       		.uleb128 0x25
 1767 0004 0E       		.uleb128 0xe
 1768 0005 13       		.uleb128 0x13
 1769 0006 0B       		.uleb128 0xb
 1770 0007 03       		.uleb128 0x3
 1771 0008 0E       		.uleb128 0xe
 1772 0009 1B       		.uleb128 0x1b
 1773 000a 0E       		.uleb128 0xe
 1774 000b 55       		.uleb128 0x55
 1775 000c 06       		.uleb128 0x6
 1776 000d 11       		.uleb128 0x11
 1777 000e 01       		.uleb128 0x1
 1778 000f 52       		.uleb128 0x52
 1779 0010 01       		.uleb128 0x1
 1780 0011 10       		.uleb128 0x10
 1781 0012 06       		.uleb128 0x6
 1782 0013 00       		.byte	0
 1783 0014 00       		.byte	0
 1784 0015 02       		.uleb128 0x2
 1785 0016 24       		.uleb128 0x24
 1786 0017 00       		.byte	0
 1787 0018 0B       		.uleb128 0xb
 1788 0019 0B       		.uleb128 0xb
 1789 001a 3E       		.uleb128 0x3e
 1790 001b 0B       		.uleb128 0xb
 1791 001c 03       		.uleb128 0x3
 1792 001d 0E       		.uleb128 0xe
 1793 001e 00       		.byte	0
 1794 001f 00       		.byte	0
 1795 0020 03       		.uleb128 0x3
 1796 0021 24       		.uleb128 0x24
 1797 0022 00       		.byte	0
 1798 0023 0B       		.uleb128 0xb
 1799 0024 0B       		.uleb128 0xb
 1800 0025 3E       		.uleb128 0x3e
 1801 0026 0B       		.uleb128 0xb
 1802 0027 03       		.uleb128 0x3
 1803 0028 08       		.uleb128 0x8
 1804 0029 00       		.byte	0
 1805 002a 00       		.byte	0
 1806 002b 04       		.uleb128 0x4
 1807 002c 16       		.uleb128 0x16
 1808 002d 00       		.byte	0
 1809 002e 03       		.uleb128 0x3
 1810 002f 0E       		.uleb128 0xe
 1811 0030 3A       		.uleb128 0x3a
 1812 0031 0B       		.uleb128 0xb
 1813 0032 3B       		.uleb128 0x3b
 1814 0033 0B       		.uleb128 0xb
 1815 0034 49       		.uleb128 0x49
 1816 0035 13       		.uleb128 0x13
 1817 0036 00       		.byte	0
 1818 0037 00       		.byte	0
 1819 0038 05       		.uleb128 0x5
 1820 0039 35       		.uleb128 0x35
 1821 003a 00       		.byte	0
 1822 003b 49       		.uleb128 0x49
ARM GAS  C:\Users\trehans\AppData\Local\Temp\ccSsDmq0.s 			page 55


 1823 003c 13       		.uleb128 0x13
 1824 003d 00       		.byte	0
 1825 003e 00       		.byte	0
 1826 003f 06       		.uleb128 0x6
 1827 0040 2E       		.uleb128 0x2e
 1828 0041 00       		.byte	0
 1829 0042 3F       		.uleb128 0x3f
 1830 0043 0C       		.uleb128 0xc
 1831 0044 03       		.uleb128 0x3
 1832 0045 0E       		.uleb128 0xe
 1833 0046 3A       		.uleb128 0x3a
 1834 0047 0B       		.uleb128 0xb
 1835 0048 3B       		.uleb128 0x3b
 1836 0049 0B       		.uleb128 0xb
 1837 004a 27       		.uleb128 0x27
 1838 004b 0C       		.uleb128 0xc
 1839 004c 11       		.uleb128 0x11
 1840 004d 01       		.uleb128 0x1
 1841 004e 12       		.uleb128 0x12
 1842 004f 01       		.uleb128 0x1
 1843 0050 40       		.uleb128 0x40
 1844 0051 06       		.uleb128 0x6
 1845 0052 9642     		.uleb128 0x2116
 1846 0054 0C       		.uleb128 0xc
 1847 0055 00       		.byte	0
 1848 0056 00       		.byte	0
 1849 0057 07       		.uleb128 0x7
 1850 0058 2E       		.uleb128 0x2e
 1851 0059 01       		.byte	0x1
 1852 005a 3F       		.uleb128 0x3f
 1853 005b 0C       		.uleb128 0xc
 1854 005c 03       		.uleb128 0x3
 1855 005d 0E       		.uleb128 0xe
 1856 005e 3A       		.uleb128 0x3a
 1857 005f 0B       		.uleb128 0xb
 1858 0060 3B       		.uleb128 0x3b
 1859 0061 0B       		.uleb128 0xb
 1860 0062 27       		.uleb128 0x27
 1861 0063 0C       		.uleb128 0xc
 1862 0064 11       		.uleb128 0x11
 1863 0065 01       		.uleb128 0x1
 1864 0066 12       		.uleb128 0x12
 1865 0067 01       		.uleb128 0x1
 1866 0068 40       		.uleb128 0x40
 1867 0069 06       		.uleb128 0x6
 1868 006a 9642     		.uleb128 0x2116
 1869 006c 0C       		.uleb128 0xc
 1870 006d 01       		.uleb128 0x1
 1871 006e 13       		.uleb128 0x13
 1872 006f 00       		.byte	0
 1873 0070 00       		.byte	0
 1874 0071 08       		.uleb128 0x8
 1875 0072 34       		.uleb128 0x34
 1876 0073 00       		.byte	0
 1877 0074 03       		.uleb128 0x3
 1878 0075 0E       		.uleb128 0xe
 1879 0076 3A       		.uleb128 0x3a
ARM GAS  C:\Users\trehans\AppData\Local\Temp\ccSsDmq0.s 			page 56


 1880 0077 0B       		.uleb128 0xb
 1881 0078 3B       		.uleb128 0x3b
 1882 0079 0B       		.uleb128 0xb
 1883 007a 49       		.uleb128 0x49
 1884 007b 13       		.uleb128 0x13
 1885 007c 02       		.uleb128 0x2
 1886 007d 0A       		.uleb128 0xa
 1887 007e 00       		.byte	0
 1888 007f 00       		.byte	0
 1889 0080 09       		.uleb128 0x9
 1890 0081 2E       		.uleb128 0x2e
 1891 0082 00       		.byte	0
 1892 0083 3F       		.uleb128 0x3f
 1893 0084 0C       		.uleb128 0xc
 1894 0085 03       		.uleb128 0x3
 1895 0086 0E       		.uleb128 0xe
 1896 0087 3A       		.uleb128 0x3a
 1897 0088 0B       		.uleb128 0xb
 1898 0089 3B       		.uleb128 0x3b
 1899 008a 0B       		.uleb128 0xb
 1900 008b 27       		.uleb128 0x27
 1901 008c 0C       		.uleb128 0xc
 1902 008d 11       		.uleb128 0x11
 1903 008e 01       		.uleb128 0x1
 1904 008f 12       		.uleb128 0x12
 1905 0090 01       		.uleb128 0x1
 1906 0091 40       		.uleb128 0x40
 1907 0092 06       		.uleb128 0x6
 1908 0093 9742     		.uleb128 0x2117
 1909 0095 0C       		.uleb128 0xc
 1910 0096 00       		.byte	0
 1911 0097 00       		.byte	0
 1912 0098 0A       		.uleb128 0xa
 1913 0099 2E       		.uleb128 0x2e
 1914 009a 00       		.byte	0
 1915 009b 3F       		.uleb128 0x3f
 1916 009c 0C       		.uleb128 0xc
 1917 009d 03       		.uleb128 0x3
 1918 009e 0E       		.uleb128 0xe
 1919 009f 3A       		.uleb128 0x3a
 1920 00a0 0B       		.uleb128 0xb
 1921 00a1 3B       		.uleb128 0x3b
 1922 00a2 05       		.uleb128 0x5
 1923 00a3 27       		.uleb128 0x27
 1924 00a4 0C       		.uleb128 0xc
 1925 00a5 11       		.uleb128 0x11
 1926 00a6 01       		.uleb128 0x1
 1927 00a7 12       		.uleb128 0x12
 1928 00a8 01       		.uleb128 0x1
 1929 00a9 40       		.uleb128 0x40
 1930 00aa 06       		.uleb128 0x6
 1931 00ab 9642     		.uleb128 0x2116
 1932 00ad 0C       		.uleb128 0xc
 1933 00ae 00       		.byte	0
 1934 00af 00       		.byte	0
 1935 00b0 0B       		.uleb128 0xb
 1936 00b1 2E       		.uleb128 0x2e
ARM GAS  C:\Users\trehans\AppData\Local\Temp\ccSsDmq0.s 			page 57


 1937 00b2 00       		.byte	0
 1938 00b3 3F       		.uleb128 0x3f
 1939 00b4 0C       		.uleb128 0xc
 1940 00b5 03       		.uleb128 0x3
 1941 00b6 0E       		.uleb128 0xe
 1942 00b7 3A       		.uleb128 0x3a
 1943 00b8 0B       		.uleb128 0xb
 1944 00b9 3B       		.uleb128 0x3b
 1945 00ba 05       		.uleb128 0x5
 1946 00bb 27       		.uleb128 0x27
 1947 00bc 0C       		.uleb128 0xc
 1948 00bd 11       		.uleb128 0x11
 1949 00be 01       		.uleb128 0x1
 1950 00bf 12       		.uleb128 0x12
 1951 00c0 01       		.uleb128 0x1
 1952 00c1 40       		.uleb128 0x40
 1953 00c2 06       		.uleb128 0x6
 1954 00c3 9742     		.uleb128 0x2117
 1955 00c5 0C       		.uleb128 0xc
 1956 00c6 00       		.byte	0
 1957 00c7 00       		.byte	0
 1958 00c8 0C       		.uleb128 0xc
 1959 00c9 2E       		.uleb128 0x2e
 1960 00ca 01       		.byte	0x1
 1961 00cb 3F       		.uleb128 0x3f
 1962 00cc 0C       		.uleb128 0xc
 1963 00cd 03       		.uleb128 0x3
 1964 00ce 0E       		.uleb128 0xe
 1965 00cf 3A       		.uleb128 0x3a
 1966 00d0 0B       		.uleb128 0xb
 1967 00d1 3B       		.uleb128 0x3b
 1968 00d2 05       		.uleb128 0x5
 1969 00d3 27       		.uleb128 0x27
 1970 00d4 0C       		.uleb128 0xc
 1971 00d5 11       		.uleb128 0x11
 1972 00d6 01       		.uleb128 0x1
 1973 00d7 12       		.uleb128 0x12
 1974 00d8 01       		.uleb128 0x1
 1975 00d9 40       		.uleb128 0x40
 1976 00da 06       		.uleb128 0x6
 1977 00db 9742     		.uleb128 0x2117
 1978 00dd 0C       		.uleb128 0xc
 1979 00de 01       		.uleb128 0x1
 1980 00df 13       		.uleb128 0x13
 1981 00e0 00       		.byte	0
 1982 00e1 00       		.byte	0
 1983 00e2 0D       		.uleb128 0xd
 1984 00e3 05       		.uleb128 0x5
 1985 00e4 00       		.byte	0
 1986 00e5 03       		.uleb128 0x3
 1987 00e6 0E       		.uleb128 0xe
 1988 00e7 3A       		.uleb128 0x3a
 1989 00e8 0B       		.uleb128 0xb
 1990 00e9 3B       		.uleb128 0x3b
 1991 00ea 05       		.uleb128 0x5
 1992 00eb 49       		.uleb128 0x49
 1993 00ec 13       		.uleb128 0x13
ARM GAS  C:\Users\trehans\AppData\Local\Temp\ccSsDmq0.s 			page 58


 1994 00ed 02       		.uleb128 0x2
 1995 00ee 0A       		.uleb128 0xa
 1996 00ef 00       		.byte	0
 1997 00f0 00       		.byte	0
 1998 00f1 0E       		.uleb128 0xe
 1999 00f2 2E       		.uleb128 0x2e
 2000 00f3 01       		.byte	0x1
 2001 00f4 3F       		.uleb128 0x3f
 2002 00f5 0C       		.uleb128 0xc
 2003 00f6 03       		.uleb128 0x3
 2004 00f7 0E       		.uleb128 0xe
 2005 00f8 3A       		.uleb128 0x3a
 2006 00f9 0B       		.uleb128 0xb
 2007 00fa 3B       		.uleb128 0x3b
 2008 00fb 05       		.uleb128 0x5
 2009 00fc 27       		.uleb128 0x27
 2010 00fd 0C       		.uleb128 0xc
 2011 00fe 49       		.uleb128 0x49
 2012 00ff 13       		.uleb128 0x13
 2013 0100 11       		.uleb128 0x11
 2014 0101 01       		.uleb128 0x1
 2015 0102 12       		.uleb128 0x12
 2016 0103 01       		.uleb128 0x1
 2017 0104 40       		.uleb128 0x40
 2018 0105 06       		.uleb128 0x6
 2019 0106 9742     		.uleb128 0x2117
 2020 0108 0C       		.uleb128 0xc
 2021 0109 01       		.uleb128 0x1
 2022 010a 13       		.uleb128 0x13
 2023 010b 00       		.byte	0
 2024 010c 00       		.byte	0
 2025 010d 0F       		.uleb128 0xf
 2026 010e 34       		.uleb128 0x34
 2027 010f 00       		.byte	0
 2028 0110 03       		.uleb128 0x3
 2029 0111 0E       		.uleb128 0xe
 2030 0112 3A       		.uleb128 0x3a
 2031 0113 0B       		.uleb128 0xb
 2032 0114 3B       		.uleb128 0x3b
 2033 0115 05       		.uleb128 0x5
 2034 0116 49       		.uleb128 0x49
 2035 0117 13       		.uleb128 0x13
 2036 0118 02       		.uleb128 0x2
 2037 0119 0A       		.uleb128 0xa
 2038 011a 00       		.byte	0
 2039 011b 00       		.byte	0
 2040 011c 10       		.uleb128 0x10
 2041 011d 2E       		.uleb128 0x2e
 2042 011e 01       		.byte	0x1
 2043 011f 3F       		.uleb128 0x3f
 2044 0120 0C       		.uleb128 0xc
 2045 0121 03       		.uleb128 0x3
 2046 0122 0E       		.uleb128 0xe
 2047 0123 3A       		.uleb128 0x3a
 2048 0124 0B       		.uleb128 0xb
 2049 0125 3B       		.uleb128 0x3b
 2050 0126 05       		.uleb128 0x5
ARM GAS  C:\Users\trehans\AppData\Local\Temp\ccSsDmq0.s 			page 59


 2051 0127 27       		.uleb128 0x27
 2052 0128 0C       		.uleb128 0xc
 2053 0129 11       		.uleb128 0x11
 2054 012a 01       		.uleb128 0x1
 2055 012b 12       		.uleb128 0x12
 2056 012c 01       		.uleb128 0x1
 2057 012d 40       		.uleb128 0x40
 2058 012e 06       		.uleb128 0x6
 2059 012f 9642     		.uleb128 0x2116
 2060 0131 0C       		.uleb128 0xc
 2061 0132 01       		.uleb128 0x1
 2062 0133 13       		.uleb128 0x13
 2063 0134 00       		.byte	0
 2064 0135 00       		.byte	0
 2065 0136 11       		.uleb128 0x11
 2066 0137 0F       		.uleb128 0xf
 2067 0138 00       		.byte	0
 2068 0139 0B       		.uleb128 0xb
 2069 013a 0B       		.uleb128 0xb
 2070 013b 49       		.uleb128 0x49
 2071 013c 13       		.uleb128 0x13
 2072 013d 00       		.byte	0
 2073 013e 00       		.byte	0
 2074 013f 12       		.uleb128 0x12
 2075 0140 26       		.uleb128 0x26
 2076 0141 00       		.byte	0
 2077 0142 49       		.uleb128 0x49
 2078 0143 13       		.uleb128 0x13
 2079 0144 00       		.byte	0
 2080 0145 00       		.byte	0
 2081 0146 13       		.uleb128 0x13
 2082 0147 34       		.uleb128 0x34
 2083 0148 00       		.byte	0
 2084 0149 03       		.uleb128 0x3
 2085 014a 0E       		.uleb128 0xe
 2086 014b 3A       		.uleb128 0x3a
 2087 014c 0B       		.uleb128 0xb
 2088 014d 3B       		.uleb128 0x3b
 2089 014e 0B       		.uleb128 0xb
 2090 014f 49       		.uleb128 0x49
 2091 0150 13       		.uleb128 0x13
 2092 0151 3F       		.uleb128 0x3f
 2093 0152 0C       		.uleb128 0xc
 2094 0153 02       		.uleb128 0x2
 2095 0154 0A       		.uleb128 0xa
 2096 0155 00       		.byte	0
 2097 0156 00       		.byte	0
 2098 0157 00       		.byte	0
 2099              		.section	.debug_loc,"",%progbits
 2100              	.Ldebug_loc0:
 2101              	.LLST0:
 2102 0000 00000000 		.4byte	.LFB0
 2103 0004 02000000 		.4byte	.LCFI0
 2104 0008 0200     		.2byte	0x2
 2105 000a 7D       		.byte	0x7d
 2106 000b 00       		.sleb128 0
 2107 000c 02000000 		.4byte	.LCFI0
ARM GAS  C:\Users\trehans\AppData\Local\Temp\ccSsDmq0.s 			page 60


 2108 0010 04000000 		.4byte	.LCFI1
 2109 0014 0200     		.2byte	0x2
 2110 0016 7D       		.byte	0x7d
 2111 0017 08       		.sleb128 8
 2112 0018 04000000 		.4byte	.LCFI1
 2113 001c 50000000 		.4byte	.LFE0
 2114 0020 0200     		.2byte	0x2
 2115 0022 77       		.byte	0x77
 2116 0023 08       		.sleb128 8
 2117 0024 00000000 		.4byte	0
 2118 0028 00000000 		.4byte	0
 2119              	.LLST1:
 2120 002c 00000000 		.4byte	.LFB1
 2121 0030 02000000 		.4byte	.LCFI2
 2122 0034 0200     		.2byte	0x2
 2123 0036 7D       		.byte	0x7d
 2124 0037 00       		.sleb128 0
 2125 0038 02000000 		.4byte	.LCFI2
 2126 003c 04000000 		.4byte	.LCFI3
 2127 0040 0200     		.2byte	0x2
 2128 0042 7D       		.byte	0x7d
 2129 0043 0C       		.sleb128 12
 2130 0044 04000000 		.4byte	.LCFI3
 2131 0048 06000000 		.4byte	.LCFI4
 2132 004c 0200     		.2byte	0x2
 2133 004e 7D       		.byte	0x7d
 2134 004f 18       		.sleb128 24
 2135 0050 06000000 		.4byte	.LCFI4
 2136 0054 64000000 		.4byte	.LFE1
 2137 0058 0200     		.2byte	0x2
 2138 005a 77       		.byte	0x77
 2139 005b 18       		.sleb128 24
 2140 005c 00000000 		.4byte	0
 2141 0060 00000000 		.4byte	0
 2142              	.LLST2:
 2143 0064 00000000 		.4byte	.LFB2
 2144 0068 02000000 		.4byte	.LCFI5
 2145 006c 0200     		.2byte	0x2
 2146 006e 7D       		.byte	0x7d
 2147 006f 00       		.sleb128 0
 2148 0070 02000000 		.4byte	.LCFI5
 2149 0074 04000000 		.4byte	.LCFI6
 2150 0078 0200     		.2byte	0x2
 2151 007a 7D       		.byte	0x7d
 2152 007b 08       		.sleb128 8
 2153 007c 04000000 		.4byte	.LCFI6
 2154 0080 24000000 		.4byte	.LFE2
 2155 0084 0200     		.2byte	0x2
 2156 0086 77       		.byte	0x77
 2157 0087 08       		.sleb128 8
 2158 0088 00000000 		.4byte	0
 2159 008c 00000000 		.4byte	0
 2160              	.LLST3:
 2161 0090 00000000 		.4byte	.LFB3
 2162 0094 02000000 		.4byte	.LCFI7
 2163 0098 0200     		.2byte	0x2
 2164 009a 7D       		.byte	0x7d
ARM GAS  C:\Users\trehans\AppData\Local\Temp\ccSsDmq0.s 			page 61


 2165 009b 00       		.sleb128 0
 2166 009c 02000000 		.4byte	.LCFI7
 2167 00a0 04000000 		.4byte	.LCFI8
 2168 00a4 0200     		.2byte	0x2
 2169 00a6 7D       		.byte	0x7d
 2170 00a7 0C       		.sleb128 12
 2171 00a8 04000000 		.4byte	.LCFI8
 2172 00ac 06000000 		.4byte	.LCFI9
 2173 00b0 0200     		.2byte	0x2
 2174 00b2 7D       		.byte	0x7d
 2175 00b3 18       		.sleb128 24
 2176 00b4 06000000 		.4byte	.LCFI9
 2177 00b8 50000000 		.4byte	.LFE3
 2178 00bc 0200     		.2byte	0x2
 2179 00be 77       		.byte	0x77
 2180 00bf 18       		.sleb128 24
 2181 00c0 00000000 		.4byte	0
 2182 00c4 00000000 		.4byte	0
 2183              	.LLST4:
 2184 00c8 00000000 		.4byte	.LFB4
 2185 00cc 02000000 		.4byte	.LCFI10
 2186 00d0 0200     		.2byte	0x2
 2187 00d2 7D       		.byte	0x7d
 2188 00d3 00       		.sleb128 0
 2189 00d4 02000000 		.4byte	.LCFI10
 2190 00d8 04000000 		.4byte	.LCFI11
 2191 00dc 0200     		.2byte	0x2
 2192 00de 7D       		.byte	0x7d
 2193 00df 08       		.sleb128 8
 2194 00e0 04000000 		.4byte	.LCFI11
 2195 00e4 08000000 		.4byte	.LFE4
 2196 00e8 0200     		.2byte	0x2
 2197 00ea 77       		.byte	0x77
 2198 00eb 08       		.sleb128 8
 2199 00ec 00000000 		.4byte	0
 2200 00f0 00000000 		.4byte	0
 2201              	.LLST5:
 2202 00f4 00000000 		.4byte	.LFB5
 2203 00f8 02000000 		.4byte	.LCFI12
 2204 00fc 0200     		.2byte	0x2
 2205 00fe 7D       		.byte	0x7d
 2206 00ff 00       		.sleb128 0
 2207 0100 02000000 		.4byte	.LCFI12
 2208 0104 04000000 		.4byte	.LCFI13
 2209 0108 0200     		.2byte	0x2
 2210 010a 7D       		.byte	0x7d
 2211 010b 08       		.sleb128 8
 2212 010c 04000000 		.4byte	.LCFI13
 2213 0110 0E000000 		.4byte	.LFE5
 2214 0114 0200     		.2byte	0x2
 2215 0116 77       		.byte	0x77
 2216 0117 08       		.sleb128 8
 2217 0118 00000000 		.4byte	0
 2218 011c 00000000 		.4byte	0
 2219              	.LLST6:
 2220 0120 00000000 		.4byte	.LFB6
 2221 0124 02000000 		.4byte	.LCFI14
ARM GAS  C:\Users\trehans\AppData\Local\Temp\ccSsDmq0.s 			page 62


 2222 0128 0200     		.2byte	0x2
 2223 012a 7D       		.byte	0x7d
 2224 012b 00       		.sleb128 0
 2225 012c 02000000 		.4byte	.LCFI14
 2226 0130 04000000 		.4byte	.LCFI15
 2227 0134 0200     		.2byte	0x2
 2228 0136 7D       		.byte	0x7d
 2229 0137 08       		.sleb128 8
 2230 0138 04000000 		.4byte	.LCFI15
 2231 013c 08000000 		.4byte	.LFE6
 2232 0140 0200     		.2byte	0x2
 2233 0142 77       		.byte	0x77
 2234 0143 08       		.sleb128 8
 2235 0144 00000000 		.4byte	0
 2236 0148 00000000 		.4byte	0
 2237              	.LLST7:
 2238 014c 00000000 		.4byte	.LFB7
 2239 0150 02000000 		.4byte	.LCFI16
 2240 0154 0200     		.2byte	0x2
 2241 0156 7D       		.byte	0x7d
 2242 0157 00       		.sleb128 0
 2243 0158 02000000 		.4byte	.LCFI16
 2244 015c 04000000 		.4byte	.LCFI17
 2245 0160 0200     		.2byte	0x2
 2246 0162 7D       		.byte	0x7d
 2247 0163 08       		.sleb128 8
 2248 0164 04000000 		.4byte	.LCFI17
 2249 0168 0E000000 		.4byte	.LFE7
 2250 016c 0200     		.2byte	0x2
 2251 016e 77       		.byte	0x77
 2252 016f 08       		.sleb128 8
 2253 0170 00000000 		.4byte	0
 2254 0174 00000000 		.4byte	0
 2255              	.LLST8:
 2256 0178 00000000 		.4byte	.LFB8
 2257 017c 02000000 		.4byte	.LCFI18
 2258 0180 0200     		.2byte	0x2
 2259 0182 7D       		.byte	0x7d
 2260 0183 00       		.sleb128 0
 2261 0184 02000000 		.4byte	.LCFI18
 2262 0188 04000000 		.4byte	.LCFI19
 2263 018c 0200     		.2byte	0x2
 2264 018e 7D       		.byte	0x7d
 2265 018f 08       		.sleb128 8
 2266 0190 04000000 		.4byte	.LCFI19
 2267 0194 06000000 		.4byte	.LCFI20
 2268 0198 0200     		.2byte	0x2
 2269 019a 7D       		.byte	0x7d
 2270 019b 10       		.sleb128 16
 2271 019c 06000000 		.4byte	.LCFI20
 2272 01a0 20000000 		.4byte	.LFE8
 2273 01a4 0200     		.2byte	0x2
 2274 01a6 77       		.byte	0x77
 2275 01a7 10       		.sleb128 16
 2276 01a8 00000000 		.4byte	0
 2277 01ac 00000000 		.4byte	0
 2278              	.LLST9:
ARM GAS  C:\Users\trehans\AppData\Local\Temp\ccSsDmq0.s 			page 63


 2279 01b0 00000000 		.4byte	.LFB9
 2280 01b4 02000000 		.4byte	.LCFI21
 2281 01b8 0200     		.2byte	0x2
 2282 01ba 7D       		.byte	0x7d
 2283 01bb 00       		.sleb128 0
 2284 01bc 02000000 		.4byte	.LCFI21
 2285 01c0 04000000 		.4byte	.LCFI22
 2286 01c4 0200     		.2byte	0x2
 2287 01c6 7D       		.byte	0x7d
 2288 01c7 08       		.sleb128 8
 2289 01c8 04000000 		.4byte	.LCFI22
 2290 01cc 06000000 		.4byte	.LCFI23
 2291 01d0 0200     		.2byte	0x2
 2292 01d2 7D       		.byte	0x7d
 2293 01d3 10       		.sleb128 16
 2294 01d4 06000000 		.4byte	.LCFI23
 2295 01d8 20000000 		.4byte	.LFE9
 2296 01dc 0200     		.2byte	0x2
 2297 01de 77       		.byte	0x77
 2298 01df 10       		.sleb128 16
 2299 01e0 00000000 		.4byte	0
 2300 01e4 00000000 		.4byte	0
 2301              	.LLST10:
 2302 01e8 00000000 		.4byte	.LFB10
 2303 01ec 02000000 		.4byte	.LCFI24
 2304 01f0 0200     		.2byte	0x2
 2305 01f2 7D       		.byte	0x7d
 2306 01f3 00       		.sleb128 0
 2307 01f4 02000000 		.4byte	.LCFI24
 2308 01f8 04000000 		.4byte	.LCFI25
 2309 01fc 0200     		.2byte	0x2
 2310 01fe 7D       		.byte	0x7d
 2311 01ff 08       		.sleb128 8
 2312 0200 04000000 		.4byte	.LCFI25
 2313 0204 06000000 		.4byte	.LCFI26
 2314 0208 0200     		.2byte	0x2
 2315 020a 7D       		.byte	0x7d
 2316 020b 10       		.sleb128 16
 2317 020c 06000000 		.4byte	.LCFI26
 2318 0210 20000000 		.4byte	.LFE10
 2319 0214 0200     		.2byte	0x2
 2320 0216 77       		.byte	0x77
 2321 0217 10       		.sleb128 16
 2322 0218 00000000 		.4byte	0
 2323 021c 00000000 		.4byte	0
 2324              	.LLST11:
 2325 0220 00000000 		.4byte	.LFB11
 2326 0224 02000000 		.4byte	.LCFI27
 2327 0228 0200     		.2byte	0x2
 2328 022a 7D       		.byte	0x7d
 2329 022b 00       		.sleb128 0
 2330 022c 02000000 		.4byte	.LCFI27
 2331 0230 04000000 		.4byte	.LCFI28
 2332 0234 0200     		.2byte	0x2
 2333 0236 7D       		.byte	0x7d
 2334 0237 08       		.sleb128 8
 2335 0238 04000000 		.4byte	.LCFI28
ARM GAS  C:\Users\trehans\AppData\Local\Temp\ccSsDmq0.s 			page 64


 2336 023c 06000000 		.4byte	.LCFI29
 2337 0240 0200     		.2byte	0x2
 2338 0242 7D       		.byte	0x7d
 2339 0243 10       		.sleb128 16
 2340 0244 06000000 		.4byte	.LCFI29
 2341 0248 20000000 		.4byte	.LFE11
 2342 024c 0200     		.2byte	0x2
 2343 024e 77       		.byte	0x77
 2344 024f 10       		.sleb128 16
 2345 0250 00000000 		.4byte	0
 2346 0254 00000000 		.4byte	0
 2347              	.LLST12:
 2348 0258 00000000 		.4byte	.LFB12
 2349 025c 02000000 		.4byte	.LCFI30
 2350 0260 0200     		.2byte	0x2
 2351 0262 7D       		.byte	0x7d
 2352 0263 00       		.sleb128 0
 2353 0264 02000000 		.4byte	.LCFI30
 2354 0268 04000000 		.4byte	.LCFI31
 2355 026c 0200     		.2byte	0x2
 2356 026e 7D       		.byte	0x7d
 2357 026f 08       		.sleb128 8
 2358 0270 04000000 		.4byte	.LCFI31
 2359 0274 06000000 		.4byte	.LCFI32
 2360 0278 0200     		.2byte	0x2
 2361 027a 7D       		.byte	0x7d
 2362 027b 10       		.sleb128 16
 2363 027c 06000000 		.4byte	.LCFI32
 2364 0280 34000000 		.4byte	.LFE12
 2365 0284 0200     		.2byte	0x2
 2366 0286 77       		.byte	0x77
 2367 0287 10       		.sleb128 16
 2368 0288 00000000 		.4byte	0
 2369 028c 00000000 		.4byte	0
 2370              	.LLST13:
 2371 0290 00000000 		.4byte	.LFB13
 2372 0294 02000000 		.4byte	.LCFI33
 2373 0298 0200     		.2byte	0x2
 2374 029a 7D       		.byte	0x7d
 2375 029b 00       		.sleb128 0
 2376 029c 02000000 		.4byte	.LCFI33
 2377 02a0 04000000 		.4byte	.LCFI34
 2378 02a4 0200     		.2byte	0x2
 2379 02a6 7D       		.byte	0x7d
 2380 02a7 08       		.sleb128 8
 2381 02a8 04000000 		.4byte	.LCFI34
 2382 02ac 06000000 		.4byte	.LCFI35
 2383 02b0 0200     		.2byte	0x2
 2384 02b2 7D       		.byte	0x7d
 2385 02b3 10       		.sleb128 16
 2386 02b4 06000000 		.4byte	.LCFI35
 2387 02b8 20000000 		.4byte	.LFE13
 2388 02bc 0200     		.2byte	0x2
 2389 02be 77       		.byte	0x77
 2390 02bf 10       		.sleb128 16
 2391 02c0 00000000 		.4byte	0
 2392 02c4 00000000 		.4byte	0
ARM GAS  C:\Users\trehans\AppData\Local\Temp\ccSsDmq0.s 			page 65


 2393              	.LLST14:
 2394 02c8 00000000 		.4byte	.LFB14
 2395 02cc 02000000 		.4byte	.LCFI36
 2396 02d0 0200     		.2byte	0x2
 2397 02d2 7D       		.byte	0x7d
 2398 02d3 00       		.sleb128 0
 2399 02d4 02000000 		.4byte	.LCFI36
 2400 02d8 04000000 		.4byte	.LCFI37
 2401 02dc 0200     		.2byte	0x2
 2402 02de 7D       		.byte	0x7d
 2403 02df 08       		.sleb128 8
 2404 02e0 04000000 		.4byte	.LCFI37
 2405 02e4 06000000 		.4byte	.LCFI38
 2406 02e8 0200     		.2byte	0x2
 2407 02ea 7D       		.byte	0x7d
 2408 02eb 10       		.sleb128 16
 2409 02ec 06000000 		.4byte	.LCFI38
 2410 02f0 30000000 		.4byte	.LFE14
 2411 02f4 0200     		.2byte	0x2
 2412 02f6 77       		.byte	0x77
 2413 02f7 10       		.sleb128 16
 2414 02f8 00000000 		.4byte	0
 2415 02fc 00000000 		.4byte	0
 2416              	.LLST15:
 2417 0300 00000000 		.4byte	.LFB15
 2418 0304 02000000 		.4byte	.LCFI39
 2419 0308 0200     		.2byte	0x2
 2420 030a 7D       		.byte	0x7d
 2421 030b 00       		.sleb128 0
 2422 030c 02000000 		.4byte	.LCFI39
 2423 0310 04000000 		.4byte	.LCFI40
 2424 0314 0200     		.2byte	0x2
 2425 0316 7D       		.byte	0x7d
 2426 0317 08       		.sleb128 8
 2427 0318 04000000 		.4byte	.LCFI40
 2428 031c 06000000 		.4byte	.LCFI41
 2429 0320 0200     		.2byte	0x2
 2430 0322 7D       		.byte	0x7d
 2431 0323 10       		.sleb128 16
 2432 0324 06000000 		.4byte	.LCFI41
 2433 0328 48000000 		.4byte	.LFE15
 2434 032c 0200     		.2byte	0x2
 2435 032e 77       		.byte	0x77
 2436 032f 10       		.sleb128 16
 2437 0330 00000000 		.4byte	0
 2438 0334 00000000 		.4byte	0
 2439              	.LLST16:
 2440 0338 00000000 		.4byte	.LFB16
 2441 033c 02000000 		.4byte	.LCFI42
 2442 0340 0200     		.2byte	0x2
 2443 0342 7D       		.byte	0x7d
 2444 0343 00       		.sleb128 0
 2445 0344 02000000 		.4byte	.LCFI42
 2446 0348 04000000 		.4byte	.LCFI43
 2447 034c 0200     		.2byte	0x2
 2448 034e 7D       		.byte	0x7d
 2449 034f 08       		.sleb128 8
ARM GAS  C:\Users\trehans\AppData\Local\Temp\ccSsDmq0.s 			page 66


 2450 0350 04000000 		.4byte	.LCFI43
 2451 0354 24000000 		.4byte	.LFE16
 2452 0358 0200     		.2byte	0x2
 2453 035a 77       		.byte	0x77
 2454 035b 08       		.sleb128 8
 2455 035c 00000000 		.4byte	0
 2456 0360 00000000 		.4byte	0
 2457              	.LLST17:
 2458 0364 00000000 		.4byte	.LFB17
 2459 0368 02000000 		.4byte	.LCFI44
 2460 036c 0200     		.2byte	0x2
 2461 036e 7D       		.byte	0x7d
 2462 036f 00       		.sleb128 0
 2463 0370 02000000 		.4byte	.LCFI44
 2464 0374 04000000 		.4byte	.LCFI45
 2465 0378 0200     		.2byte	0x2
 2466 037a 7D       		.byte	0x7d
 2467 037b 0C       		.sleb128 12
 2468 037c 04000000 		.4byte	.LCFI45
 2469 0380 06000000 		.4byte	.LCFI46
 2470 0384 0200     		.2byte	0x2
 2471 0386 7D       		.byte	0x7d
 2472 0387 18       		.sleb128 24
 2473 0388 06000000 		.4byte	.LCFI46
 2474 038c 68000000 		.4byte	.LFE17
 2475 0390 0200     		.2byte	0x2
 2476 0392 77       		.byte	0x77
 2477 0393 18       		.sleb128 24
 2478 0394 00000000 		.4byte	0
 2479 0398 00000000 		.4byte	0
 2480              	.LLST18:
 2481 039c 00000000 		.4byte	.LFB18
 2482 03a0 02000000 		.4byte	.LCFI47
 2483 03a4 0200     		.2byte	0x2
 2484 03a6 7D       		.byte	0x7d
 2485 03a7 00       		.sleb128 0
 2486 03a8 02000000 		.4byte	.LCFI47
 2487 03ac 04000000 		.4byte	.LCFI48
 2488 03b0 0200     		.2byte	0x2
 2489 03b2 7D       		.byte	0x7d
 2490 03b3 08       		.sleb128 8
 2491 03b4 04000000 		.4byte	.LCFI48
 2492 03b8 06000000 		.4byte	.LCFI49
 2493 03bc 0200     		.2byte	0x2
 2494 03be 7D       		.byte	0x7d
 2495 03bf 18       		.sleb128 24
 2496 03c0 06000000 		.4byte	.LCFI49
 2497 03c4 52000000 		.4byte	.LFE18
 2498 03c8 0200     		.2byte	0x2
 2499 03ca 77       		.byte	0x77
 2500 03cb 18       		.sleb128 24
 2501 03cc 00000000 		.4byte	0
 2502 03d0 00000000 		.4byte	0
 2503              	.LLST19:
 2504 03d4 00000000 		.4byte	.LFB19
 2505 03d8 02000000 		.4byte	.LCFI50
 2506 03dc 0200     		.2byte	0x2
ARM GAS  C:\Users\trehans\AppData\Local\Temp\ccSsDmq0.s 			page 67


 2507 03de 7D       		.byte	0x7d
 2508 03df 00       		.sleb128 0
 2509 03e0 02000000 		.4byte	.LCFI50
 2510 03e4 04000000 		.4byte	.LCFI51
 2511 03e8 0200     		.2byte	0x2
 2512 03ea 7D       		.byte	0x7d
 2513 03eb 0C       		.sleb128 12
 2514 03ec 04000000 		.4byte	.LCFI51
 2515 03f0 06000000 		.4byte	.LCFI52
 2516 03f4 0200     		.2byte	0x2
 2517 03f6 7D       		.byte	0x7d
 2518 03f7 18       		.sleb128 24
 2519 03f8 06000000 		.4byte	.LCFI52
 2520 03fc 84000000 		.4byte	.LFE19
 2521 0400 0200     		.2byte	0x2
 2522 0402 77       		.byte	0x77
 2523 0403 18       		.sleb128 24
 2524 0404 00000000 		.4byte	0
 2525 0408 00000000 		.4byte	0
 2526              	.LLST20:
 2527 040c 00000000 		.4byte	.LFB20
 2528 0410 02000000 		.4byte	.LCFI53
 2529 0414 0200     		.2byte	0x2
 2530 0416 7D       		.byte	0x7d
 2531 0417 00       		.sleb128 0
 2532 0418 02000000 		.4byte	.LCFI53
 2533 041c 04000000 		.4byte	.LCFI54
 2534 0420 0200     		.2byte	0x2
 2535 0422 7D       		.byte	0x7d
 2536 0423 08       		.sleb128 8
 2537 0424 04000000 		.4byte	.LCFI54
 2538 0428 0E000000 		.4byte	.LFE20
 2539 042c 0200     		.2byte	0x2
 2540 042e 77       		.byte	0x77
 2541 042f 08       		.sleb128 8
 2542 0430 00000000 		.4byte	0
 2543 0434 00000000 		.4byte	0
 2544              	.LLST21:
 2545 0438 00000000 		.4byte	.LFB21
 2546 043c 02000000 		.4byte	.LCFI55
 2547 0440 0200     		.2byte	0x2
 2548 0442 7D       		.byte	0x7d
 2549 0443 00       		.sleb128 0
 2550 0444 02000000 		.4byte	.LCFI55
 2551 0448 04000000 		.4byte	.LCFI56
 2552 044c 0200     		.2byte	0x2
 2553 044e 7D       		.byte	0x7d
 2554 044f 08       		.sleb128 8
 2555 0450 04000000 		.4byte	.LCFI56
 2556 0454 0E000000 		.4byte	.LFE21
 2557 0458 0200     		.2byte	0x2
 2558 045a 77       		.byte	0x77
 2559 045b 08       		.sleb128 8
 2560 045c 00000000 		.4byte	0
 2561 0460 00000000 		.4byte	0
 2562              	.LLST22:
 2563 0464 00000000 		.4byte	.LFB22
ARM GAS  C:\Users\trehans\AppData\Local\Temp\ccSsDmq0.s 			page 68


 2564 0468 02000000 		.4byte	.LCFI57
 2565 046c 0200     		.2byte	0x2
 2566 046e 7D       		.byte	0x7d
 2567 046f 00       		.sleb128 0
 2568 0470 02000000 		.4byte	.LCFI57
 2569 0474 04000000 		.4byte	.LCFI58
 2570 0478 0200     		.2byte	0x2
 2571 047a 7D       		.byte	0x7d
 2572 047b 08       		.sleb128 8
 2573 047c 04000000 		.4byte	.LCFI58
 2574 0480 06000000 		.4byte	.LCFI59
 2575 0484 0200     		.2byte	0x2
 2576 0486 7D       		.byte	0x7d
 2577 0487 10       		.sleb128 16
 2578 0488 06000000 		.4byte	.LCFI59
 2579 048c 2C000000 		.4byte	.LFE22
 2580 0490 0200     		.2byte	0x2
 2581 0492 77       		.byte	0x77
 2582 0493 10       		.sleb128 16
 2583 0494 00000000 		.4byte	0
 2584 0498 00000000 		.4byte	0
 2585              	.LLST23:
 2586 049c 00000000 		.4byte	.LFB23
 2587 04a0 02000000 		.4byte	.LCFI60
 2588 04a4 0200     		.2byte	0x2
 2589 04a6 7D       		.byte	0x7d
 2590 04a7 00       		.sleb128 0
 2591 04a8 02000000 		.4byte	.LCFI60
 2592 04ac 04000000 		.4byte	.LCFI61
 2593 04b0 0200     		.2byte	0x2
 2594 04b2 7D       		.byte	0x7d
 2595 04b3 08       		.sleb128 8
 2596 04b4 04000000 		.4byte	.LCFI61
 2597 04b8 06000000 		.4byte	.LCFI62
 2598 04bc 0200     		.2byte	0x2
 2599 04be 7D       		.byte	0x7d
 2600 04bf 10       		.sleb128 16
 2601 04c0 06000000 		.4byte	.LCFI62
 2602 04c4 38000000 		.4byte	.LFE23
 2603 04c8 0200     		.2byte	0x2
 2604 04ca 77       		.byte	0x77
 2605 04cb 10       		.sleb128 16
 2606 04cc 00000000 		.4byte	0
 2607 04d0 00000000 		.4byte	0
 2608              		.section	.debug_aranges,"",%progbits
 2609 0000 D4000000 		.4byte	0xd4
 2610 0004 0200     		.2byte	0x2
 2611 0006 00000000 		.4byte	.Ldebug_info0
 2612 000a 04       		.byte	0x4
 2613 000b 00       		.byte	0
 2614 000c 0000     		.2byte	0
 2615 000e 0000     		.2byte	0
 2616 0010 00000000 		.4byte	.LFB0
 2617 0014 50000000 		.4byte	.LFE0-.LFB0
 2618 0018 00000000 		.4byte	.LFB1
 2619 001c 64000000 		.4byte	.LFE1-.LFB1
 2620 0020 00000000 		.4byte	.LFB2
ARM GAS  C:\Users\trehans\AppData\Local\Temp\ccSsDmq0.s 			page 69


 2621 0024 24000000 		.4byte	.LFE2-.LFB2
 2622 0028 00000000 		.4byte	.LFB3
 2623 002c 50000000 		.4byte	.LFE3-.LFB3
 2624 0030 00000000 		.4byte	.LFB4
 2625 0034 08000000 		.4byte	.LFE4-.LFB4
 2626 0038 00000000 		.4byte	.LFB5
 2627 003c 0E000000 		.4byte	.LFE5-.LFB5
 2628 0040 00000000 		.4byte	.LFB6
 2629 0044 08000000 		.4byte	.LFE6-.LFB6
 2630 0048 00000000 		.4byte	.LFB7
 2631 004c 0E000000 		.4byte	.LFE7-.LFB7
 2632 0050 00000000 		.4byte	.LFB8
 2633 0054 20000000 		.4byte	.LFE8-.LFB8
 2634 0058 00000000 		.4byte	.LFB9
 2635 005c 20000000 		.4byte	.LFE9-.LFB9
 2636 0060 00000000 		.4byte	.LFB10
 2637 0064 20000000 		.4byte	.LFE10-.LFB10
 2638 0068 00000000 		.4byte	.LFB11
 2639 006c 20000000 		.4byte	.LFE11-.LFB11
 2640 0070 00000000 		.4byte	.LFB12
 2641 0074 34000000 		.4byte	.LFE12-.LFB12
 2642 0078 00000000 		.4byte	.LFB13
 2643 007c 20000000 		.4byte	.LFE13-.LFB13
 2644 0080 00000000 		.4byte	.LFB14
 2645 0084 30000000 		.4byte	.LFE14-.LFB14
 2646 0088 00000000 		.4byte	.LFB15
 2647 008c 48000000 		.4byte	.LFE15-.LFB15
 2648 0090 00000000 		.4byte	.LFB16
 2649 0094 24000000 		.4byte	.LFE16-.LFB16
 2650 0098 00000000 		.4byte	.LFB17
 2651 009c 68000000 		.4byte	.LFE17-.LFB17
 2652 00a0 00000000 		.4byte	.LFB18
 2653 00a4 52000000 		.4byte	.LFE18-.LFB18
 2654 00a8 00000000 		.4byte	.LFB19
 2655 00ac 84000000 		.4byte	.LFE19-.LFB19
 2656 00b0 00000000 		.4byte	.LFB20
 2657 00b4 0E000000 		.4byte	.LFE20-.LFB20
 2658 00b8 00000000 		.4byte	.LFB21
 2659 00bc 0E000000 		.4byte	.LFE21-.LFB21
 2660 00c0 00000000 		.4byte	.LFB22
 2661 00c4 2C000000 		.4byte	.LFE22-.LFB22
 2662 00c8 00000000 		.4byte	.LFB23
 2663 00cc 38000000 		.4byte	.LFE23-.LFB23
 2664 00d0 00000000 		.4byte	0
 2665 00d4 00000000 		.4byte	0
 2666              		.section	.debug_ranges,"",%progbits
 2667              	.Ldebug_ranges0:
 2668 0000 00000000 		.4byte	.LFB0
 2669 0004 50000000 		.4byte	.LFE0
 2670 0008 00000000 		.4byte	.LFB1
 2671 000c 64000000 		.4byte	.LFE1
 2672 0010 00000000 		.4byte	.LFB2
 2673 0014 24000000 		.4byte	.LFE2
 2674 0018 00000000 		.4byte	.LFB3
 2675 001c 50000000 		.4byte	.LFE3
 2676 0020 00000000 		.4byte	.LFB4
 2677 0024 08000000 		.4byte	.LFE4
ARM GAS  C:\Users\trehans\AppData\Local\Temp\ccSsDmq0.s 			page 70


 2678 0028 00000000 		.4byte	.LFB5
 2679 002c 0E000000 		.4byte	.LFE5
 2680 0030 00000000 		.4byte	.LFB6
 2681 0034 08000000 		.4byte	.LFE6
 2682 0038 00000000 		.4byte	.LFB7
 2683 003c 0E000000 		.4byte	.LFE7
 2684 0040 00000000 		.4byte	.LFB8
 2685 0044 20000000 		.4byte	.LFE8
 2686 0048 00000000 		.4byte	.LFB9
 2687 004c 20000000 		.4byte	.LFE9
 2688 0050 00000000 		.4byte	.LFB10
 2689 0054 20000000 		.4byte	.LFE10
 2690 0058 00000000 		.4byte	.LFB11
 2691 005c 20000000 		.4byte	.LFE11
 2692 0060 00000000 		.4byte	.LFB12
 2693 0064 34000000 		.4byte	.LFE12
 2694 0068 00000000 		.4byte	.LFB13
 2695 006c 20000000 		.4byte	.LFE13
 2696 0070 00000000 		.4byte	.LFB14
 2697 0074 30000000 		.4byte	.LFE14
 2698 0078 00000000 		.4byte	.LFB15
 2699 007c 48000000 		.4byte	.LFE15
 2700 0080 00000000 		.4byte	.LFB16
 2701 0084 24000000 		.4byte	.LFE16
 2702 0088 00000000 		.4byte	.LFB17
 2703 008c 68000000 		.4byte	.LFE17
 2704 0090 00000000 		.4byte	.LFB18
 2705 0094 52000000 		.4byte	.LFE18
 2706 0098 00000000 		.4byte	.LFB19
 2707 009c 84000000 		.4byte	.LFE19
 2708 00a0 00000000 		.4byte	.LFB20
 2709 00a4 0E000000 		.4byte	.LFE20
 2710 00a8 00000000 		.4byte	.LFB21
 2711 00ac 0E000000 		.4byte	.LFE21
 2712 00b0 00000000 		.4byte	.LFB22
 2713 00b4 2C000000 		.4byte	.LFE22
 2714 00b8 00000000 		.4byte	.LFB23
 2715 00bc 38000000 		.4byte	.LFE23
 2716 00c0 00000000 		.4byte	0
 2717 00c4 00000000 		.4byte	0
 2718              		.section	.debug_line,"",%progbits
 2719              	.Ldebug_line0:
 2720 0000 71020000 		.section	.debug_str,"MS",%progbits,1
 2720      02004200 
 2720      00000201 
 2720      FB0E0D00 
 2720      01010101 
 2721              	.LASF15:
 2722 0000 72656731 		.ascii	"reg16\000"
 2722      3600
 2723              	.LASF46:
 2724 0006 5350495F 		.ascii	"SPI_EnableInt\000"
 2724      456E6162 
 2724      6C65496E 
 2724      7400
 2725              	.LASF54:
 2726 0014 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\SPI.c\000"
ARM GAS  C:\Users\trehans\AppData\Local\Temp\ccSsDmq0.s 			page 71


 2726      6E657261 
 2726      7465645F 
 2726      536F7572 
 2726      63655C50 
 2727              	.LASF32:
 2728 0033 5350495F 		.ascii	"SPI_WriteTxData\000"
 2728      57726974 
 2728      65547844 
 2728      61746100 
 2729              	.LASF50:
 2730 0043 5350495F 		.ascii	"SPI_initVar\000"
 2730      696E6974 
 2730      56617200 
 2731              	.LASF34:
 2732 004f 5350495F 		.ascii	"SPI_ReadRxData\000"
 2732      52656164 
 2732      52784461 
 2732      746100
 2733              	.LASF3:
 2734 005e 73686F72 		.ascii	"short unsigned int\000"
 2734      7420756E 
 2734      7369676E 
 2734      65642069 
 2734      6E7400
 2735              	.LASF17:
 2736 0071 5350495F 		.ascii	"SPI_Init\000"
 2736      496E6974 
 2736      00
 2737              	.LASF52:
 2738 007a 5350495F 		.ascii	"SPI_swStatusRx\000"
 2738      73775374 
 2738      61747573 
 2738      527800
 2739              	.LASF40:
 2740 0089 5350495F 		.ascii	"SPI_ClearTxBuffer\000"
 2740      436C6561 
 2740      72547842 
 2740      75666665 
 2740      7200
 2741              	.LASF51:
 2742 009b 5350495F 		.ascii	"SPI_swStatusTx\000"
 2742      73775374 
 2742      61747573 
 2742      547800
 2743              	.LASF35:
 2744 00aa 72784461 		.ascii	"rxData\000"
 2744      746100
 2745              	.LASF55:
 2746 00b1 433A5C55 		.ascii	"C:\\Users\\trehans\\Documents\\SignAway\\Source\\PS"
 2746      73657273 
 2746      5C747265 
 2746      68616E73 
 2746      5C446F63 
 2747 00de 6F435C53 		.ascii	"oC\\SignatureVerifier\\SignatureVerifier.cydsn\000"
 2747      69676E61 
 2747      74757265 
 2747      56657269 
ARM GAS  C:\Users\trehans\AppData\Local\Temp\ccSsDmq0.s 			page 72


 2747      66696572 
 2748              	.LASF11:
 2749 010b 666C6F61 		.ascii	"float\000"
 2749      7400
 2750              	.LASF45:
 2751 0111 5350495F 		.ascii	"SPI_ClearFIFO\000"
 2751      436C6561 
 2751      72464946 
 2751      4F00
 2752              	.LASF48:
 2753 011f 5350495F 		.ascii	"SPI_SetInterruptMode\000"
 2753      53657449 
 2753      6E746572 
 2753      72757074 
 2753      4D6F6465 
 2754              	.LASF37:
 2755 0134 73697A65 		.ascii	"size\000"
 2755      00
 2756              	.LASF14:
 2757 0139 72656738 		.ascii	"reg8\000"
 2757      00
 2758              	.LASF25:
 2759 013e 5350495F 		.ascii	"SPI_DisableRxInt\000"
 2759      44697361 
 2759      626C6552 
 2759      78496E74 
 2759      00
 2760              	.LASF5:
 2761 014f 6C6F6E67 		.ascii	"long unsigned int\000"
 2761      20756E73 
 2761      69676E65 
 2761      6420696E 
 2761      7400
 2762              	.LASF9:
 2763 0161 75696E74 		.ascii	"uint8\000"
 2763      3800
 2764              	.LASF43:
 2765 0167 62797465 		.ascii	"byteCount\000"
 2765      436F756E 
 2765      7400
 2766              	.LASF30:
 2767 0171 5350495F 		.ascii	"SPI_ReadTxStatus\000"
 2767      52656164 
 2767      54785374 
 2767      61747573 
 2767      00
 2768              	.LASF22:
 2769 0182 5350495F 		.ascii	"SPI_EnableTxInt\000"
 2769      456E6162 
 2769      6C655478 
 2769      496E7400 
 2770              	.LASF1:
 2771 0192 756E7369 		.ascii	"unsigned char\000"
 2771      676E6564 
 2771      20636861 
 2771      7200
 2772              	.LASF12:
ARM GAS  C:\Users\trehans\AppData\Local\Temp\ccSsDmq0.s 			page 73


 2773 01a0 646F7562 		.ascii	"double\000"
 2773      6C6500
 2774              	.LASF27:
 2775 01a7 5350495F 		.ascii	"SPI_SetRxInterruptMode\000"
 2775      53657452 
 2775      78496E74 
 2775      65727275 
 2775      70744D6F 
 2776              	.LASF28:
 2777 01be 696E7453 		.ascii	"intSrc\000"
 2777      726300
 2778              	.LASF41:
 2779 01c5 5350495F 		.ascii	"SPI_PutArray\000"
 2779      50757441 
 2779      72726179 
 2779      00
 2780              	.LASF38:
 2781 01d2 5350495F 		.ascii	"SPI_GetTxBufferSize\000"
 2781      47657454 
 2781      78427566 
 2781      66657253 
 2781      697A6500 
 2782              	.LASF20:
 2783 01e6 5350495F 		.ascii	"SPI_Stop\000"
 2783      53746F70 
 2783      00
 2784              	.LASF10:
 2785 01ef 75696E74 		.ascii	"uint16\000"
 2785      313600
 2786              	.LASF36:
 2787 01f6 5350495F 		.ascii	"SPI_GetRxBufferSize\000"
 2787      47657452 
 2787      78427566 
 2787      66657253 
 2787      697A6500 
 2788              	.LASF8:
 2789 020a 756E7369 		.ascii	"unsigned int\000"
 2789      676E6564 
 2789      20696E74 
 2789      00
 2790              	.LASF26:
 2791 0217 5350495F 		.ascii	"SPI_SetTxInterruptMode\000"
 2791      53657454 
 2791      78496E74 
 2791      65727275 
 2791      70744D6F 
 2792              	.LASF7:
 2793 022e 6C6F6E67 		.ascii	"long long unsigned int\000"
 2793      206C6F6E 
 2793      6720756E 
 2793      7369676E 
 2793      65642069 
 2794              	.LASF44:
 2795 0245 62756649 		.ascii	"bufIndex\000"
 2795      6E646578 
 2795      00
 2796              	.LASF33:
ARM GAS  C:\Users\trehans\AppData\Local\Temp\ccSsDmq0.s 			page 74


 2797 024e 74784461 		.ascii	"txData\000"
 2797      746100
 2798              	.LASF39:
 2799 0255 5350495F 		.ascii	"SPI_ClearRxBuffer\000"
 2799      436C6561 
 2799      72527842 
 2799      75666665 
 2799      7200
 2800              	.LASF16:
 2801 0267 73697A65 		.ascii	"sizetype\000"
 2801      74797065 
 2801      00
 2802              	.LASF21:
 2803 0270 656E6162 		.ascii	"enableInterrupts\000"
 2803      6C65496E 
 2803      74657272 
 2803      75707473 
 2803      00
 2804              	.LASF6:
 2805 0281 6C6F6E67 		.ascii	"long long int\000"
 2805      206C6F6E 
 2805      6720696E 
 2805      7400
 2806              	.LASF13:
 2807 028f 63686172 		.ascii	"char\000"
 2807      00
 2808              	.LASF19:
 2809 0294 5350495F 		.ascii	"SPI_Enable\000"
 2809      456E6162 
 2809      6C6500
 2810              	.LASF47:
 2811 029f 5350495F 		.ascii	"SPI_DisableInt\000"
 2811      44697361 
 2811      626C6549 
 2811      6E7400
 2812              	.LASF2:
 2813 02ae 73686F72 		.ascii	"short int\000"
 2813      7420696E 
 2813      7400
 2814              	.LASF42:
 2815 02b8 62756666 		.ascii	"buffer\000"
 2815      657200
 2816              	.LASF24:
 2817 02bf 5350495F 		.ascii	"SPI_DisableTxInt\000"
 2817      44697361 
 2817      626C6554 
 2817      78496E74 
 2817      00
 2818              	.LASF4:
 2819 02d0 6C6F6E67 		.ascii	"long int\000"
 2819      20696E74 
 2819      00
 2820              	.LASF29:
 2821 02d9 746D7053 		.ascii	"tmpStatus\000"
 2821      74617475 
 2821      7300
 2822              	.LASF31:
ARM GAS  C:\Users\trehans\AppData\Local\Temp\ccSsDmq0.s 			page 75


 2823 02e3 5350495F 		.ascii	"SPI_ReadRxStatus\000"
 2823      52656164 
 2823      52785374 
 2823      61747573 
 2823      00
 2824              	.LASF0:
 2825 02f4 7369676E 		.ascii	"signed char\000"
 2825      65642063 
 2825      68617200 
 2826              	.LASF49:
 2827 0300 5350495F 		.ascii	"SPI_ReadStatus\000"
 2827      52656164 
 2827      53746174 
 2827      757300
 2828              	.LASF23:
 2829 030f 5350495F 		.ascii	"SPI_EnableRxInt\000"
 2829      456E6162 
 2829      6C655278 
 2829      496E7400 
 2830              	.LASF18:
 2831 031f 5350495F 		.ascii	"SPI_Start\000"
 2831      53746172 
 2831      7400
 2832              	.LASF53:
 2833 0329 474E5520 		.ascii	"GNU C 4.7.3 20130312 (release) [ARM/embedded-4_7-br"
 2833      4320342E 
 2833      372E3320 
 2833      32303133 
 2833      30333132 
 2834 035c 616E6368 		.ascii	"anch revision 196615]\000"
 2834      20726576 
 2834      6973696F 
 2834      6E203139 
 2834      36363135 
 2835              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.7.3 20130312 (release) [ARM/embedded-4_7-br
